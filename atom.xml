<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>张风捷特烈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.toly1994.com/"/>
  <updated>2020-05-03T14:09:46.000Z</updated>
  <id>http://blog.toly1994.com/</id>
  
  <author>
    <name>张风捷特烈</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter Unit 开源篇</title>
    <link href="http://blog.toly1994.com/unit.html"/>
    <id>http://blog.toly1994.com/unit.html</id>
    <published>2020-05-02T15:46:25.000Z</published>
    <updated>2020-05-03T14:09:46.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="零、前言"><a href="#零、前言" class="headerlink" title="零、前言"></a>零、前言</h4><blockquote><p> <code>FlutterUnit</code>终于和大家见面了，这将是<code>【张风捷特烈】</code>长期维护的一个项目<br><a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">欢迎star</a> : <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br><a href="https://github.com/toly1994328/FlutterUnit/releases" target="_blank" rel="noopener">可以在github 仓库里下载apk体验 : </a></p></blockquote><table><thead><tr><th>FlutterUnit.apk 下载</th><th>FlutterUnit mac版 下载</th><th>Github仓库地址</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/ewm/flutter_unit_ewm.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/ewm/flutter_unit_mac_ewm.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/ewm/flutter_unit_github.png" alt=""></td></tr></tbody></table><a id="more"></a><hr><h3 id="一、组件的展示页面"><a href="#一、组件的展示页面" class="headerlink" title="一、组件的展示页面"></a>一、组件的展示页面</h3><h4 id="1-首页与组件收录"><a href="#1-首页与组件收录" class="headerlink" title="1. 首页与组件收录"></a>1. 首页与组件收录</h4><ul><li>Flutter一共有356+组件，目前收录<code>组件213个</code>，并<code>根据个人感觉进行评星</code></li><li>将组件分为<code>七种家族</code>，对应<code>七种颜色</code>，上tab栏，点击切换七种家族组件。</li></ul><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/01.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/02.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/03.gif" alt=""></td></tr></tbody></table><hr><h4 id="2-组件详情页"><a href="#2-组件详情页" class="headerlink" title="2. 组件详情页"></a>2. 组件详情页</h4><ul><li>其中每个都有至少一个演示展现和代码展示，对于重要的组件会详细展现。  </li><li>希望尽量做到细致，如果有需要补充，欢迎联系我。或进行pr  </li></ul><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/04.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/05.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/06.jpeg" alt=""></td></tr><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/07.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/08.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/09.jpeg" alt=""></td></tr></tbody></table><hr><h4 id="3-组件的可操作性"><a href="#3-组件的可操作性" class="headerlink" title="3. 组件的可操作性"></a>3. 组件的可操作性</h4><ul><li><code>最重要的是: 所有的演示展现都是Flutter的组件形成的，而非图片，这就意味着可操作性更高。</code></li><li>对一些操作交互的组件或有可操作性的某些组件，<code>提供操作演示</code></li></ul><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/10.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/11.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/12.gif" alt=""></td></tr><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/13.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/14.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/15.gif" alt=""></td></tr></tbody></table><hr><h4 id="4-相关组件的关联切换"><a href="#4-相关组件的关联切换" class="headerlink" title="4. 相关组件的关联切换"></a>4. 相关组件的关联切换</h4><ul><li><code>相关组件通过link to 可以进行切换, 满足你的探索欲。</code>  </li><li>维护了一个link to 的栈，可以退出时返回上一个组件。</li></ul><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/16.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/17.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/18.gif" alt=""></td></tr></tbody></table><hr><h4 id="5-代码的查看和分享"><a href="#5-代码的查看和分享" class="headerlink" title="5. 代码的查看和分享"></a>5. 代码的查看和分享</h4><blockquote><p>激动人心的是，你可以通过右侧的图标<code>展开/隐藏 实现下面效果的代码</code><br>并且<code>支持分享</code>，如果你想亲自体验，so，easy ! 而且<code>代码高亮样式可以自定义</code>。</p></blockquote><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/19.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/20.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/21.gif" alt=""></td></tr></tbody></table><hr><h3 id="二、收藏集"><a href="#二、收藏集" class="headerlink" title="二、收藏集"></a>二、收藏集</h3><blockquote><p>收藏夹设计的初衷是: Flutter中的组件非常多，分类页并不明确<br>作为<code>集卡癖</code>的我很想有个收藏的接口，让我能自由收藏分类。<br>应用中默认给出了12种分类方式，也就是12个收藏夹，<code>且210+组件已录入相应收藏夹</code><br>当然你可以自由的创建、修改、删除它们。收藏集还可以指定颜色用以区分。</p></blockquote><hr><h4 id="1-收藏集"><a href="#1-收藏集" class="headerlink" title="1.收藏集"></a>1.收藏集</h4><ul><li>支持添加收藏集，可指定<code>颜色和简介</code></li><li>支持修改收藏集</li><li>支持删除收藏集，删除后，原先被收藏的组件将会移除。</li></ul><table><thead><tr><th>添加收藏集</th><th>修改收藏集</th><th>删除收藏集</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/22.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/23.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/24.gif" alt=""></td></tr></tbody></table><hr><h4 id="4-组件的收藏与取消操作"><a href="#4-组件的收藏与取消操作" class="headerlink" title="4. 组件的收藏与取消操作"></a>4. 组件的收藏与取消操作</h4><blockquote><p> 数据库表采用<code>widget</code>与<code>category</code>一对多的结构，收录组件。<br>在每个详情页的右滑菜单中可以查看当前组件的收藏信息，<br>点击<code>收藏夹名称时</code>时可以切换该组件是否收录。<code>在收藏夹里面可以左滑删除</code></p></blockquote><table><thead><tr><th>删除与数据同步</th><th>组件加入收藏集</th><th>收藏集支持多选</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/25.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/26.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/27.gif" alt=""></td></tr></tbody></table><hr><h4 id="5-整体效果"><a href="#5-整体效果" class="headerlink" title="5.整体效果"></a>5.整体效果</h4><blockquote><p>对收藏夹页面整体进行优化，效果如下，保留了默认收藏集。<br>点击收藏夹会进入收藏的内容，每个item也可以点击进入详情页。</p></blockquote><table><thead><tr><th>滑动效果</th><th>切页效果</th><th>收藏详情</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/28.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/29.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/30.gif" alt=""></td></tr></tbody></table><hr><h4 id="6-彩蛋-左右滑栏"><a href="#6-彩蛋-左右滑栏" class="headerlink" title="6.彩蛋: 左右滑栏"></a>6.彩蛋: 左右滑栏</h4><blockquote><p>很多朋友反映左右滑栏与系统的<code>侧滑返回冲突</code>，所以特意设置了滑栏的小彩蛋<br><code>主页长按底部左侧按钮可打开左侧滑栏</code><br><code>主页长按底部右侧按钮可打开右侧滑栏</code><br><code>详情页长按顶部房子按钮可打开右侧滑栏</code></p></blockquote><table><thead><tr><th>长按右菜单滑页</th><th>长按左菜单滑页</th><th>详情内长按展示收藏菜单</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/31.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/32.gif" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/33.gif" alt=""></td></tr></tbody></table><hr><h3 id="三、搜索与全局配置"><a href="#三、搜索与全局配置" class="headerlink" title="三、搜索与全局配置"></a>三、搜索与全局配置</h3><h4 id="1-搜索功能"><a href="#1-搜索功能" class="headerlink" title="1.搜索功能"></a>1.搜索功能</h4><blockquote><p>由于Flutter中Widget比较杂乱，不太好分类，所以搜索是非常重要的<br>另外可以根据星级进行过滤，支持多选。</p></blockquote><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/33.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/34.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/35.png" alt=""></td></tr></tbody></table><h4 id="2-颜色主题"><a href="#2-颜色主题" class="headerlink" title="2. 颜色主题"></a>2. 颜色主题</h4><blockquote><p>只提供八种颜色，可在<code>右滑菜单页</code>的<code>我的主题</code>配置,<code>可以拓展</code></p></blockquote><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/36.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/37.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/38.png" alt=""></td></tr></tbody></table><hr><h4 id="3-字体配置"><a href="#3-字体配置" class="headerlink" title="3.字体配置"></a>3.字体配置</h4><blockquote><p>支持全局字体设置,<code>可以拓展</code></p></blockquote><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/39.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/40.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/41.png" alt=""></td></tr></tbody></table><hr><h4 id="4-item样式设置"><a href="#4-item样式设置" class="headerlink" title="4.item样式设置"></a>4.item样式设置</h4><blockquote><p>支持item样式设置，<code>可以拓展，支持征集</code></p></blockquote><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/42.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/43.jpeg" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/44.jpeg" alt=""></td></tr></tbody></table><hr><h4 id="5-代码面板风格设置"><a href="#5-代码面板风格设置" class="headerlink" title="5.代码面板风格设置"></a>5.代码面板风格设置</h4><blockquote><p>支持代码风格设置</p></blockquote><table><thead><tr><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/45.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/46.png" alt=""></td></tr><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/47.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/48.png" alt=""></td></tr></tbody></table><hr><h4 id="7-关于我与项目"><a href="#7-关于我与项目" class="headerlink" title="7.关于我与项目"></a>7.关于我与项目</h4><table><thead><tr><th>.</th><th>.</th><th>.</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/49.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/50.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/unit/show/51.png" alt=""></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><hr><h3 id="五、尾声"><a href="#五、尾声" class="headerlink" title="五、尾声"></a>五、尾声</h3><blockquote><p> FlutterUnit开源项目: <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br>我的公众号:编程之王<br>联系我–邮箱:<a href="mailto:1981462002@qq.com">1981462002@qq.com</a> –微信:zdl1994328<br>@张风捷特烈 2020.04.29<br>~ END ~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;#零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; &lt;code&gt;FlutterUnit&lt;/code&gt;终于和大家见面了，这将是&lt;code&gt;【张风捷特烈】&lt;/code&gt;长期维护的一个项目&lt;br&gt;&lt;a href=&quot;https://github.com/toly1994328/FlutterUnit&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;欢迎star&lt;/a&gt; : &lt;a href=&quot;https://github.com/toly1994328/FlutterUnit&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/toly1994328/FlutterUnit&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/toly1994328/FlutterUnit/releases&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;可以在github 仓库里下载apk体验 : &lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;FlutterUnit.apk 下载&lt;/th&gt;
&lt;th&gt;FlutterUnit mac版 下载&lt;/th&gt;
&lt;th&gt;Github仓库地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/ewm/flutter_unit_ewm.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/ewm/flutter_unit_mac_ewm.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/ewm/flutter_unit_github.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="FlutterUnit周边" scheme="http://blog.toly1994.com/categories/FlutterUnit%E5%91%A8%E8%BE%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Builder构造器</title>
    <link href="http://blog.toly1994.com/Builder.html"/>
    <id>http://blog.toly1994.com/Builder.html</id>
    <published>2020-05-02T13:46:25.000Z</published>
    <updated>2020-05-03T23:28:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、认识组件"><a href="#一、认识组件" class="headerlink" title="一、认识组件"></a>一、认识组件</h4><h5 id="1-Builder组件介绍"><a href="#1-Builder组件介绍" class="headerlink" title="1.Builder组件介绍"></a>1.Builder组件介绍</h5><blockquote><p>一个<code>不影响子组件占位空间</code>，<code>不具有显示性的组件</code>，存在的唯一价值是提供当前组件对应元素的上下文。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Builder/01.png" alt=""></p><a id="more"></a><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">名称:       Builder  构造器</span></span><br><span class="line"><span class="section">类型:       功能型</span></span><br><span class="line"><span class="section">重要性:     ☆☆</span></span><br><span class="line"><span class="section">相关组件:   【Scaffold】   </span></span><br><span class="line"><span class="section">家族:       Widget</span></span><br><span class="line">                |--- StatelessWidget</span><br></pre></td></tr></table></figure><hr><h5 id="2-组件属性一览"><a href="#2-组件属性一览" class="headerlink" title="2. 组件属性一览"></a>2. 组件属性一览</h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>key</td><td>Key</td><td>null</td><td>组件键</td></tr><tr><td>builder</td><td>WidgetBuilder</td><td>@required</td><td>组件构造器</td></tr></tbody></table><blockquote><p>WidgetBuilder是一个接受<code>BuildContext</code>的回调函数，可以提供当前组件元素所在的上下文。<br>由于组件build方法中的context是上级回调来的，如果在本组件类中<code>Scaffold.of(context)</code>弹出snackbar等时，则无法获得ScaffoldState。<code>可以使用Builder将context下沉一层，从而可以上溯拿到ScaffoldState</code>。</p></blockquote><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typedef WidgetBuilder = Widget <span class="function"><span class="keyword">Function</span><span class="params">(BuildContext context)</span>;</span></span><br></pre></td></tr></table></figure><hr><h4 id="二、使用组件"><a href="#二、使用组件" class="headerlink" title="二、使用组件"></a>二、使用组件</h4><h5 id="1-应用于Scaffold-of-context"><a href="#1-应用于Scaffold-of-context" class="headerlink" title="1. 应用于Scaffold.of(context)"></a>1. <code>应用于Scaffold.of(context)</code></h5><blockquote><p> 当在Scaffold的同类中使用of时,可以选择<code>新建一个Widget</code>来实现context的下沉，保证<code>ScaffoldState</code>的存在。但如果是非常简单的组件，你可以考虑使用Builder。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Builder/01.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuilderDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Container</span>(</span><br><span class="line">      height: <span class="number">200</span>,</span><br><span class="line">      child: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">AppBar</span>(</span><br><span class="line">          title: <span class="type">Text</span>(<span class="symbol">'Builde</span>r'),</span><br><span class="line">        ),</span><br><span class="line">        floatingActionButton: <span class="type">Builder</span>(</span><br><span class="line">          builder: (ctx) =&gt; <span class="type">FloatingActionButton</span>(</span><br><span class="line">            onPressed: () &#123;</span><br><span class="line">              <span class="type">Scaffold</span>.of(ctx)</span><br><span class="line">                  .showSnackBar(<span class="type">SnackBar</span>(content: <span class="type">Text</span>(<span class="symbol">'hello</span> builder')));</span><br><span class="line">            &#125;,</span><br><span class="line">            child: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-其他用途"><a href="#2-其他用途" class="headerlink" title="2. 其他用途"></a>2. 其他用途</h5><blockquote><p>对应使用<code>XXX.of</code>获取某类状态对象方法都存在这种现象，当无法获取时，可以查看是否是<code>上下文滞后</code>的错误，使用Builder解决。</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Scaffold</span>.</span></span><span class="keyword">of</span>(context)</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">MediaQuery</span>.</span></span><span class="keyword">of</span>(context)</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Theme</span>.</span></span><span class="keyword">of</span>(context)</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">BlocProvider</span>.</span></span><span class="keyword">of</span>(context)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><hr><h4 id="三、尾声"><a href="#三、尾声" class="headerlink" title="三、尾声"></a>三、尾声</h4><blockquote><p> FlutterUnit开源项目: <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br>我的公众号:编程之王<br>联系我–邮箱:<a href="mailto:1981462002@qq.com">1981462002@qq.com</a> –微信:zdl1994328<br>@张风捷特烈 2020.04.29<br>~ END ~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、认识组件&quot;&gt;&lt;a href=&quot;#一、认识组件&quot; class=&quot;headerlink&quot; title=&quot;一、认识组件&quot;&gt;&lt;/a&gt;一、认识组件&lt;/h4&gt;&lt;h5 id=&quot;1-Builder组件介绍&quot;&gt;&lt;a href=&quot;#1-Builder组件介绍&quot; class=&quot;headerlink&quot; title=&quot;1.Builder组件介绍&quot;&gt;&lt;/a&gt;1.Builder组件介绍&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;一个&lt;code&gt;不影响子组件占位空间&lt;/code&gt;，&lt;code&gt;不具有显示性的组件&lt;/code&gt;，存在的唯一价值是提供当前组件对应元素的上下文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/flutter/unit/widgets/Builder/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter组件" scheme="http://blog.toly1994.com/categories/Flutter%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="widget" scheme="http://blog.toly1994.com/tags/widget/"/>
    
      <category term="功能型组件" scheme="http://blog.toly1994.com/tags/%E5%8A%9F%E8%83%BD%E5%9E%8B%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Padding内边距组件</title>
    <link href="http://blog.toly1994.com/Padding.html"/>
    <id>http://blog.toly1994.com/Padding.html</id>
    <published>2020-05-02T13:46:25.000Z</published>
    <updated>2020-05-03T05:03:57.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、认识组件"><a href="#一、认识组件" class="headerlink" title="一、认识组件"></a>一、认识组件</h4><h5 id="1-Padding组件介绍"><a href="#1-Padding组件介绍" class="headerlink" title="1.Padding组件介绍"></a>1.Padding组件介绍</h5><blockquote><p>可容纳一个子组件，通过添加内边距，来限定子组件的占位。核心属性为<code>EdgeInsetsGeometry类型的padding</code>。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Padding/01.png" alt=""></p><a id="more"></a><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">名称:       Padding  内边距</span><br><span class="line">类型:       布局型</span><br><span class="line">重要性:     ☆☆☆☆</span><br><span class="line">相关组件:   【Container】、【SliverPadding】    </span><br><span class="line">家族:       RenderObjectWidget</span><br><span class="line">                |--- SingleChildRenderObjectWidget</span><br><span class="line">                    |--- Padding</span><br></pre></td></tr></table></figure><hr><h5 id="2-组件属性一览"><a href="#2-组件属性一览" class="headerlink" title="2. 组件属性一览"></a>2. 组件属性一览</h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>key</td><td>Key</td><td>null</td><td>组件键</td></tr><tr><td>padding</td><td>EdgeInsetsGeometry</td><td>@required</td><td>内边距</td></tr><tr><td>child</td><td>Widget</td><td>null</td><td>子组件</td></tr></tbody></table><blockquote><p>EdgeInsetsGeometry对象</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EdgeInsetsGeometry # 抽象类</span><br><span class="line">    |--- EdgeInsets # 内边距</span><br><span class="line">    |--- EdgeInsetsDirectional # 方向型内边距</span><br></pre></td></tr></table></figure><ul><li><code>EdgeInsets</code>: 使用<code>left、top、right、bottom</code>属性表示边距  </li><li><code>EdgeInsetsDirectional</code>:使用<code>start、top、end、bottom</code>属性表示边距    </li><li>两者功<code>能上并没有什么本质区别</code>，只是语义的不同。前者字少，较为常用。</li></ul><hr><h4 id="二、使用组件"><a href="#二、使用组件" class="headerlink" title="二、使用组件"></a>二、使用组件</h4><h5 id="1-全边距-EdgeInsets-all"><a href="#1-全边距-EdgeInsets-all" class="headerlink" title="1. 全边距: EdgeInsets.all"></a>1. 全边距: <code>EdgeInsets.all</code></h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>value</td><td>double</td><td>null</td><td>内四边距</td></tr></tbody></table><hr><blockquote><p><code>使用案例: 使子组件距父组件四周20</code></p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Padding/02.png" alt=""></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PaddingAll</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      color: Colors.grey.withAlpha(<span class="number">22</span>),</span><br><span class="line">      width: <span class="number">200</span>,</span><br><span class="line">      height: <span class="number">150</span>,</span><br><span class="line">      child: Padding(</span><br><span class="line">        padding: EdgeInsets.all(<span class="number">20</span>),</span><br><span class="line">        child: _buildChild(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget _buildChild() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      color: Colors.cyanAccent,</span><br><span class="line">      width: <span class="number">100</span>,</span><br><span class="line">      height: <span class="number">100</span>,</span><br><span class="line">      child: Text(<span class="string">"孩子"</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-指定边距-EdgeInsets-only"><a href="#2-指定边距-EdgeInsets-only" class="headerlink" title="2. 指定边距: EdgeInsets.only"></a>2. 指定边距: <code>EdgeInsets.only</code></h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>left</td><td>double</td><td>0.0</td><td>左内边距</td></tr><tr><td>top</td><td>double</td><td>0.0</td><td>上内边距</td></tr><tr><td>right</td><td>double</td><td>0.0</td><td>右内边距</td></tr><tr><td>bottom</td><td>double</td><td>0.0</td><td>下内边距</td></tr></tbody></table><hr><blockquote><p><code>使用案例: 使子组件距父组件上和左侧内边距为10</code></p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Padding/03.png" alt=""></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PaddingOnly</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      color: Colors.grey.withAlpha(<span class="number">22</span>),</span><br><span class="line">      width: <span class="number">200</span>,</span><br><span class="line">      height: <span class="number">150</span>,</span><br><span class="line">      child: Padding(</span><br><span class="line">        padding: EdgeInsets.only(top:<span class="number">10</span>,left: <span class="number">10</span>),</span><br><span class="line">        child: _buildChild(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget _buildChild() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      color: Colors.cyanAccent,</span><br><span class="line">      width: <span class="number">100</span>,</span><br><span class="line">      height: <span class="number">100</span>,</span><br><span class="line">      child: Text(<span class="string">"孩子"</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-方向边距-EdgeInsets-symmetric"><a href="#3-方向边距-EdgeInsets-symmetric" class="headerlink" title="3. 方向边距: EdgeInsets.symmetric"></a>3. 方向边距: <code>EdgeInsets.symmetric</code></h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>vertical</td><td>double</td><td>0.0</td><td>水平边距</td></tr><tr><td>horizontal</td><td>double</td><td>0.0</td><td>竖直边距</td></tr></tbody></table><hr><blockquote><p><code>使用案例: 使子组件距父组件水平内边距为10，竖直内边距为30</code></p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/Padding/04.png" alt=""></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PaddingSymmetric</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      color: Colors.grey.withAlpha(<span class="number">22</span>),</span><br><span class="line">      width: <span class="number">200</span>,</span><br><span class="line">      height: <span class="number">150</span>,</span><br><span class="line">      child: Padding(</span><br><span class="line">        padding: EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>),</span><br><span class="line">        child: _buildChild(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Widget _buildChild() &#123;</span><br><span class="line">    <span class="keyword">return</span> Container(</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      color: Colors.cyanAccent,</span><br><span class="line">      width: <span class="number">100</span>,</span><br><span class="line">      height: <span class="number">100</span>,</span><br><span class="line">      child: Text(<span class="string">"孩子"</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="4-特殊说明"><a href="#4-特殊说明" class="headerlink" title="4.特殊说明"></a>4.特殊说明</h5><blockquote><p><code>EdgeInsets</code>中已重载运算符<code>+、-、*、/、~、~/,%</code>，可以直接四则运算，如:</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) + EdgeInsets.only(top:<span class="number">10</span>,left: <span class="number">10</span>)</span><br><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) - EdgeInsets.only(top:<span class="number">10</span>,left: <span class="number">10</span>)</span><br><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) * <span class="number">6</span></span><br><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) / <span class="number">6</span></span><br><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) ~/ <span class="number">6</span></span><br><span class="line">EdgeInsets.symmetric(vertical: <span class="number">30</span>,horizontal: <span class="number">10</span>) % <span class="number">6</span></span><br></pre></td></tr></table></figure><hr><h4 id="三、尾声"><a href="#三、尾声" class="headerlink" title="三、尾声"></a>三、尾声</h4><blockquote><p> FlutterUnit开源项目: <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br>我的公众号:编程之王<br>联系我–邮箱:<a href="mailto:1981462002@qq.com">1981462002@qq.com</a> –微信:zdl1994328<br>@张风捷特烈 2020.04.29<br>~ END ~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、认识组件&quot;&gt;&lt;a href=&quot;#一、认识组件&quot; class=&quot;headerlink&quot; title=&quot;一、认识组件&quot;&gt;&lt;/a&gt;一、认识组件&lt;/h4&gt;&lt;h5 id=&quot;1-Padding组件介绍&quot;&gt;&lt;a href=&quot;#1-Padding组件介绍&quot; class=&quot;headerlink&quot; title=&quot;1.Padding组件介绍&quot;&gt;&lt;/a&gt;1.Padding组件介绍&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;可容纳一个子组件，通过添加内边距，来限定子组件的占位。核心属性为&lt;code&gt;EdgeInsetsGeometry类型的padding&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/flutter/unit/widgets/Padding/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter组件" scheme="http://blog.toly1994.com/categories/Flutter%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="widget" scheme="http://blog.toly1994.com/tags/widget/"/>
    
      <category term="布局型组件" scheme="http://blog.toly1994.com/tags/%E5%B8%83%E5%B1%80%E5%9E%8B%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>DecoratedBox装饰盒组件</title>
    <link href="http://blog.toly1994.com/DecoratedBox.html"/>
    <id>http://blog.toly1994.com/DecoratedBox.html</id>
    <published>2020-05-02T12:46:25.000Z</published>
    <updated>2020-05-03T05:03:57.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、认识组件"><a href="#一、认识组件" class="headerlink" title="一、认识组件"></a>一、认识组件</h4><h5 id="1-DecoratedBox组件介绍"><a href="#1-DecoratedBox组件介绍" class="headerlink" title="1.DecoratedBox组件介绍"></a>1.DecoratedBox组件介绍</h5><blockquote><p>可容纳一个子组件，可将其进行装饰。核心属性为decoration,可设置边线、渐变、阴影、背景图等。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/01.png" alt=""></p><a id="more"></a><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">名称:       DecoratedBox  装饰盒</span></span><br><span class="line"><span class="section">类型:       装饰型</span></span><br><span class="line"><span class="section">重要性:     ☆☆☆☆</span></span><br><span class="line"><span class="section">相关组件:   【Container】、【DecoratedBoxTransition】    </span></span><br><span class="line"><span class="section">家族:       RenderObjectWidget</span></span><br><span class="line">                |--- SingleChildRenderObjectWidget</span><br><span class="line">                    |--- DecoratedBox</span><br></pre></td></tr></table></figure><hr><h5 id="2-组件属性一览"><a href="#2-组件属性一览" class="headerlink" title="2. 组件属性一览"></a>2. 组件属性一览</h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>key</td><td>Key</td><td>null</td><td>组件键</td></tr><tr><td>decoration</td><td>Decoration</td><td>@required</td><td>装饰对象</td></tr><tr><td>position</td><td>DecorationPosition</td><td>DecorationPosition.background</td><td>装饰位置</td></tr><tr><td>child</td><td>Widget</td><td>null</td><td>子组件</td></tr></tbody></table><blockquote><p>Decoration对象</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Decoration <span class="comment"># 抽象类</span></span><br><span class="line">    |<span class="params">---</span> BoxDecoration <span class="comment"># 盒装饰</span></span><br><span class="line">    |<span class="params">---</span> ShapeDecoration <span class="comment"># 形状装饰</span></span><br><span class="line">    |<span class="params">---</span> UnderlineTabIndicator <span class="comment"># 底线装饰</span></span><br><span class="line">    |<span class="params">---</span> FlutterLogoDecoration <span class="comment"># FlutterLogo 装饰</span></span><br></pre></td></tr></table></figure><blockquote><p>DecorationPositiond对象</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DecorationPositiond<span class="meta"># 枚举对象</span></span><br><span class="line">    <span class="string">|---DecorationPosition.background 背景装饰</span></span><br><span class="line">    <span class="string">|---DecorationPosition.foreground 前景装饰</span></span><br></pre></td></tr></table></figure><hr><h4 id="二、使用组件"><a href="#二、使用组件" class="headerlink" title="二、使用组件"></a>二、使用组件</h4><h5 id="1-盒装饰-BoxDecoration"><a href="#1-盒装饰-BoxDecoration" class="headerlink" title="1. 盒装饰: BoxDecoration"></a>1. 盒装饰: <code>BoxDecoration</code></h5><blockquote><p>BoxDecoration的属性较多，也是最常用的装饰对象</p></blockquote><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>color</td><td>Color</td><td>null</td><td>颜色</td></tr><tr><td>image</td><td>DecorationImage</td><td>null</td><td>装饰对象</td></tr><tr><td>border</td><td>BoxBorder</td><td>null</td><td>装饰边线</td></tr><tr><td>borderRadius</td><td>BorderRadiusGeometry</td><td>null</td><td>边角半径</td></tr><tr><td>boxShadow</td><td>List<BoxShadow></td><td>null</td><td>阴影</td></tr><tr><td>gradient</td><td>Gradient</td><td>null</td><td>渐变</td></tr><tr><td>backgroundBlendMode</td><td>BlendMode</td><td>null</td><td>背景叠色模式</td></tr><tr><td>shape</td><td>BoxShape</td><td>BoxShape.rectangle</td><td>装饰形状</td></tr></tbody></table><hr><blockquote><p><code>color,borderRadiu,boxShadows,boxShadow,gradient综合案例</code></p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/02.png" alt=""></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">BoxDecorationDemo</span> <span class="symbol">extends</span> <span class="symbol">StatelessWidget</span> &#123;</span><br><span class="line">  <span class="keyword">final</span> rainbow = <span class="keyword">const</span> &lt;<span class="built_in">int</span>&gt;[</span><br><span class="line">    <span class="number">0xffff0000</span>,</span><br><span class="line">    <span class="number">0xffFF7F00</span>,</span><br><span class="line">    <span class="number">0xffFFFF00</span>,</span><br><span class="line">    <span class="number">0xff00FF00</span>,</span><br><span class="line">    <span class="number">0xff00FFFF</span>,</span><br><span class="line">    <span class="number">0xff0000FF</span>,</span><br><span class="line">    <span class="number">0xff8B00FF</span></span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> DecoratedBox(</span><br><span class="line">      position: DecorationPosition.background,</span><br><span class="line">      decoration: BoxDecoration(</span><br><span class="line">          gradient: LinearGradient(</span><br><span class="line">              stops: &lt;<span class="built_in">double</span>&gt;[<span class="number">0.0</span>, <span class="number">1</span> / <span class="number">6</span>, <span class="number">2</span> / <span class="number">6</span>, <span class="number">3</span> / <span class="number">6</span>, <span class="number">4</span> / <span class="number">6</span>, <span class="number">5</span> / <span class="number">6</span>, <span class="number">1.0</span>],</span><br><span class="line">              colors: rainbow.map((e) =&gt; Color(e)).toList()),</span><br><span class="line">          borderRadius: BorderRadius.only(</span><br><span class="line">              topLeft: Radius.circular(<span class="number">20</span>), bottomRight: Radius.circular(<span class="number">20</span>)),</span><br><span class="line">          boxShadow: [</span><br><span class="line">            <span class="keyword">const</span> BoxShadow(</span><br><span class="line">                color: Colors.orangeAccent,</span><br><span class="line">                offset: Offset(<span class="number">1</span>, <span class="number">1</span>),</span><br><span class="line">                blurRadius: <span class="number">10</span>,</span><br><span class="line">                spreadRadius: <span class="number">1</span>),</span><br><span class="line">          ]),</span><br><span class="line">      child: Icon(</span><br><span class="line">        Icons.android,</span><br><span class="line">        size: <span class="number">80</span>,</span><br><span class="line">        color: Colors.black.withAlpha(<span class="number">123</span>),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>image,shape综合案例:<br>通过image可以为任意组件指定一个图片背景，用法与<code>Image组件</code>类似<br>通过shape可以指定装饰区域是方形还是圆形。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/03.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ShapeImageDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">DecoratedBox</span>(</span><br><span class="line">      decoration: <span class="type">BoxDecoration</span>(</span><br><span class="line">          shape: <span class="type">BoxShape</span>.circle,</span><br><span class="line">          image: <span class="type">DecorationImage</span>(</span><br><span class="line">              fit: <span class="type">BoxFit</span>.cover,</span><br><span class="line">              image: <span class="type">AssetImage</span>(</span><br><span class="line">                <span class="symbol">'assets</span>/images/wy_200x300.jpg',</span><br><span class="line">              ))),</span><br><span class="line">      child: <span class="type">SizedBox</span>(</span><br><span class="line">        height: <span class="number">80</span>,</span><br><span class="line">        width: <span class="number">80</span>,</span><br><span class="line">        child: <span class="type">Icon</span>(<span class="type">Icons</span>.ac_unit,color: <span class="type">Colors</span>.white,size: <span class="number">40</span>,),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>position和border综合案例:<br> 注意点: <code>border不能和borderRadius共同使用</code><br>这里添加边线，如果<code>position</code>是背景,那么装饰就看不见了.所以应该用<code>foreground</code></p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/04.png" alt=""></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">class</span> <span class="selector-tag">BorderDemo</span> <span class="selector-tag">extends</span> <span class="selector-tag">StatelessWidget</span> &#123;</span><br><span class="line">  <span class="variable">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">DecoratedBox</span>(</span><br><span class="line">      <span class="attribute">position</span>: DecorationPosition.foreground,</span><br><span class="line">      <span class="attribute">decoration</span>: BoxDecoration(</span><br><span class="line">        <span class="attribute">border</span>: Border(</span><br><span class="line">            <span class="attribute">bottom</span>: BorderSide(<span class="attribute">color</span>: Colors.orange, <span class="attribute">width</span>: <span class="number">2</span>),</span><br><span class="line">            <span class="attribute">top</span>: BorderSide(<span class="attribute">color</span>: Colors.orange, <span class="attribute">width</span>: <span class="number">2</span>)),</span><br><span class="line">      ),</span><br><span class="line">      <span class="attribute">child</span>: SizedBox(</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">80</span>,</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attribute">child</span>: Image.asset(</span><br><span class="line">          <span class="string">'assets/images/wy_200x300.jpg'</span>,</span><br><span class="line">          <span class="attribute">fit</span>: BoxFit.cover,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-形状装饰-ShapeDecoration"><a href="#2-形状装饰-ShapeDecoration" class="headerlink" title="2. 形状装饰: ShapeDecoration"></a>2. 形状装饰: <code>ShapeDecoration</code></h5><blockquote><p>如果需要形状的高度DIY，可以使用<code>ShapeDecoration</code>作为装饰<br><code>ShapeBorder</code>详细用法见: <code>https://juejin.im/post/5e6196066fb9a07c8b5bbdf5</code></p></blockquote><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>color</td><td>Color</td><td>null</td><td>颜色</td></tr><tr><td>image</td><td>DecorationImage</td><td>null</td><td>装饰对象</td></tr><tr><td>boxShadow</td><td>List<BoxShadow></td><td>null</td><td>阴影</td></tr><tr><td>gradient</td><td>Gradient</td><td>null</td><td>渐变</td></tr><tr><td>shape</td><td>ShapeBorder</td><td>@required</td><td>装饰形状</td></tr></tbody></table><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/05.png" alt=""></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">class</span> <span class="selector-tag">ShapeDecorationDemo</span> <span class="selector-tag">extends</span> <span class="selector-tag">StatelessWidget</span> &#123;</span><br><span class="line">  <span class="variable">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">DecoratedBox</span>(</span><br><span class="line">      <span class="attribute">decoration</span>: ShapeDecoration(</span><br><span class="line">          <span class="attribute">image</span>: DecorationImage(</span><br><span class="line">              <span class="attribute">fit</span>: BoxFit.cover,</span><br><span class="line">              <span class="attribute">image</span>: AssetImage(</span><br><span class="line">                <span class="string">'assets/images/wy_200x300.jpg'</span>,</span><br><span class="line">              )),</span><br><span class="line">        <span class="attribute">shape</span>: CircleBorder(</span><br><span class="line">          <span class="attribute">side</span>: BorderSide(<span class="attribute">width</span>: <span class="number">2.0</span>, <span class="attribute">color</span>: Colors.blue),</span><br><span class="line">        )</span><br><span class="line">      ),</span><br><span class="line">      <span class="attribute">child</span>: SizedBox(</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attribute">child</span>: Icon(</span><br><span class="line">          Icons.ac_unit,</span><br><span class="line">          <span class="attribute">color</span>: Colors.white,</span><br><span class="line">          <span class="attribute">size</span>: <span class="number">40</span>,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-底线装饰-UnderlineTabIndicator"><a href="#3-底线装饰-UnderlineTabIndicator" class="headerlink" title="3. 底线装饰: UnderlineTabIndicator"></a>3. 底线装饰: <code>UnderlineTabIndicator</code></h5><blockquote><p><code>UnderlineTabIndicator</code>可以在子组件的底部添加装饰</p></blockquote><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>borderSide</td><td>Color</td><td>BorderSide(width: 2.0, color: Colors.white)</td><td>边线</td></tr><tr><td>insets</td><td>EdgeInsetsGeometry</td><td>EdgeInsets.zero</td><td>间距</td></tr></tbody></table><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/06.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UnderlineTabIndicatorDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">DecoratedBox</span>(</span><br><span class="line">      decoration: <span class="type">UnderlineTabIndicator</span>(</span><br><span class="line">        insets: <span class="type">EdgeInsets</span>.symmetric(horizontal: <span class="number">5</span>,vertical: <span class="number">-5</span>),</span><br><span class="line">          borderSide: <span class="type">BorderSide</span>(color: <span class="type">Colors</span>.orange, width: <span class="number">2</span>)),</span><br><span class="line">      child: <span class="type">Icon</span>(</span><br><span class="line">          <span class="type">Icons</span>.ac_unit,</span><br><span class="line">          color: <span class="type">Colors</span>.blue,</span><br><span class="line">          size: <span class="number">40</span>,</span><br><span class="line">        ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="4-FlutterLogo装饰-FlutterLogoDecoration"><a href="#4-FlutterLogo装饰-FlutterLogoDecoration" class="headerlink" title="4. FlutterLogo装饰: FlutterLogoDecoration"></a>4. FlutterLogo装饰: <code>FlutterLogoDecoration</code></h5><blockquote><p>以<code>FlutterLogo</code>为背景的装饰，没有太大的实用价值。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/07.png" alt=""></p><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>lightColor</td><td>Color</td><td>Color(0xFF42A5F5)</td><td>上两杠颜色</td></tr><tr><td>darkColor</td><td>Color</td><td>Color(0xFF0D47A1)</td><td>下杠颜色</td></tr><tr><td>textColor</td><td>Color</td><td>Color(0xFF616161)</td><td>文字颜色</td></tr><tr><td>style</td><td>FlutterLogoStyle</td><td>FlutterLogoStyle.markOnly</td><td>展示模式</td></tr><tr><td>margin</td><td>EdgeInsetsGeometry</td><td>EdgeInsets.zero</td><td>外间距</td></tr></tbody></table><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlutterLogoDecorationDemo</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">DecoratedBox</span>(</span><br><span class="line">      decoration: <span class="type">FlutterLogoDecoration</span>(</span><br><span class="line">        darkColor: <span class="type">Colors</span>.orange,</span><br><span class="line">        lightColor: <span class="type">Colors</span>.deepPurpleAccent,</span><br><span class="line">        style: <span class="type">FlutterLogoStyle</span>.stacked</span><br><span class="line">      ),</span><br><span class="line">      child:<span class="type">SizedBox</span>(width: <span class="number">100</span>,height: <span class="number">100</span>,),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="三、尾声"><a href="#三、尾声" class="headerlink" title="三、尾声"></a>三、尾声</h4><blockquote><p> FlutterUnit开源项目: <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br>我的公众号:编程之王<br>联系我–邮箱:<a href="mailto:1981462002@qq.com">1981462002@qq.com</a> –微信:zdl1994328<br>@张风捷特烈 2020.04.29<br>~ END ~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、认识组件&quot;&gt;&lt;a href=&quot;#一、认识组件&quot; class=&quot;headerlink&quot; title=&quot;一、认识组件&quot;&gt;&lt;/a&gt;一、认识组件&lt;/h4&gt;&lt;h5 id=&quot;1-DecoratedBox组件介绍&quot;&gt;&lt;a href=&quot;#1-DecoratedBox组件介绍&quot; class=&quot;headerlink&quot; title=&quot;1.DecoratedBox组件介绍&quot;&gt;&lt;/a&gt;1.DecoratedBox组件介绍&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;可容纳一个子组件，可将其进行装饰。核心属性为decoration,可设置边线、渐变、阴影、背景图等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/flutter/unit/widgets/DecoratedBox/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter组件" scheme="http://blog.toly1994.com/categories/Flutter%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="widget" scheme="http://blog.toly1994.com/tags/widget/"/>
    
      <category term="装饰型组件" scheme="http://blog.toly1994.com/tags/%E8%A3%85%E9%A5%B0%E5%9E%8B%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>PreferredSize优先尺寸</title>
    <link href="http://blog.toly1994.com/PreferredSize.html"/>
    <id>http://blog.toly1994.com/PreferredSize.html</id>
    <published>2020-05-02T05:46:25.000Z</published>
    <updated>2020-05-03T23:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、认识组件"><a href="#一、认识组件" class="headerlink" title="一、认识组件"></a>一、认识组件</h4><h5 id="1-PreferredSize组件介绍"><a href="#1-PreferredSize组件介绍" class="headerlink" title="1.PreferredSize组件介绍"></a>1.PreferredSize组件介绍</h5><blockquote><p>实现了PreferredSizeWidget接口，可容纳一个子组件，设置优先尺寸，不会对其子组件施加任何约束。</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/PreferredSize/01.png" alt=""></p><a id="more"></a><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">名称:       PreferredSize  优先尺寸</span></span><br><span class="line"><span class="section">类型:       布局型</span></span><br><span class="line"><span class="section">重要性:     ☆☆</span></span><br><span class="line"><span class="section">相关组件:   【Scaffold】、【AppBar】    </span></span><br><span class="line"><span class="section">家族:       Widget</span></span><br><span class="line">                |--- StatelessWidget</span><br><span class="line">                |--- PreferredSizeWidget</span><br></pre></td></tr></table></figure><hr><h5 id="2-组件属性一览"><a href="#2-组件属性一览" class="headerlink" title="2. 组件属性一览"></a>2. 组件属性一览</h5><table><thead><tr><th>属性名</th><th>属性类型</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td>key</td><td>Key</td><td>null</td><td>组件键</td></tr><tr><td>preferredSize</td><td>Size</td><td>@required</td><td>优先尺寸</td></tr><tr><td>child</td><td>Widget</td><td>@required</td><td>子组件</td></tr></tbody></table><blockquote><p>也许你曾为<code>Scaffold的appBar是PreferredSizeWidget</code>而束手无策，只能用AppBar<br><code>PreferredSize</code>可以将一个普通的组件转化成<code>PreferredSizeWidget</code></p></blockquote><hr><h4 id="二、使用组件"><a href="#二、使用组件" class="headerlink" title="二、使用组件"></a>二、使用组件</h4><h5 id="1-修改AppBar高度"><a href="#1-修改AppBar高度" class="headerlink" title="1. 修改AppBar高度"></a>1. 修改AppBar高度</h5><blockquote><p> AppBar高度的默认高度是<code>56.0</code>，使用PreferredSize可以进行调整</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// The height of the toolbar component of the [AppBar].</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> kToolbarHeight = <span class="number">56.0</span>;</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/PreferredSize/02.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomPreferredSize</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Container</span>(</span><br><span class="line">      height: <span class="number">200</span>,</span><br><span class="line">      child: <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: <span class="type">PreferredSize</span>(</span><br><span class="line">          preferredSize: <span class="type">Size</span>.fromHeight(<span class="number">150</span>),</span><br><span class="line">          child: <span class="type">AppBar</span>(</span><br><span class="line">            title: <span class="type">Text</span>(<span class="symbol">'PreferredSiz</span>e'),</span><br><span class="line">          ),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-将普通组件转化成PreferredSizeWidget"><a href="#2-将普通组件转化成PreferredSizeWidget" class="headerlink" title="2. 将普通组件转化成PreferredSizeWidget"></a>2. 将普通组件转化成<code>PreferredSizeWidget</code></h5><blockquote><p>当你遇到属性是<code>PreferredSizeWidget</code>时，你只能去找PreferredSizeWidget的实现类<br>这样限制会很大，如AppBar的底部栏，可以用PreferredSize包裹一下，容纳任何组件</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/unit/widgets/PreferredSize/01.png" alt=""></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">class</span> <span class="selector-tag">PaddingOnly</span> <span class="selector-tag">extends</span> <span class="selector-tag">StatelessWidget</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="variable">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">Container</span>(</span><br><span class="line">      <span class="attribute">color</span>: Colors.grey.withAlpha(<span class="number">22</span>),</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">150</span>,</span><br><span class="line">      <span class="attribute">child</span>: Padding(</span><br><span class="line">        <span class="attribute">padding</span>: EdgeInsets.only(<span class="attribute">top</span>:<span class="number">10</span>,<span class="attribute">left</span>: <span class="number">10</span>),</span><br><span class="line">        <span class="attribute">child</span>: _buildChild(),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">Widget</span> <span class="selector-tag">_buildChild</span>() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">Container</span>(</span><br><span class="line">      <span class="attribute">alignment</span>: Alignment.center,</span><br><span class="line">      <span class="attribute">color</span>: Colors.cyanAccent,</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attribute">child</span>: Text(<span class="string">"孩子"</span>),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="三、尾声"><a href="#三、尾声" class="headerlink" title="三、尾声"></a>三、尾声</h4><blockquote><p> FlutterUnit开源项目: <a href="https://github.com/toly1994328/FlutterUnit" target="_blank" rel="noopener">https://github.com/toly1994328/FlutterUnit</a><br>我的公众号:编程之王<br>联系我–邮箱:<a href="mailto:1981462002@qq.com">1981462002@qq.com</a> –微信:zdl1994328<br>@张风捷特烈 2020.04.29<br>~ END ~</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、认识组件&quot;&gt;&lt;a href=&quot;#一、认识组件&quot; class=&quot;headerlink&quot; title=&quot;一、认识组件&quot;&gt;&lt;/a&gt;一、认识组件&lt;/h4&gt;&lt;h5 id=&quot;1-PreferredSize组件介绍&quot;&gt;&lt;a href=&quot;#1-PreferredSize组件介绍&quot; class=&quot;headerlink&quot; title=&quot;1.PreferredSize组件介绍&quot;&gt;&lt;/a&gt;1.PreferredSize组件介绍&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;实现了PreferredSizeWidget接口，可容纳一个子组件，设置优先尺寸，不会对其子组件施加任何约束。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/flutter/unit/widgets/PreferredSize/01.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter组件" scheme="http://blog.toly1994.com/categories/Flutter%E7%BB%84%E4%BB%B6/"/>
    
    
      <category term="widget" scheme="http://blog.toly1994.com/tags/widget/"/>
    
      <category term="布局型组件" scheme="http://blog.toly1994.com/tags/%E5%B8%83%E5%B1%80%E5%9E%8B%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Flutter Unit  更新记录</title>
    <link href="http://blog.toly1994.com/FlutterUnit_update.html"/>
    <id>http://blog.toly1994.com/FlutterUnit_update.html</id>
    <published>2020-04-16T12:46:25.000Z</published>
    <updated>2020-05-03T08:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>2020-4-16</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fixed <span class="string">"     修改样式无法点击的问题。 </span></span><br><span class="line">fixed <span class="string">"     一些已知文案的错误。 </span></span><br><span class="line">fixed <span class="string">"     hero动画闪现不同步问题。</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-4-17</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fixed <span class="string">"     进入收藏页，再回到首页，顶部显示不同步的问题。 </span></span><br><span class="line">fixed <span class="string">"     主页item双击黑屏问题。 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">feature <span class="string">"   支持详情页【相关链接的栈管理】,</span></span><br><span class="line">        <span class="string">"   即: 点击多个链接，不直接返回主页.</span></span><br></pre></td></tr></table></figure><a id="more"></a><hr><ul><li><code>2020-4-18</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">feature <span class="string">"   小彩蛋: 【长按】底部栏【最左侧按钮】,打开左边菜单栏</span></span><br><span class="line">        <span class="string">"   【长按】底部栏【最右侧按钮】,打开右边菜单栏</span></span><br><span class="line"></span><br><span class="line">fixed <span class="string">"     收藏集的AppBar背景色同主页选中色。</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-4-19</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">optimize <span class="string">"   添加收录【LayoutBuilder】组件</span></span><br><span class="line">optimize <span class="string">"   添加收录【IgnorePointer】组件</span></span><br><span class="line">optimize <span class="string">"   添加收录【AbsorbPointer】组件</span></span><br><span class="line">optimize <span class="string">"   添加收录【BackdropFilter】组件</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-4-21</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature <span class="string">"   使用Sliver优化收藏集的显示</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-4-24</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature <span class="string">"   完成组件收藏夹功能</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-4-30</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature <span class="string">"   为了方便解析器分析数据，优化展示组件代码的存在形式，使每个示例写入单独文件。</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-5-1</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feature <span class="string">"   完成FlutterUnit组件解析工具，添加和修改组件详情内容变得方便</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-5-2</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">optimize <span class="string">"   增加更多Padding组件内容</span></span><br><span class="line">optimize <span class="string">"   增加更多DecoratedBox组件内容</span></span><br></pre></td></tr></table></figure><hr><ul><li><code>2020-5-3</code></li></ul><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">optimize <span class="string">"   增加PreferredSize组件</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;code&gt;2020-4-16&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fixed &lt;span class=&quot;string&quot;&gt;&quot;     修改样式无法点击的问题。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fixed &lt;span class=&quot;string&quot;&gt;&quot;     一些已知文案的错误。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fixed &lt;span class=&quot;string&quot;&gt;&quot;     hero动画闪现不同步问题。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2020-4-17&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fixed &lt;span class=&quot;string&quot;&gt;&quot;     进入收藏页，再回到首页，顶部显示不同步的问题。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fixed &lt;span class=&quot;string&quot;&gt;&quot;     主页item双击黑屏问题。 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;feature &lt;span class=&quot;string&quot;&gt;&quot;   支持详情页【相关链接的栈管理】,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;   即: 点击多个链接，不直接返回主页.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="FlutterUnit周边" scheme="http://blog.toly1994.com/categories/FlutterUnit%E5%91%A8%E8%BE%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter七日总结</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/08.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/08.html</id>
    <published>2018-12-23T13:46:01.000Z</published>
    <updated>2020-05-04T09:10:22.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人-也是沙粒，崇高并谦卑着-张风捷特烈"><a href="#多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人-也是沙粒，崇高并谦卑着-张风捷特烈" class="headerlink" title="多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人,也是沙粒，崇高并谦卑着----张风捷特烈"></a><code>多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人,也是沙粒，崇高并谦卑着----张风捷特烈</code></h4><hr><h5 id="写这个系列主要是出于以下目的："><a href="#写这个系列主要是出于以下目的：" class="headerlink" title="写这个系列主要是出于以下目的："></a>写这个系列主要是出于以下目的：</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>给自己一个挑战，并附加时间限制</span><br><span class="line"><span class="number">2.</span>一直想要表达一下：遇到新技术时的态度，借此分析一下我对于一件新事物认知的过程  </span><br><span class="line"><span class="number">3.</span>Flutter对于Android开发者，确实需要去稍微了解一下 </span><br><span class="line"><span class="number">4.</span>作为一个地道的javaer+Androider,希望可以为想入坑Flutter的朋友铺条小路  </span><br><span class="line"><span class="number">5.</span>整个<span class="number">7</span>篇文章贯穿着我学习的心+思，基本上敲一段测试代码，写一段文章。对我的学习方式也是一种记录与沉淀</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h5 id="七篇文章如下："><a href="#七篇文章如下：" class="headerlink" title="七篇文章如下："></a>七篇文章如下：</h5><ul><li><a href="https://juejin.im/post/5c1637fe6fb9a049d5196438" target="_blank" rel="noopener">Flutter第1天–初始分析+Dart方言+Canvas简绘</a>  </li><li><a href="https://juejin.im/post/5c176700f265da61602cd6ff" target="_blank" rel="noopener">Flutter第2天–Animation动画+粒子运动</a></li><li><a href="https://juejin.im/post/5c18d181f265da611f07a128" target="_blank" rel="noopener">Flutter第3天–基础控件(上)</a></li><li><a href="https://juejin.im/post/5c1a34f95188253ff1477cfd" target="_blank" rel="noopener">Flutter第4天–基础控件(下)+Flex布局详解</a></li><li><a href="https://juejin.im/post/5c1b7af2518825566d237655" target="_blank" rel="noopener">Flutter第5天–布局实例+操作交互</a></li><li><a href="https://juejin.im/post/5c1cd2426fb9a049a711cb75" target="_blank" rel="noopener">Flutter第6天–异步-IO+网络访问+json</a>  </li><li><a href="https://juejin.im/post/5c1df995e51d451611220186" target="_blank" rel="noopener">Flutter第7天–字体图标+综合小案例+Android代码交互</a></li></ul><hr><h5 id="下面是一边学习一边画出来的widget树"><a href="#下面是一边学习一边画出来的widget树" class="headerlink" title="下面是一边学习一边画出来的widget树"></a>下面是一边学习一边画出来的widget树</h5><blockquote><p>虽然离完整版还差一大半，不过入门还是够用了，常用的基本涉及<br>当你这些用熟练了，其他控件看看属性也就无师自通了(推荐看原图，比较清楚)</p></blockquote><h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://photo.toly1994.com/flutter$seven_day$08$0.png" alt=""></h2><h5 id="第一天及体悟："><a href="#第一天及体悟：" class="headerlink" title="第一天及体悟："></a>第一天及体悟：</h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Flutter的环境搭建并没走多少弯路，网上教程一大堆。  </span><br><span class="line">新建了一个工程,发现代码有点不对劲，虽然知道Flutter是跨平台框架，  </span><br><span class="line">但是代码在哪写?不应该有个单独的src吗?以前玩过libgdx,认为应该差不多  </span><br><span class="line">然后全文搜索一下界面上的字，找到在<span class="class"><span class="keyword">lib</span>包的<span class="title">main</span>.<span class="title">dart</span>里</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我要在<span class="class"><span class="keyword">lib</span>里写代码?不会这么奇葩吧?然后我用面向对象的天眼看了一下<span class="title">main</span>.<span class="title">dart</span></span></span><br><span class="line">正如第一篇的分析，果然这么奇葩。而且语法与Java,c++,Python,Js都不一样， </span><br><span class="line">好吧，又要学方言了，自从JS的Es6玩转了以后,我就不怕语言了，</span><br><span class="line">Kotlin也好，Python也好，这些性格<span class="string">"不羁"</span>一些的和ES6都八九不离十  </span><br><span class="line">只要语法通了，之后就是个人能力的问题了，所以Dart入门很快，半天就基本掌握了</span><br><span class="line">想要熟练，那还必须去实际操练才行</span><br></pre></td></tr></table></figure><hr><h6 id="番外-：分享一些心情————"><a href="#番外-：分享一些心情————" class="headerlink" title="[番外]：分享一些心情————-"></a>[番外]：分享一些心情————-</h6><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我经常把编程当做锻剑，我一直在精炼<span class="keyword">Java这把剑，用Android这把剑鞘盛放 </span> </span><br><span class="line">Python也好，C++也好，<span class="keyword">Js也好我只是玩玩，都被我当做光环对Java之剑进行附加</span></span><br><span class="line"><span class="keyword">至今在Android中我遇三次瓶颈期，我选择暂时离开Android，去拓展一下视野，</span></span><br><span class="line"><span class="keyword">死磕已经作用不大了，记得第二次瓶颈是被网络束缚地无法前进一步，</span></span><br><span class="line"><span class="keyword">于是一咬牙，暂停安卓，去专门找后端的书和资料去看，也因此萌生了搭建自己网站的念头 </span> </span><br><span class="line">然后前后并行，两大光环加持，也上线了我的个人网站，两端的基础知识已基本在心中。</span><br></pre></td></tr></table></figure><hr><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">由于个人网站的搭建，我对服务端有了些认识，网络请求与上传下载也都知道是怎么回事  </span><br><span class="line">也有了测试的渠道，如果一个对前后端毫不知情的<span class="keyword">Androider，肯定会卡网络瓶颈上</span></span><br><span class="line"><span class="keyword">数据流的概念初步形成，在我的眼中，界面的展示、上传下载、网络上的一切都是字节的流动 </span> </span><br><span class="line">然后重归<span class="keyword">Android之时，前后端已经像一条线贯穿了,Android顺利和服务器交互时，第二瓶颈已过</span></span><br><span class="line"><span class="keyword">有种"断剑重铸之日，骑士归来之时的感觉",具体细节，打算写个2018年终总结来记录一下</span></span><br></pre></td></tr></table></figure><h6 id="番外-：截止————"><a href="#番外-：截止————" class="headerlink" title="[番外]：截止————-"></a>[番外]：截止————-</h6><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如何很快地接收一件新事物<span class="comment">(新知识)</span>? 用你最擅长的技术去对接新知识，</span><br><span class="line">比如你是个天文迷，如果你想学英语，去看天文方面的读物会更有利，</span><br><span class="line">因为你有这方面的知识储备，即使知识储备是中文又如何?难道英文的地球能出太阳系?</span><br><span class="line">语言和知识本就是两码事，语言表述知识并不会更改知识本身。</span><br><span class="line">所以知识对接上，两种语言之间的交错，会让你更快接受语言的本身，也能强化知识</span><br></pre></td></tr></table></figure><hr><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">所以我并没有一开始就上控件，而是基于我最熟悉的Canvas来绘图，熟悉Dart语法，否则后面工作不好开展，</span><br><span class="line">在<span class="keyword">Android中Canvas的丰富知识储备让我很好的与Flutter中的Canvas对接,这一棋自认为不错</span></span><br><span class="line"><span class="keyword">对接之后，以前画网格，坐标系，n角星的东西又能拿出来秀了，旧知识转化成新知识</span></span><br><span class="line"><span class="keyword">通过Java代码更改成Dart代码，也让我更清楚了两者的异同点，以后把握起来就轻松写</span></span><br></pre></td></tr></table></figure><blockquote><p>总的来说第一天还是蛮轻松好玩的。</p></blockquote><hr><h5 id="第二天及体悟："><a href="#第二天及体悟：" class="headerlink" title="第二天及体悟："></a>第二天及体悟：</h5><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第二天可以说是兵行险招，本打算把基础控件说一下的<span class="comment">(依稀听过Flutter的控件超级多)</span> </span><br><span class="line">但第一天图画好之后，非常想玩动画，如果放在后面，感觉不连贯  </span><br><span class="line">然而并没有把握把动画写好，毕竟才更接触一天而已。挑战一下呗，然后就玩动画了</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第二天可以说是这七天里我感觉最成功的，动画+粒子运动全都复刻到Flutter上了</span><br><span class="line">粒子时钟完成后，挺激动的,然后就拿去分<span class="comment">(xian)</span>享<span class="comment">(bai)</span>,心想，Flutter还是不错的嘛  </span><br><span class="line">这绝对是Flutter的第一个粒子时钟<span class="comment">(除了我，也许没有人会这么无聊做这种特效)</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">看上去第二天的文章好像一气呵成，其实也遇到了些阻碍，</span><br><span class="line">dart的时间处理和三维数组和<span class="keyword">Java有些出入，还有就是时钟的粒子运动，</span></span><br><span class="line"><span class="keyword">差一点就放弃了，因为效果总是出不来。心想，搞出个时钟就算了吧，不也挺好嘛。</span></span><br><span class="line"><span class="keyword">可是真的很不甘心，都到这步了。然后输出小球集合的个数、第一个小球的位置，</span></span><br><span class="line"><span class="keyword">数据好好的啊，可为什么出不来效果……最后发现小球半径没有设置……出来才有鬼呢</span></span><br></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">有人问我有没有什么心得，心得这东西说出来都懂，做起来却不简单，</span><br><span class="line">如果你觉得一个人的学习方式很好，你应该去观察他，然后取长补短。</span><br><span class="line">每个人的境遇都是不同的，别人的学习方法不一定适合你，你没有必要和别人一样。</span><br><span class="line">比如我大学喜欢写诗，然后通读各大名著，不断思考世界，如果你没有这些基础，</span><br><span class="line">我的心得就不一定适合你。每个人的价值观也是不同的，我是更倾向提升自我境界的那种人，</span><br><span class="line">物质并不多求。心得这东西，别人的都是废话，需要的话，网上鸡汤自己挑，</span><br><span class="line">一般人豪言壮语，大多只是自欺欺人。最近看到八个字挺实在:<span class="string">"生死看淡，不服就干"</span>。</span><br></pre></td></tr></table></figure><blockquote><p>总的来说第二天收获颇丰。</p></blockquote><hr><h5 id="第三、四天及体悟："><a href="#第三、四天及体悟：" class="headerlink" title="第三、四天及体悟："></a>第三、四天及体悟：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第三天基础控件，感觉应该很枯燥，所以我尽可能让它变得有趣</span><br><span class="line">我喜欢画体系的树状图，因为这样看起来很清晰，也助于整理思路</span><br><span class="line">我喜欢卡片，源于游戏王，对于繁多的事物，感觉用卡片记录一下比较有趣</span><br></pre></td></tr></table></figure><hr><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">第三天源码翻得比较多，基本上是进去看控件属性，代码测试</span><br><span class="line">通过Android和<span class="selector-tag">html</span>+css的布局经验，基本上套路都是那回事</span><br><span class="line">而且Flutter的<span class="attribute">Flex</span>布局和css的<span class="attribute">flex</span>布局不谋而合，所以入手容易很多</span><br><span class="line">遇到<span class="attribute">margin</span>的时候，有点感触，写了点看到新东西的态度:</span><br><span class="line"></span><br><span class="line">新事物往往都与旧事物有联系,学习新事物最好快速找到它与你知识库中旧事物的联系,</span><br><span class="line">联系的多少取决于你知识库中内容的多少，连接得越多，你会越快或越能掌握旧事物</span><br></pre></td></tr></table></figure><hr><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本以为第四天可以把剩余的控件讲完，再写几个小案例呢，万万没想到:</span><br><span class="line">Flutter的布局如此之多，再加上卡了一点小壳，只勉强把控件了结(实际上还有很多未涉及)</span><br><span class="line">Flutter里面<span class="number">29</span>种叠合模式也是吓到我了，也借此分析了一下这种多情况的分析方式</span><br><span class="line">第三天把我的激情燃烧殆尽，第四天，三个控件一组，一共六组<span class="number">18</span>张，没那么多花哨</span><br><span class="line">最后将Flex布局详细说明了一下</span><br></pre></td></tr></table></figure><hr><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这两天难度不是很大，就是有点麻烦，画图，配卡什么的，</span><br><span class="line">只是敲代码的估计一天就够了，不过那样会及其无聊，不是我想要的</span><br><span class="line">第四天写到最后其实还是有不少控件没涉及到呢，但感觉也就那回事</span><br><span class="line">认识一个控件可就那点套路，属性基本上也就那些，遇到新的看看也就明白了</span><br><span class="line">没有必要全部列出来，这就是<span class="string">"鱼与渔"</span>的区别吧，鱼是抓不完的，你也放不下</span><br></pre></td></tr></table></figure><hr><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">两条源码翻得比较勤，有点小感悟：</span><br><span class="line"></span><br><span class="line">有问题就去解决，即使牵涉出十个新问题，你就想象成问题栈，</span><br><span class="line">有问题就进栈，解决了就出栈，这样不会乱，你可见的就是栈顶而已，</span><br><span class="line">一个一个来，这样会相对于<span class="number">11</span>个问题摆在你面前更容易接受。</span><br><span class="line">至于什么时候stackover（栈溢出）就看你的决心和耐力了。</span><br><span class="line">当然新手感觉hold不住时，可以深呼吸，咬一下牙坚持一下。</span><br><span class="line">还是不行的话，记录下问题，果断退出。也许你现在等级不够，</span><br><span class="line">这个boss你打不过，那就去刷怪升级吧。短剑重铸之日，骑士归来之时。</span><br><span class="line">现在回头来看以前困扰我的问题，其实也并没有什么，这样你才能感觉成长</span><br></pre></td></tr></table></figure><blockquote><p>总的来说第三、四天挺苦闷，但也是必经之路</p></blockquote><hr><h5 id="第五、六、七天及体悟："><a href="#第五、六、七天及体悟：" class="headerlink" title="第五、六、七天及体悟："></a>第五、六、七天及体悟：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">经过前四天，基本上语法、控件也就熟悉了，接下来统一说一下：</span><br><span class="line">第五天可以说非常有料，网上很少有详细分析Flutter怎么布局的</span><br><span class="line">中文网的例子有点小复杂，我打算循序渐进地由简到难进行陈述</span><br><span class="line">首先是最简单的条目入手一步步递进成掘金的条目，</span><br><span class="line">交互操作看似很多，其实常用的也就那几个，操作也是widget这点非常有趣</span><br></pre></td></tr></table></figure><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第六天Dart的io,以及网络和json的处理，这是一门语言的基础</span><br><span class="line">Java和Python还有node的io有所接触，所以dart这方面并不麻烦  </span><br><span class="line">但一在Flutter上，路径不好拿，背景是跨平台，还好有三根救命稻草：`path_provider`</span><br><span class="line">然后是权限问题，当然也有相应的依赖库`simple_permissions`，</span><br><span class="line">网络库用起来比较简单,基本上和前端的网络库操作一致</span><br></pre></td></tr></table></figure><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第七天是前六天的知识整合，并扫一下其他小的知识点</span><br><span class="line"><span class="symbol">Flutter</span>与安卓的原生交互让我感觉它还是蛮好的，虽然有点麻烦</span><br><span class="line">不过要跨平台，只与<span class="keyword">Android交互只是有半壁江山，ios那块就不好办了</span></span><br><span class="line"><span class="keyword">虽说Flutter可以跨平台，但如果要玩得转，需要一个人兼具Android和ios</span></span><br><span class="line"><span class="keyword">这样算来，这个跨平台代价还是有的，你也许会说，有插件包啊</span></span><br><span class="line"><span class="keyword">但是插件包只能解决一部分问题，各种业务千差万别，如果只靠插件包，有点牵强</span></span><br><span class="line"><span class="keyword">毕竟有些逻辑上的小修小补，具体问题框架无能为力，只能"凑合用"</span></span><br><span class="line"><span class="keyword">Flutter是一个很好的UI框架，但可操作性，略有不足</span></span><br></pre></td></tr></table></figure><hr><h5 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h5><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">React玩的好的人入手Flutter可以说会轻松很多，因为思想非常相似</span><br><span class="line">任何人都会有不足，不可能对这个世界全识全知，也就是<span class="string">"术业有专攻"</span></span><br><span class="line">但并不意味这要闭关锁国，排斥外物。程序员读读诗，看看史也没有什么不可</span><br><span class="line">多看星空方知何谓渺小，多看细胞方知何谓浩大，你是巨人也是沙，崇高并谦卑着</span><br><span class="line">程序源于对这个世界的认知，何为境界，你眼中所视之物，究竟为何? </span><br><span class="line">学无止境，不要飘，脚踏实地，一步一印，殊途同归，新即远方，思之将至。</span><br></pre></td></tr></table></figure><hr><h5 id="最后插播一段感悟：我经常思考工具与使用者间的关系"><a href="#最后插播一段感悟：我经常思考工具与使用者间的关系" class="headerlink" title="最后插播一段感悟：我经常思考工具与使用者间的关系:"></a>最后插播一段感悟：我经常思考工具与使用者间的关系:</h5><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">`用工具`和`会用工具`之差异:[良庖岁更刀，割也；族庖月更刀，折也],</span><br><span class="line">工具的使用方法体现了一位`工匠`的技艺  </span><br><span class="line"></span><br><span class="line"><span class="title">《庖丁解牛》是我最喜欢的一篇古文，如何在做任何事上:</span></span><br><span class="line">[以无厚入有间，恢恢乎其于游刃必有余地矣]是我的思考  </span><br><span class="line"></span><br><span class="line">文中的八字成为我接触新事物的律典：[依乎天理，因其固然]。</span><br><span class="line">通其理，方用之，是`匠者`与`匠师`的差异   </span><br><span class="line"></span><br><span class="line">如果你不懂牛的构造原理，拿一把屠刀固然可杀牛取肉，</span><br><span class="line">但庖丁的[以神遇而不以目视，官知止而神欲行]  </span><br><span class="line">[提刀而立，为之四顾，为之踌躇满志，善刀而藏之]感觉也就与你无缘，</span><br><span class="line">而这是一位匠者的自豪。 </span><br><span class="line"></span><br><span class="line">写一个程序就像打造一件艺术品，制造的过程便是`解牛`，</span><br><span class="line">IDE、API、运行环境就是我手中的剑  </span><br><span class="line"></span><br><span class="line">普通屠夫遇牛则斩，好肉坏肉在一起切，煮成一大杂烩。</span><br><span class="line"><span class="title">庖丁的匠心独运是我追求的境界:</span>  </span><br><span class="line">[吾生也有涯，而知也无涯,以有涯随无涯] 愿君且行且珍惜。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人-也是沙粒，崇高并谦卑着-张风捷特烈&quot;&gt;&lt;a href=&quot;#多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人-也是沙粒，崇高并谦卑着-张风捷特烈&quot; class=&quot;headerlink&quot; title=&quot;多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人,也是沙粒，崇高并谦卑着----张风捷特烈&quot;&gt;&lt;/a&gt;&lt;code&gt;多看星空方知何谓渺小，多看细胞方知何谓浩大，我是巨人,也是沙粒，崇高并谦卑着----张风捷特烈&lt;/code&gt;&lt;/h4&gt;&lt;hr&gt;
&lt;h5 id=&quot;写这个系列主要是出于以下目的：&quot;&gt;&lt;a href=&quot;#写这个系列主要是出于以下目的：&quot; class=&quot;headerlink&quot; title=&quot;写这个系列主要是出于以下目的：&quot;&gt;&lt;/a&gt;写这个系列主要是出于以下目的：&lt;/h5&gt;&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;给自己一个挑战，并附加时间限制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;一直想要表达一下：遇到新技术时的态度，借此分析一下我对于一件新事物认知的过程  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;Flutter对于Android开发者，确实需要去稍微了解一下 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt;作为一个地道的javaer+Androider,希望可以为想入坑Flutter的朋友铺条小路  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5.&lt;/span&gt;整个&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;篇文章贯穿着我学习的心+思，基本上敲一段测试代码，写一段文章。对我的学习方式也是一种记录与沉淀&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第7天--字体图标+综合小案例+Android代码交互</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/07.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/07.html</id>
    <published>2018-12-22T13:46:01.000Z</published>
    <updated>2020-05-04T08:19:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Flutter七日游第七天：2018-12-22-天气：雨-阴"><a href="#Flutter七日游第七天：2018-12-22-天气：雨-阴" class="headerlink" title="Flutter七日游第七天：2018-12-22 天气：雨-阴"></a><code>Flutter七日游第七天：2018-12-22 天气：雨-阴</code></h4><h4 id="零、前言"><a href="#零、前言" class="headerlink" title="零、前言"></a>零、前言</h4><blockquote><p>最后一天了,今天将把前六天的零碎知识整合起来,以及未涉及的零碎知识<br>最后会附上源码，在github,我按天分包稍微整理了一下，顺手Star一下吧<br>顺便提一下：Dart语法的相关测试在<code>test包的base里</code>(怕你们找不到)<br>与Android代码交互后感觉flutter还是蛮可以的，可惜没条件玩ios,不然岂不是可以通杀<br>(给我七天或许可以把ios跑一圈,以后有钱再说吧)  </p></blockquote><h5 id="留图镇楼：分类效果和查询效果"><a href="#留图镇楼：分类效果和查询效果" class="headerlink" title="留图镇楼：分类效果和查询效果"></a>留图镇楼：<code>分类效果和查询效果</code></h5><table><thead><tr><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$07$0.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$07$1.png" alt=""></td></tr></tbody></table><a id="more"></a><hr><h4 id="一、字体图标的相关问题"><a href="#一、字体图标的相关问题" class="headerlink" title="一、字体图标的相关问题"></a>一、字体图标的相关问题</h4><h5 id="1-字体图标："><a href="#1-字体图标：" class="headerlink" title="1.字体图标："></a>1.字体图标：</h5><blockquote><p>字体图标放大不变形，又能改变颜色，主要根据<code>.ttf</code>的字体，<br>然后图标算一个文字，根据unicode来对应图标,就可以用了。<br><code>Icon(Icons.android)</code>也许你经常用，但内置图标有限，只能测试玩玩<br>实际上用还是需要自定义才行，前端的时候有字体图标，Flutter应该也行</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比如我们经常怎样用：</span></span><br><span class="line"><span class="function"><span class="title">Icon</span><span class="params">(Icons.comment)</span></span></span><br></pre></td></tr></table></figure><hr><h5 id="2-进入源码看看："><a href="#2-进入源码看看：" class="headerlink" title="2.进入源码看看："></a>2.进入源码看看：</h5><blockquote><p>貌似都是静态常量，核心在unicode，如<code>0xe577</code>,还有就是字体(<code>MaterialIcons</code>)   </p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///  <span class="markdown"><span class="bullet">* </span>[<span class="string">design.google.com/icons</span>](<span class="link">https://design.google.com/icons/</span>)</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Icons</span> </span>&#123;</span><br><span class="line">  Icons._();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Generated code: do not hand-edit.</span></span><br><span class="line">  <span class="comment">// See https://github.com/flutter/flutter/wiki/Updating-Material-Design-Fonts</span></span><br><span class="line">  <span class="comment">// BEGIN GENERATED</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"material-icons md-36"</span>&gt;</span></span>360<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span> &amp;#x2014; material icon named "360".</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> IconData threesixty = IconData(<span class="number">0xe577</span>, fontFamily: <span class="string">'MaterialIcons'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"material-icons md-36"</span>&gt;</span></span>3d_rotation<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span> &amp;#x2014; material icon named "3d rotation".</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> IconData threed_rotation = IconData(<span class="number">0xe84d</span>, fontFamily: <span class="string">'MaterialIcons'</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// <span class="markdown"><span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"material-icons md-36"</span>&gt;</span></span>4k<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span> &amp;#x2014; material icon named "4k".</span></span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">const</span> IconData four_k = IconData(<span class="number">0xe072</span>, fontFamily: <span class="string">'MaterialIcons'</span>);</span><br></pre></td></tr></table></figure><hr><h5 id="3-怎么才能自定义字体图标"><a href="#3-怎么才能自定义字体图标" class="headerlink" title="3.怎么才能自定义字体图标"></a>3.怎么才能自定义字体图标</h5><blockquote><p>玩前端的应该都知道:还是进入阿里图标神库:<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">iconfont</a></p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$2.png" alt=""></p><hr><h5 id="4-根据Flutter内置的类，我写了一个自动代码生成器"><a href="#4-根据Flutter内置的类，我写了一个自动代码生成器" class="headerlink" title="4.根据Flutter内置的类，我写了一个自动代码生成器"></a>4.根据Flutter内置的类，我写了一个<code>自动代码生成器</code></h5><blockquote><p>虽然直接也能用，不够要记住图标的unicode码，算了，还是跟Flutter看齐吧<br>注意：为了简单使用：拷贝到的位置，命名，请务必和下面<code>保持一致</code>!<code>保持一致</code>!<br>把两个文件拷贝到对应处，<code>icon_by_toly.dart</code>写好(在下面)，右键运行就自动生成<code>iconfont.dart</code>了</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$3.png" alt=""></p><blockquote><p><code>代码生成器：icon_by_toly.dart</code></p></blockquote><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">import 'dart:io';</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">""</span>"import 'package:flutter/widgets.dart';</span><br><span class="line"><span class="comment">//Power By 张风捷特烈--- Generated file. Do not edit.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> TolyIcon &#123;</span><br><span class="line"></span><br><span class="line">    TolyIcon._();</span><br><span class="line"><span class="string">""</span>";</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> fileCss = <span class="keyword">File</span>.fromUri(Uri.<span class="keyword">parse</span>(<span class="string">"$&#123;Uri.base&#125;iconfont/iconfont.css"</span>));</span><br><span class="line">  <span class="keyword">if</span> (!fileCss.existsSync()) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">read</span> = fileCss.readAsStringSync();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">split</span> = <span class="keyword">read</span>.<span class="keyword">split</span>(<span class="string">".icon-"</span>);</span><br><span class="line">  <span class="keyword">split</span>.<span class="keyword">forEach</span>((str) &#123;</span><br><span class="line">    <span class="keyword">if</span> (str.contains(<span class="string">"before"</span>)) &#123;</span><br><span class="line">      <span class="keyword">var</span> <span class="keyword">split</span> = str.<span class="keyword">split</span>(<span class="string">":"</span>);</span><br><span class="line">      result += <span class="string">"static const IconData "</span> +</span><br><span class="line">          <span class="keyword">split</span>[0].replaceAll(<span class="string">"-"</span>, <span class="string">"_"</span>) +</span><br><span class="line">          <span class="string">" = const IconData("</span> +</span><br><span class="line">          <span class="keyword">split</span>[2].replaceAll(<span class="string">"\"</span>\\<span class="string">", "</span>0x<span class="string">").split("</span>\<span class="string">""</span>)[0] +</span><br><span class="line">          <span class="string">", fontFamily: \"</span>TolyIcon\<span class="string">");\n"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  result+=<span class="string">"&#125;"</span>;</span><br><span class="line">   fileCss.delete();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> fileOut = <span class="keyword">File</span>.fromUri(Uri.<span class="keyword">parse</span>(<span class="string">"$&#123;Uri.base&#125;lib/iconfont.dart"</span>));</span><br><span class="line">  fileOut.writeAsStringSync(result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> config=<span class="string">""</span>"</span><br><span class="line">  fonts:</span><br><span class="line">    - family: TolyIcon</span><br><span class="line">      fonts:</span><br><span class="line">        - asset: iconfont/iconfont.ttf</span><br><span class="line">  <span class="string">""</span>";</span><br><span class="line">  <span class="keyword">var</span> yaml = <span class="keyword">File</span>.fromUri(Uri.<span class="keyword">parse</span>(<span class="string">"$&#123;Uri.base&#125;pubspec.yaml"</span>));</span><br><span class="line">  <span class="keyword">if</span> (yaml.readAsStringSync().contains(<span class="string">"TolyIcon"</span>)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  yaml.writeAsString(config,mode: FileMode.<span class="keyword">append</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="pubspec-yaml的flutter标签下也会自动生成配置："><a href="#pubspec-yaml的flutter标签下也会自动生成配置：" class="headerlink" title="pubspec.yaml的flutter标签下也会自动生成配置："></a><code>pubspec.yaml</code>的flutter标签下也会自动生成配置：</h5><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fonts</span>:</span><br><span class="line">  - <span class="attribute">family</span>: TolyIcon</span><br><span class="line">    <span class="attribute">fonts</span>:</span><br><span class="line">      - <span class="attribute">asset</span>: iconfont/iconfont.ttf</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Icon</span><span class="params">(TolyIcon.icon_spring_boot)</span></span><span class="comment">//颜色可自行处理</span></span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$07$4.png" alt=""></p><hr><blockquote><p>友情提示：下载之前最好把图标名字改一下，不然之后找起来费劲<br>如果实在不想该，可以点击这里查看名字和图标的对应情况</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$5.png" alt=""></p><hr><h4 id="二、综合小案例"><a href="#二、综合小案例" class="headerlink" title="二、综合小案例"></a>二、综合小案例</h4><h5 id="1-初始代码：主页面：android-stack-dart"><a href="#1-初始代码：主页面：android-stack-dart" class="headerlink" title="1.初始代码：主页面：android_stack.dart"></a>1.初始代码：<code>主页面：android_stack.dart</code></h5><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AndroidPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _AndroidPageState createState() =&gt; _AndroidPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_AndroidPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;AndroidPage&gt;</span></span></span><br><span class="line"><span class="class">    <span class="keyword">with</span> <span class="title">SingleTickerProviderStateMixin</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scaffold = <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Container</span>(),</span><br><span class="line">      floatingActionButton: <span class="type">FloatingActionButton</span>(</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">          </span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: <span class="symbol">'Incremen</span>t',</span><br><span class="line">        child: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> scaffold;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-拼接底部条"><a href="#2-拼接底部条" class="headerlink" title="2.拼接底部条"></a>2.拼接底部条</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$07$6.png" alt=""></p><hr><h6 id="2-1-常量的准备：-为了方便使用或修改"><a href="#2-1-常量的准备：-为了方便使用或修改" class="headerlink" title="2.1:常量的准备：(为了方便使用或修改)"></a>2.1:常量的准备：(为了方便使用或修改)</h6><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItemBean</span> </span>&#123;</span><br><span class="line">  Color color;</span><br><span class="line">  IconData iconId;</span><br><span class="line">  String info;</span><br><span class="line">  ItemBean(<span class="keyword">this</span>.color, <span class="keyword">this</span>.iconId, <span class="keyword">this</span>.info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//底部栏图标信息</span></span><br><span class="line"><span class="keyword">var</span> iconLi=[</span><br><span class="line">  ItemBean(Color(<span class="number">0xff8FC552</span>),TolyIcon.android,<span class="string">"Android"</span>),</span><br><span class="line">  ItemBean(Color(<span class="number">0xff6BFB00</span>),TolyIcon.icon_spring_boot,<span class="string">"SpringBoot"</span>),</span><br><span class="line">  ItemBean(Color(<span class="number">0xff63DAFF</span>),TolyIcon.react,<span class="string">"React"</span>),</span><br><span class="line">  ItemBean(Color(<span class="number">0xffF3D861</span>),TolyIcon.biji,<span class="string">"编程随笔"</span>),</span><br><span class="line">  ItemBean(Color(<span class="number">0xff5CEBF2</span>),TolyIcon.daima,<span class="string">"系列文章"</span>)</span><br><span class="line">];</span><br></pre></td></tr></table></figure><hr><h6 id="2-2-底部栏："><a href="#2-2-底部栏：" class="headerlink" title="2.2:底部栏："></a>2.2:底部栏：</h6><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">//成员变量</span></span><br><span class="line"><span class="attr">int</span> <span class="string">_curIndex = 0;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">//底部栏</span></span><br><span class="line"><span class="attr">var</span> <span class="string">bottomNavigationBar = BottomNavigationBar(</span></span><br><span class="line">  <span class="attr">items</span>: <span class="string">iconLi.map((item) &#123;</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">BottomNavigationBarItem(</span></span><br><span class="line">        <span class="attr">title</span>: <span class="string">Text(</span></span><br><span class="line">          <span class="attr">item.info,</span></span><br><span class="line">          <span class="attr">style</span>: <span class="string">TextStyle(fontSize: 12, color: Colors.black),</span></span><br><span class="line">        <span class="attr">),</span></span><br><span class="line">        <span class="attr">icon</span>: <span class="string">Icon(</span></span><br><span class="line">          <span class="attr">item.iconId,</span></span><br><span class="line">          <span class="attr">color</span>: <span class="string">item.color,</span></span><br><span class="line">        <span class="attr">),</span></span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">Color(0xffffffff));</span></span><br><span class="line">  <span class="attr">&#125;).toList(),</span></span><br><span class="line">  <span class="attr">currentIndex</span>: <span class="string">_curIndex,</span></span><br><span class="line">  <span class="attr">onTap</span>: <span class="string">_onTapBNB,</span></span><br><span class="line"><span class="attr">);</span></span><br></pre></td></tr></table></figure><hr><h6 id="2-3：底部栏点击监听：-onTapBNB"><a href="#2-3：底部栏点击监听：-onTapBNB" class="headerlink" title="2.3：底部栏点击监听：_onTapBNB"></a>2.3：底部栏点击监听：<code>_onTapBNB</code></h6><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//底部栏点击监听</span></span><br><span class="line">  <span class="keyword">void</span> _onTapBNB(<span class="keyword">int</span> <span class="built_in">position</span>) &#123;</span><br><span class="line">    _curIndex = <span class="built_in">position</span>;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-页面条目："><a href="#3-页面条目：" class="headerlink" title="3:页面条目："></a>3:页面条目：</h5><blockquote><p>第五天写了几个条目，现在拿来用(<a href="https://juejin.im/post/5c1b7af2518825566d237655" target="_blank" rel="noopener">详细分析见第五天，这里不废话了</a>)</p></blockquote><table><thead><tr><th>静态填充</th><th>左侧滑栏</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$07$7.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$07$8.png" alt=""></td></tr></tbody></table><h6 id="3-1：左侧滑栏-left-draw-dart"><a href="#3-1：左侧滑栏-left-draw-dart" class="headerlink" title="3.1：左侧滑栏:left_draw.dart"></a>3.1：左侧滑栏:<code>left_draw.dart</code></h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeftDrawPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _LeftDrawPageState createState() =&gt; _LeftDrawPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_LeftDrawPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;LeftDrawPage&gt;</span></span></span><br><span class="line"><span class="class">    <span class="keyword">with</span> <span class="title">SingleTickerProviderStateMixin</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line"><span class="comment">//左边头像</span></span><br><span class="line">    <span class="keyword">var</span> headImg3 = <span class="type">Image</span>.asset(</span><br><span class="line">      <span class="string">"images/icon_90.png"</span>,</span><br><span class="line">      width: <span class="number">50</span>,</span><br><span class="line">      height: <span class="number">50</span>,</span><br><span class="line">    );</span><br><span class="line"><span class="comment">//中间的信息</span></span><br><span class="line">    <span class="keyword">var</span> center3 = <span class="type">Column</span>(</span><br><span class="line">      mainAxisAlignment: <span class="type">MainAxisAlignment</span>.center,</span><br><span class="line">      crossAxisAlignment: <span class="type">CrossAxisAlignment</span>.start,</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        <span class="type">Text</span>(</span><br><span class="line">          <span class="string">"张风捷特烈"</span>,</span><br><span class="line">          style: bigStyle,</span><br><span class="line">        ),</span><br><span class="line">        <span class="type">Row</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">Icon</span>(<span class="type">Icons</span>.next_week, size: <span class="number">15</span>),</span><br><span class="line">            pd(<span class="type">Text</span>(<span class="string">"创世神 | 无"</span>), l: <span class="number">5</span>)</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">        <span class="type">Row</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">Icon</span>(<span class="type">Icons</span>.keyboard, size: <span class="number">15</span>),</span><br><span class="line">            pd(<span class="type">Text</span>(<span class="string">"海的彼岸有我未曾见证的风采"</span>), l: <span class="number">5</span>)</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> rowLine3 = <span class="type">Row</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        pda(headImg3, <span class="number">5</span>),</span><br><span class="line">        <span class="type">Expanded</span>(child: pda(center3, <span class="number">5</span>)),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> test3 = <span class="type">Card</span>(</span><br><span class="line">        child: <span class="type">Container</span>(</span><br><span class="line">            height: <span class="number">95</span>,</span><br><span class="line">            color: <span class="type">Colors</span>.white,</span><br><span class="line">            padding: <span class="type">EdgeInsets</span>.all(<span class="number">5</span>),</span><br><span class="line">            child: rowLine3));</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Drawer</span>(</span><br><span class="line">        elevation: <span class="number">5</span>,</span><br><span class="line">        child: <span class="type">Container</span>(</span><br><span class="line">            padding: <span class="type">EdgeInsets</span>.only(top: <span class="number">50</span>),</span><br><span class="line">            alignment: <span class="type">AlignmentDirectional</span>.topCenter,</span><br><span class="line">            color: <span class="type">Color</span>(<span class="number">0xff99C6F9</span>),</span><br><span class="line">            child: test3));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="3-2：列表静态填充-home-list-dart"><a href="#3-2：列表静态填充-home-list-dart" class="headerlink" title="3.2：列表静态填充:home_list.dart"></a>3.2：列表静态填充:<code>home_list.dart</code></h6><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">class</span> <span class="string">HomeListPage</span> <span class="string">extends</span> <span class="string">StatefulWidget</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">@override</span></span><br><span class="line">  <span class="string">_HomeListPageState</span> <span class="string">createState()</span> <span class="string">=&gt;</span> <span class="string">_HomeListPageState();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">class</span> <span class="string">_HomeListPageState</span> <span class="string">extends</span> <span class="string">State&lt;HomeListPage&gt;</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">@override</span></span><br><span class="line">  <span class="string">Widget</span> <span class="string">build(BuildContext</span> <span class="string">context)</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">return</span> <span class="string">ListView.builder(</span></span><br><span class="line">      <span class="attr">itemCount:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">      <span class="attr">itemBuilder:</span> <span class="string">(BuildContext</span> <span class="string">context,</span> <span class="string">int</span> <span class="string">index)</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">return</span> <span class="string">renderItem(index);</span></span><br><span class="line">      <span class="string">&#125;,</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="string">renderItem(int</span> <span class="string">index)</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="string">////////////////////////-----------------测试4--------------------------------</span></span><br><span class="line">    <span class="string">var</span> <span class="string">line1_4</span> <span class="string">=</span> <span class="string">Row(</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Image.asset("images/icon_90.png",</span> <span class="attr">width:</span> <span class="number">20</span><span class="string">,</span> <span class="attr">height:</span> <span class="number">20</span><span class="string">),</span></span><br><span class="line">        <span class="string">Expanded(</span></span><br><span class="line">          <span class="attr">child:</span> <span class="string">pd(Text("张风捷特烈"),</span> <span class="attr">l:</span> <span class="number">5</span><span class="string">),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">Text(</span></span><br><span class="line">          <span class="string">"Flutter/Dart"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">style:</span> <span class="string">infoStyle,</span></span><br><span class="line">        <span class="string">)</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">var</span> <span class="string">center_right</span> <span class="string">=</span> <span class="string">Column(</span></span><br><span class="line">      <span class="attr">mainAxisSize:</span> <span class="string">MainAxisSize.min,</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Text(</span></span><br><span class="line">          <span class="string">"Flutter第4天--基础控件(下)+Flex布局详解"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">style:</span> <span class="string">littelStyle,</span></span><br><span class="line">          <span class="attr">maxLines:</span> <span class="number">2</span><span class="string">,</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">pd(</span></span><br><span class="line">            <span class="string">Text(</span></span><br><span class="line">              <span class="string">"1.2：优雅地查看：图片的适应模式--BoxFit1.3：优雅地查看：颜色混合模式--colorBlendMode"</span><span class="string">,</span></span><br><span class="line">              <span class="attr">style:</span> <span class="string">infoStyle,</span></span><br><span class="line">              <span class="attr">maxLines:</span> <span class="number">2</span><span class="string">,</span></span><br><span class="line">              <span class="attr">overflow:</span> <span class="string">TextOverflow.ellipsis,</span></span><br><span class="line">            <span class="string">),</span></span><br><span class="line">            <span class="attr">t:</span> <span class="number">5</span><span class="string">),</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">//中间的信息</span></span><br><span class="line">    <span class="string">var</span> <span class="string">center4</span> <span class="string">=</span> <span class="string">Row(</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Expanded(child:</span> <span class="string">pda(center_right,</span> <span class="number">5</span><span class="string">)),</span></span><br><span class="line">        <span class="string">Image.asset(</span></span><br><span class="line">          <span class="string">"images/wy_300x200.jpg"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">width:</span> <span class="number">80</span><span class="string">,</span></span><br><span class="line">          <span class="attr">height:</span> <span class="number">80</span><span class="string">,</span></span><br><span class="line">          <span class="attr">fit:</span> <span class="string">BoxFit.fitHeight,</span></span><br><span class="line">        <span class="string">)</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">var</span> <span class="string">end4</span> <span class="string">=</span> <span class="string">Row(</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Icon(</span></span><br><span class="line">          <span class="string">Icons.grade,</span></span><br><span class="line">          <span class="attr">color:</span> <span class="string">Colors.green,</span></span><br><span class="line">          <span class="attr">size:</span> <span class="number">20</span><span class="string">,</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">Text(</span></span><br><span class="line">          <span class="string">"1000W"</span><span class="string">,</span></span><br><span class="line">          <span class="attr">style:</span> <span class="string">infoStyle,</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">pd(Icon(Icons.tag_faces,</span> <span class="attr">color:</span> <span class="string">Colors.lightBlueAccent,</span> <span class="attr">size:</span> <span class="number">20</span><span class="string">),</span></span><br><span class="line">            <span class="attr">l:</span> <span class="number">15</span><span class="string">,</span> <span class="attr">r:</span> <span class="number">5</span><span class="string">),</span></span><br><span class="line">        <span class="string">Text("2000W",</span> <span class="attr">style:</span> <span class="string">infoStyle),</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">var</span> <span class="string">item4</span> <span class="string">=</span> <span class="string">Column(</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[line1_4,</span> <span class="string">Expanded(child:</span> <span class="string">center4),</span> <span class="string">end4],</span></span><br><span class="line">    <span class="string">);</span></span><br><span class="line"></span><br><span class="line">    <span class="string">var</span> <span class="string">aCard</span> <span class="string">=</span> <span class="string">Card(</span></span><br><span class="line">        <span class="attr">child:</span> <span class="string">Container(</span></span><br><span class="line">            <span class="attr">height:</span> <span class="number">160</span><span class="string">,</span></span><br><span class="line">            <span class="attr">color:</span> <span class="string">Colors.white,</span></span><br><span class="line">            <span class="attr">padding:</span> <span class="string">EdgeInsets.all(10),</span></span><br><span class="line">            <span class="attr">child:</span> <span class="string">item4));</span></span><br><span class="line"></span><br><span class="line">    <span class="string">return</span> <span class="string">aCard;</span></span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h5 id="4-动态数据获取："><a href="#4-动态数据获取：" class="headerlink" title="4.动态数据获取："></a>4.动态数据获取：</h5><blockquote><p>昨天已经把http获取数据的内容将过了，并且把服务端的数据解析了<br>今天就是使用这些数据，来填充静态界面，<code>api接口介绍</code>和<code>NoteBean</code><a href="https://juejin.im/post/5c1cd2426fb9a049a711cb75" target="_blank" rel="noopener">昨天已完成</a><br>封装一个获取数据的方法：简单说下用法:<br><code>style是类型：Android是A ;SpringBoot是SB ; React 是Re ; 笔记是 Note</code><br><code>offset和num 联合使用可以达到分页效果， 比如offset=24,num=12,就是一页12条数据的第3页</code></p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'dart:convert'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:http/http.dart'</span> <span class="keyword">as</span> client;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:toly/pager/day7/bean.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> BASE_URL = <span class="string">'http://192.168.43.60:8089'</span>;<span class="comment">//api接口的域名自己改一下</span></span><br><span class="line"><span class="keyword">const</span> API = <span class="string">'/api/android/note/'</span>;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">List</span>&lt;NoteBean&gt;&gt; <span class="keyword">get</span>(&#123;style = <span class="string">''</span>, offset = <span class="number">0</span>, <span class="built_in">num</span> = <span class="number">1</span>&#125;) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> dataLi = &lt;NoteBean&gt;[];</span><br><span class="line">  <span class="keyword">var</span> url = BASE_URL + API + style + <span class="string">"/"</span> + <span class="string">"<span class="subst">$offset</span>"</span> + <span class="string">"/"</span> + <span class="string">"<span class="subst">$num</span>"</span>;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> response = <span class="keyword">await</span> client.<span class="keyword">get</span>(url);</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> result = ResultBean.fromJson(json.decode(response.body));</span><br><span class="line">      <span class="built_in">List</span> data = result.data;</span><br><span class="line">      <span class="built_in">print</span>(NoteBean.fromJson(data[<span class="number">0</span>]).type);</span><br><span class="line">      <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">        dataLi.add(NoteBean.fromJson(data[i]));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> dataLi;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="5-用一个数据来进行填充测试："><a href="#5-用一个数据来进行填充测试：" class="headerlink" title="5.用一个数据来进行填充测试："></a>5.用一个数据来进行填充测试：</h5><blockquote><p><code>主页面：android_stack.dart</code>,<code>initState</code>的时候获取数据，并更新状态</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$9.png" alt=""></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个成员变量</span></span><br><span class="line">  <span class="built_in">List</span>&lt;NoteBean&gt; _notes = [];</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line"><span class="keyword">void</span> initState() &#123;</span><br><span class="line">  <span class="keyword">super</span>.initState();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span>(<span class="built_in">num</span>: <span class="number">1</span>).then((beanLi) &#123;</span><br><span class="line">    _notes = beanLi;</span><br><span class="line">    setState(() &#123;&#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>列表界面：home_list.dart</code>:接收主界面传来的_notes，并渲染数据</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeListPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="type">List</span>&lt;<span class="type">NoteBean</span>&gt; _notes;</span><br><span class="line">  <span class="type">HomeListPage</span>(<span class="type">List</span>&lt;<span class="type">NoteBean</span>&gt; notes) &#123;</span><br><span class="line">    _notes = notes;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _HomeListPageState createState() =&gt; _HomeListPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_HomeListPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;HomeListPage&gt;</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">var</span> notes = widget._notes;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="type">ListView</span>.builder(</span><br><span class="line">      itemCount: notes.length,</span><br><span class="line">      itemBuilder: (<span class="type">BuildContext</span> context, int index) &#123;</span><br><span class="line">        <span class="keyword">return</span> renderItem(notes[index]);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">//渲染条目</span></span><br><span class="line">  renderItem(<span class="type">NoteBean</span> note) &#123;</span><br><span class="line">    <span class="keyword">var</span> line1_4 = <span class="type">Row</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        <span class="type">Image</span>.asset(<span class="string">"images/icon_90.png"</span>, width: <span class="number">20</span>, height: <span class="number">20</span>),</span><br><span class="line">        <span class="type">Expanded</span>( child: pd(<span class="type">Text</span>(<span class="string">"张风捷特烈"</span>), l: <span class="number">5</span>),),</span><br><span class="line">        <span class="type">Text</span>( note<span class="class">.<span class="keyword">type</span>,<span class="title">style</span></span>: infoStyle,)</span><br><span class="line">        ],</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> center_right = <span class="type">Column</span>(</span><br><span class="line">      mainAxisSize: <span class="type">MainAxisSize</span>.min,</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[<span class="type">Text</span>(note.name,style: littelStyle,maxLines: <span class="number">2</span>,),</span><br><span class="line">        pd(<span class="type">Text</span>( note.info, style: infoStyle, maxLines: <span class="number">2</span>,</span><br><span class="line">              overflow: <span class="type">TextOverflow</span>.ellipsis, ), t: <span class="number">5</span>),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"><span class="comment">//中间的信息</span></span><br><span class="line">    <span class="keyword">var</span> center4 = <span class="type">Row</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        <span class="type">Expanded</span>(child: pda(center_right, <span class="number">5</span>)),</span><br><span class="line">        <span class="type">Image</span>.network( note.imgUrl,</span><br><span class="line">          width: <span class="number">80</span>, height: <span class="number">80</span>, fit: <span class="type">BoxFit</span>.fitHeight )</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> end4 = <span class="type">Row</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        <span class="type">Icon</span>( <span class="type">Icons</span>.grade, color: <span class="type">Colors</span>.green, size: <span class="number">20</span>, ),</span><br><span class="line">        <span class="type">Text</span>( <span class="string">"1000W"</span>, style: infoStyle,),</span><br><span class="line">        pd(<span class="type">Icon</span>(<span class="type">Icons</span>.tag_faces, color: <span class="type">Colors</span>.lightBlueAccent, size: <span class="number">20</span>),</span><br><span class="line">            l: <span class="number">15</span>, r: <span class="number">5</span>),</span><br><span class="line">        <span class="type">Text</span>(<span class="string">"2000W"</span>, style: infoStyle),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> item4 = <span class="type">Column</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[line1_4, <span class="type">Expanded</span>(child: center4), end4],</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> aCard = <span class="type">Card</span>(</span><br><span class="line">        child: <span class="type">Container</span>(  height: <span class="number">160</span>,color: <span class="type">Colors</span>.white,</span><br><span class="line">            padding: <span class="type">EdgeInsets</span>.all(<span class="number">10</span>), child: item4));</span><br><span class="line">    <span class="keyword">return</span> aCard;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><code>现在万事俱备，东风也到了,num小小动一下：num=30</code></p></blockquote><table><thead><tr><th>–</th><th>–</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$07$10.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$07$11.png" alt=""></td></tr></tbody></table><blockquote><p>也许你感觉还未开始，但确实已经结束了…</p></blockquote><hr><h5 id="6-底部导航栏的切换：-下面两个图一样的，为了撑场面…"><a href="#6-底部导航栏的切换：-下面两个图一样的，为了撑场面…" class="headerlink" title="6.底部导航栏的切换：(下面两个图一样的，为了撑场面…)"></a>6.底部导航栏的切换：(下面两个图一样的，为了撑场面…)</h5><blockquote><p>刚才是数据没有分类型，现在点击底部导航，按范围进行展示<br><code>get(style: &quot;area/A&quot;, num: 30)//这样就是展示又有安卓类的文章</code>  </p></blockquote><table><thead><tr><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$07$12.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$07$13.png" alt=""></td></tr></tbody></table><blockquote><p><code>android_stack.dart</code>添加成员变量<br>这里我默认加载完，做分页的话，再添加个_count的成员变量就行了</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span> style = <span class="string">"area/A"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//页面打开，默认加载安卓页</span></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">initState</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    super.initState();</span><br><span class="line">    <span class="built_in">get</span>(style: style, num: <span class="number">1000</span>).then((beanLi) &#123;</span><br><span class="line">      _notes = beanLi;</span><br><span class="line">      setState(() &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//底部栏点击监听---动态改变范围</span></span><br><span class="line">  <span class="keyword">void</span> _onTapBNB(<span class="keyword">int</span> <span class="built_in">position</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="built_in">position</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        style = <span class="string">"area/A"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        style = <span class="string">"area/SB"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        style = <span class="string">"area/Re"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        style = <span class="string">"area/Note"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        style = <span class="string">"area/A"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    _curIndex = <span class="built_in">position</span>;</span><br><span class="line">    <span class="built_in">get</span>(style: style, num: <span class="number">1000</span>).then((beanLi) &#123;</span><br><span class="line">      _notes = beanLi;</span><br><span class="line">      setState(() &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h5 id="7-底部栏和搜索功能"><a href="#7-底部栏和搜索功能" class="headerlink" title="7.底部栏和搜索功能"></a>7.底部栏和搜索功能</h5><blockquote><p>底部栏用法详情在<a href="https://juejin.im/post/5c1a34f95188253ff1477cfd" target="_blank" rel="noopener">第四篇</a></p></blockquote><table><thead><tr><th>–</th><th>–</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$07$14.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$07$15.png" alt=""></td></tr></tbody></table><hr><blockquote><p>底部栏:这里把事件写在里面了，你也可以抽成方法<br>或者有些控件太长，你也可以抽出来做变量</p></blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">var searchSheet = BottomSheet(</span><br><span class="line">    onClosing: () &#123;&#125;,</span><br><span class="line">    builder: (<span class="name">context</span>) =&gt; (<span class="name">Card</span>(</span><br><span class="line">        color: Color.fromARGB(<span class="number">255</span>, <span class="number">214</span>, <span class="number">242</span>, <span class="number">251</span>),</span><br><span class="line">        child: Wrap(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            Center(<span class="name">child</span>: pdhv(<span class="name">TextField</span>(</span><br><span class="line">              onChanged: (<span class="name">v</span>) &#123;style = <span class="string">"name/"</span> + v<span class="comment">;&#125;), h: 60)),</span></span><br><span class="line">            Center(<span class="name">child</span>: pdhv( <span class="name">GestureDetector</span>(<span class="name">child</span>:</span><br><span class="line">            Image.asset(<span class="string">"images/icon_90.png"</span>,width: <span class="number">50</span>,height: <span class="number">50</span> ),</span><br><span class="line">                      onTap: () &#123;</span><br><span class="line">                        get(<span class="name">style</span>: style, num: <span class="number">1000</span>).then((<span class="name">beanLi</span>) &#123;</span><br><span class="line">                          _notes = beanLi<span class="comment">;</span></span><br><span class="line">                          setState(() &#123;&#125;)<span class="comment">;</span></span><br><span class="line">                        &#125;)<span class="comment">;</span></span><br><span class="line">                      &#125;,</span><br><span class="line">                    ),</span><br><span class="line">                    v: <span class="number">10</span>)),</span><br><span class="line">          ],</span><br><span class="line">        ))))<span class="comment">;</span></span><br><span class="line">        </span><br><span class="line">//点击按钮弹出：</span><br><span class="line"> var scContext<span class="comment">; //先声明一下Scaffold的context</span></span><br><span class="line">    var scaffold = Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">        ),</span><br><span class="line">        body: Builder(<span class="name">builder</span>: (<span class="name">context</span>) &#123;</span><br><span class="line">          scContext = context<span class="comment">;</span></span><br><span class="line">          return HomeListPage(<span class="name">_notes</span>)<span class="comment">;</span></span><br><span class="line">        &#125;),</span><br><span class="line">        floatingActionButton: FloatingActionButton(</span><br><span class="line">          onPressed: () &#123;</span><br><span class="line">            Scaffold.of(<span class="name">scContext</span>).showBottomSheet(<span class="name">searchSheet</span>.builder)<span class="comment">;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          //下面不用修改，略...</span><br></pre></td></tr></table></figure><blockquote><p>Ok,小案例就这样</p></blockquote><hr><h4 id="三、Android代码交互"><a href="#三、Android代码交互" class="headerlink" title="三、Android代码交互"></a>三、Android代码交互</h4><h5 id="1-最简单的无参无返回函数调用：两对应"><a href="#1-最简单的无参无返回函数调用：两对应" class="headerlink" title="1.最简单的无参无返回函数调用：两对应"></a>1.最简单的无参无返回函数调用：<code>两对应</code></h5><blockquote><p>不得不说：前六天不能弹吐司真是不好受，原生交互肯定先拿他开刀</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$16.png" alt=""></p><hr><h5 id="1-1：Android代码"><a href="#1-1：Android代码" class="headerlink" title="1.1：Android代码"></a>1.1：Android代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">FlutterActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL = <span class="string">"www.toly1994.com/test.名字随意起"</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        GeneratedPluginRegistrant.registerWith(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> MethodChannel(getFlutterView(), CHANNEL).setMethodCallHandler(</span><br><span class="line">                <span class="keyword">new</span> MethodChannel.MethodCallHandler() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMethodCall</span><span class="params">(MethodCall methodCall, MethodChannel.Result result)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (methodCall.method.equals(<span class="string">"showToast"</span>)) &#123;</span><br><span class="line">                            showToast(<span class="string">"Hello Flutter,I am in Android"</span>);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            result.notImplemented();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示吐司</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        Toast toast = Toast.makeText(<span class="keyword">this</span>, msg, Toast.LENGTH_SHORT);</span><br><span class="line">        toast.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> platform = <span class="function"><span class="keyword">const</span> <span class="title">MethodChannel</span><span class="params">(<span class="string">"www.toly1994.com/test.名字随意起"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> toastTest = Center(</span><br><span class="line">  child: RaisedButton(</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line">      platform.invokeMethod(<span class="string">"showToast"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    child: <span class="keyword">new</span> Text(<span class="string">"点击弹吐司"</span>),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$07$17.png" alt=""></p><hr><h5 id="2-Flutter中传参，调用Android含参方法-三对应"><a href="#2-Flutter中传参，调用Android含参方法-三对应" class="headerlink" title="2.Flutter中传参，调用Android含参方法:三对应"></a>2.Flutter中传参，调用Android含参方法:<code>三对应</code></h5><p><img src="http://photo.toly1994.com/flutter$seven_day$07$18.png" alt=""></p><hr><h6 id="2-1：Android代码"><a href="#2-1：Android代码" class="headerlink" title="2.1：Android代码"></a>2.1：Android代码</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">FlutterActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHANNEL = <span class="string">"www.toly1994.com/test.名字随意起"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        GeneratedPluginRegistrant.registerWith(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">new</span> MethodChannel(getFlutterView(), CHANNEL).setMethodCallHandler(</span><br><span class="line">                <span class="keyword">new</span> MethodChannel.MethodCallHandler() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMethodCall</span><span class="params">(MethodCall methodCall, MethodChannel.Result result)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (methodCall.method.equals(<span class="string">"showToast"</span>)) &#123;</span><br><span class="line">                            <span class="comment">//解析参数</span></span><br><span class="line">                            String msg = methodCall.argument(<span class="string">"msg"</span>);</span><br><span class="line">                            showToast(msg);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            result.notImplemented();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示吐司</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> msg 信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showToast</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        Toast toast = Toast.makeText(<span class="keyword">this</span>, msg, Toast.LENGTH_SHORT);</span><br><span class="line">        toast.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="2-2-Flutter代码："><a href="#2-2-Flutter代码：" class="headerlink" title="2.2:Flutter代码："></a>2.2:Flutter代码：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> platform = <span class="function"><span class="keyword">const</span> <span class="title">MethodChannel</span><span class="params">(<span class="string">"www.toly1994.com/test.名字随意起"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> toastTest = Center(</span><br><span class="line">  child: RaisedButton(</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line">      platform.invokeMethod(<span class="string">"showToast"</span>,&#123;<span class="string">"msg"</span>:<span class="string">"Flutter大爷我赏你一口吐司"</span>&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    child: <span class="keyword">new</span> Text(<span class="string">"点击弹吐司"</span>),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$07$19.png" alt=""></p><hr><h5 id="2-3：加返回值的方法调用："><a href="#2-3：加返回值的方法调用：" class="headerlink" title="2.3：加返回值的方法调用："></a>2.3：加返回值的方法调用：</h5><blockquote><p>举什么例子，我想了一会，就来个MD5码吧</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$20.png" alt=""></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Activity添加判断分支</span></span><br><span class="line"><span class="keyword">if</span> (methodCall.<span class="keyword">method</span>.equals(<span class="string">"getMD5"</span>)) &#123;</span><br><span class="line">    String arg = methodCall.argument(<span class="string">"arg"</span>);</span><br><span class="line">    String md5 = get<span class="constructor">MD5(<span class="params">arg</span>)</span>;</span><br><span class="line">    result.success(md5);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取一个字符串的Md5值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param content 内容</span></span><br><span class="line"><span class="comment">     * @return Md5值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public String get<span class="constructor">MD5(String <span class="params">content</span>)</span> &#123;</span><br><span class="line">        content = content + <span class="string">"芝麻开门"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest digest = <span class="module-access"><span class="module"><span class="identifier">MessageDigest</span>.</span></span>get<span class="constructor">Instance(<span class="string">"MD5"</span>)</span>;</span><br><span class="line">            digest.update(content.get<span class="constructor">Bytes()</span>);</span><br><span class="line">            return get<span class="constructor">HashString(<span class="params">digest</span>)</span>;</span><br><span class="line">        &#125; catch (NoSuchAlgorithmException e) &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static String get<span class="constructor">HashString(MessageDigest <span class="params">digest</span>)</span> &#123;</span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> <span class="constructor">StringBuilder()</span>;</span><br><span class="line">        for (byte b : digest.digest<span class="literal">()</span>) &#123;</span><br><span class="line">            builder.append(<span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span><span class="keyword">to</span><span class="constructor">HexString((<span class="params">b</span> &gt;&gt; 4)</span> &amp; <span class="number">0xf</span>));</span><br><span class="line">            builder.append(<span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span><span class="keyword">to</span><span class="constructor">HexString(<span class="params">b</span> &amp; 0xf)</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        return builder.<span class="keyword">to</span><span class="constructor">String()</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="2-2-Flutter代码：-1"><a href="#2-2-Flutter代码：-1" class="headerlink" title="2.2:Flutter代码："></a>2.2:Flutter代码：</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/services.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> platform = <span class="function"><span class="keyword">const</span> <span class="title">MethodChannel</span><span class="params">(<span class="string">"www.toly1994.com/test.名字随意起"</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> toastTest = Center(</span><br><span class="line">  child: RaisedButton(</span><br><span class="line">    onPressed: () &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> result= platform.invokeMethod(<span class="string">"getMD5"</span>,&#123;<span class="string">"arg"</span>:<span class="string">"https://www.jianshu.com/p/9bac0072d1a0"</span>&#125;);</span><br><span class="line">      result.then((str)&#123;</span><br><span class="line">        platform.invokeMethod(<span class="string">"showToast"</span>,&#123;<span class="string">"msg"</span>:str&#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    child: <span class="keyword">new</span> Text(<span class="string">"点击弹吐司"</span>),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>基本上也就这三种情况</p></blockquote><hr><h4 id="彩蛋-–以前Mark的一个小点：Card的shape"><a href="#彩蛋-–以前Mark的一个小点：Card的shape" class="headerlink" title="[彩蛋]–以前Mark的一个小点：Card的shape"></a>[彩蛋]–以前Mark的一个小点：Card的shape</h4><blockquote><p>有人说学习的时候一个问题会牵扯到很多其他的问题，问题一多就无从下手<br>我只说一个字：”栈”：来最后一波学习看源码的方法了,走起</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$21.png" alt=""></p><hr><h5 id="1-shape是什么-形状"><a href="#1-shape是什么-形状" class="headerlink" title="1.shape是什么:形状"></a>1.shape是什么:形状</h5><blockquote><p>现在的问题栈</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$22.png" alt=""></p><blockquote><p>可见默认圆角是4的RoundedRectangleBorder</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[shape属性]----</span><br><span class="line"><span class="comment">/// The default shape is a [RoundedRectangleBorder] with a circular corner</span></span><br><span class="line"><span class="comment">/// radius of 4.0.</span></span><br><span class="line"><span class="keyword">final</span> ShapeBorder shape;</span><br><span class="line"></span><br><span class="line">----&gt;[RoundedRectangleBorder]----</span><br><span class="line"> <span class="keyword">const</span> RoundedRectangleBorder(&#123;</span><br><span class="line">    <span class="keyword">this</span>.side = BorderSide.none,</span><br><span class="line">    <span class="keyword">this</span>.borderRadius = BorderRadius.zero,</span><br><span class="line">    </span><br><span class="line"><span class="comment">//可见有两个属性：BorderSide和BorderRadius</span></span><br><span class="line"></span><br><span class="line">----&gt;[BorderSide]----</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">BorderSide</span> &#123;</span><br><span class="line">  <span class="comment">/// Creates the side of a border.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// By default, the border is 1.0 logical pixels wide and solid black.</span></span><br><span class="line">  <span class="keyword">const</span> BorderSide(&#123;</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="keyword">const</span> Color(<span class="number">0xFF000000</span>),</span><br><span class="line">    <span class="keyword">this</span>.width = <span class="number">1.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.style = BorderStyle.solid,</span><br><span class="line"></span><br><span class="line">----&gt;[BorderRadius]----</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">BorderRadius</span> <span class="symbol">extends</span> <span class="symbol">BorderRadiusGeometry</span> &#123;</span><br><span class="line">  <span class="comment">/// Creates a border radius where all radii are [radius].</span></span><br><span class="line">  <span class="keyword">const</span> BorderRadius.all(Radius radius) : <span class="keyword">this</span>.only(</span><br><span class="line">    topLeft: radius,</span><br><span class="line">    topRight: radius,</span><br><span class="line">    bottomLeft: radius,</span><br><span class="line">    bottomRight: radius,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Creates a border radius where all radii are [Radius.circular(radius)].</span></span><br><span class="line">  BorderRadius.circular(<span class="built_in">double</span> radius) : <span class="keyword">this</span>.all(</span><br><span class="line">    Radius.circular(radius),</span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">----&gt;[Radius]------</span><br><span class="line"><span class="keyword">class</span> <span class="symbol">Radius</span> &#123;</span><br><span class="line">  <span class="comment">/// Constructs a circular radius. [x] and [y] will have the same radius value.</span></span><br><span class="line">  <span class="keyword">const</span> Radius.circular(<span class="built_in">double</span> radius) : <span class="keyword">this</span>.elliptical(radius, radius);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Constructs an elliptical radius with the given radii.</span></span><br><span class="line">  <span class="keyword">const</span> Radius.elliptical(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// The radius value on the horizontal axis.</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> x;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// The radius value on the vertical axis.</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> y;</span><br></pre></td></tr></table></figure><blockquote><p>一个shape牵扯出这么多类，有人可能就<code>栈溢出</code>了，还是使用默认的吧，等一下，且听我分析<br>当Radius入问题栈之后，看一下也就是两个值，就出栈了，BorderRadius跟着也出栈了<br>BorderSide三个字段，看一下，出栈了，现在栈顶是<code>RoundedRectangleBorder</code>你还不会吗?</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$23.png" alt=""></p><blockquote></blockquote><h5 id="2-RoundedRectangleBorder改变圆角大小-边线"><a href="#2-RoundedRectangleBorder改变圆角大小-边线" class="headerlink" title="2. RoundedRectangleBorder改变圆角大小+边线"></a>2. RoundedRectangleBorder改变圆角大小+边线</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$07$24.png" alt=""></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var card_shape = Card(</span><br><span class="line">//    shape: CircleBorder(<span class="name">side</span>: BorderSide(<span class="name">width</span>: <span class="number">1</span>)),</span><br><span class="line">    shape: RoundedRectangleBorder(</span><br><span class="line">      side<span class="symbol">:BorderSide</span>(<span class="name">color</span>: Color(<span class="number">0</span>xffD516F5),width: <span class="number">5</span>) ,</span><br><span class="line">        borderRadius: BorderRadius.all(<span class="name">Radius</span>.circular(<span class="number">20</span>))),</span><br><span class="line">    clipBehavior: Clip.antiAlias,</span><br><span class="line">    child: Container(</span><br><span class="line">      width: <span class="number">100</span>,</span><br><span class="line">      height: <span class="number">100</span>,</span><br><span class="line">      color: Color(<span class="number">0</span>xffCDECF6),</span><br><span class="line">      child: Center(<span class="name">child</span><span class="symbol">:Text</span>(</span><br><span class="line">        <span class="string">"捷"</span>,</span><br><span class="line">        style: TextStyle(<span class="name">color</span>: Colors.black,fontSize: <span class="number">40</span>),</span><br><span class="line">      ) ,),</span><br><span class="line">    ))<span class="comment">;</span></span><br></pre></td></tr></table></figure><blockquote><p>那弹栈过后问题跑哪里?<br>我想应该是<code>临时知识库</code>吧,你解决的问题中获取的知识，经验会累积<br>可能长久不用知识库里的知识会漏掉，但印象有的，下一次再入栈，解决起来会更快<br>在的知识库里扎根的知识，那当你遇到时，就不是问题，直接弹栈，这样想学习是不是也挺好玩的</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$25.png" alt=""></p><blockquote><p>大神级的Coder知识库丰富，问题都不是问题，也许偶尔入栈一两个，但栈很深(感觉挺浪费哈)<br>新手就是栈比较浅，问题多，所以容易<code>StackOver</code>,所以修炼你容忍问题的能力(栈深)很有必要<br>像我这样不深不浅的刚刚好，会碰到问题，也能一点点解决，一点一点踏上<code>封神之路</code><br>但所有的大神也都是从新手这样过来的，解决问题的能力也不是与生俱来，祝你慢慢弹栈，收获多多。</p></blockquote><hr><h5 id="3-接下来看ShapeBorder在栈顶，我们去瞅瞅"><a href="#3-接下来看ShapeBorder在栈顶，我们去瞅瞅" class="headerlink" title="3.接下来看ShapeBorder在栈顶，我们去瞅瞅"></a>3.接下来看<code>ShapeBorder</code>在栈顶，我们去瞅瞅</h5><blockquote><p>BorderSide现在已经化敌为友，CircleBorder岂不是秒出栈，并且俘获<code>CircleBorder</code>一枚<br>而且BorderSide强化+1，知识就是这样积累的，难道还有别的方法吗?除非记忆拷贝…</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$26.png" alt=""></p><blockquote><p>转一转当CD背景感觉挺不错</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$27.png" alt=""></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var card_shape = Card(</span><br><span class="line">    shape: CircleBorder(<span class="name">side</span>: BorderSide(<span class="name">width</span>: <span class="number">15</span>,color: Color(<span class="number">0</span>xffF9DFA7))),</span><br><span class="line">    clipBehavior: Clip.antiAlias,</span><br><span class="line">    child: Container(</span><br><span class="line">      width: <span class="number">100</span>,</span><br><span class="line">      height: <span class="number">100</span>,</span><br><span class="line">      color: Color(<span class="number">0</span>xffCDECF6),</span><br><span class="line">      child: Center(<span class="name">child</span><span class="symbol">:Text</span>(</span><br><span class="line">        <span class="string">"捷"</span>,</span><br><span class="line">        style: TextStyle(<span class="name">color</span>: Colors.black,fontSize: <span class="number">40</span>),</span><br><span class="line">      ) ,),</span><br><span class="line">    ))<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h5 id="4-前方高能，非战斗人员带好零食"><a href="#4-前方高能，非战斗人员带好零食" class="headerlink" title="4.前方高能，非战斗人员带好零食"></a>4.前方高能，非战斗人员带好零食</h5><blockquote><p>其实觉得shape好玩，是在粗略看源码时,看到了canvas,才mark的<br>自定义ShapeBorder走起：画具在手，天下我有</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$07$28.png" alt=""></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">var card_shape = Card(</span><br><span class="line">    shape: StarBorder(),</span><br><span class="line"><span class="comment">//    shape: CircleBorder(side: BorderSide(width: 15,color: Color(0xffF9DFA7))),</span></span><br><span class="line"><span class="comment">//    shape: RoundedRectangleBorder(</span></span><br><span class="line"><span class="comment">//      side:BorderSide(color: Color(0xffD516F5),width: 5) ,</span></span><br><span class="line"><span class="comment">//        borderRadius: BorderRadius.all(Radius.circular(20))),</span></span><br><span class="line">    clipBehavior: Clip.hardEdge,</span><br><span class="line">    child: Container(</span><br><span class="line">      <span class="built_in">width</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="built_in">height</span>: <span class="number">100</span>,</span><br><span class="line">      color: Color(<span class="number">0xffCDECF6</span>),</span><br><span class="line">      child: Center(</span><br><span class="line">        child: Text(</span><br><span class="line">          <span class="string">"捷"</span>,</span><br><span class="line">          style: TextStyle(color: Colors.black, fontSize: <span class="number">40</span>),</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    ));</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarBorder</span> <span class="title">extends</span> <span class="title">ShapeBorder</span> &#123;</span></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> implement dimensions</span></span><br><span class="line">  EdgeInsetsGeometry <span class="built_in">get</span> dimensions =&gt; null;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="function">Path <span class="title">getInnerPath</span><span class="params">(Rect <span class="built_in">rect</span>, &#123;TextDirection textDirection&#125;)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement getInnerPath</span></span><br><span class="line">    <span class="keyword">return</span> null;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="function">Path <span class="title">getOuterPath</span><span class="params">(Rect <span class="built_in">rect</span>, &#123;TextDirection textDirection&#125;)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">rect</span>.right);</span><br><span class="line">    <span class="keyword">return</span> regularPolygonPath(<span class="number">10</span>, <span class="number">50</span>,x: <span class="built_in">rect</span>.<span class="built_in">height</span>/<span class="number">2</span>,y: <span class="built_in">rect</span>.<span class="built_in">width</span>/<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">paint</span><span class="params">(Canvas canvas, Rect <span class="built_in">rect</span>, &#123;TextDirection textDirection&#125;)</span> </span>&#123;</span><br><span class="line">    canvas.translate(<span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line"><span class="comment">//    canvas.drawPath(nStarPath(5, 40, 20), new Paint());</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="function">ShapeBorder <span class="title">scale</span><span class="params">(<span class="keyword">double</span> t)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement scale</span></span><br><span class="line">    <span class="keyword">return</span> null;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="路径封装-稍微优化了一下"><a href="#路径封装-稍微优化了一下" class="headerlink" title="路径封装(稍微优化了一下)"></a>路径封装(稍微优化了一下)</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * n角星路径</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param num 几角星</span></span><br><span class="line"><span class="comment"> * @param R   外接圆半径</span></span><br><span class="line"><span class="comment"> * @param r   内接圆半径</span></span><br><span class="line"><span class="comment"> * @return n角星路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Path nStarPath(<span class="built_in">int</span> num, <span class="built_in">double</span> R, <span class="built_in">double</span> r, &#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125;) &#123;</span><br><span class="line">  Path path = new Path();</span><br><span class="line">  <span class="built_in">double</span> perDeg = <span class="number">360</span> / num; <span class="comment">//尖角的度数</span></span><br><span class="line">  <span class="built_in">double</span> degA = perDeg / <span class="number">2</span> / <span class="number">2</span>;</span><br><span class="line">  <span class="built_in">double</span> degB = <span class="number">360</span> / (num - <span class="number">1</span>) / <span class="number">2</span> - degA / <span class="number">2</span> + degA;</span><br><span class="line"></span><br><span class="line">  path.moveTo(cos(_rad(degA)) * R+x, (-sin(_rad(degA)) * R+y));</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">    path.lineTo(</span><br><span class="line">        cos(_rad(degA + perDeg * i)) * R+x, -sin(_rad(degA + perDeg * i)) * R+y);</span><br><span class="line">    path.lineTo(</span><br><span class="line">        cos(_rad(degB + perDeg * i)) * r+x, -sin(_rad(degB + perDeg * i)) * r+y);</span><br><span class="line">  &#125;</span><br><span class="line">  path.close();</span><br><span class="line">  <span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画正n角星的路径:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param num 角数</span></span><br><span class="line"><span class="comment"> * @param R   外接圆半径</span></span><br><span class="line"><span class="comment"> * @return 画正n角星的路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Path regularStarPath(<span class="built_in">int</span> num, <span class="built_in">double</span> R,&#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125;) &#123;</span><br><span class="line">  <span class="built_in">double</span> degA, degB;</span><br><span class="line">  <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//奇数和偶数角区别对待</span></span><br><span class="line">    degA = <span class="number">360</span> / num / <span class="number">2</span> / <span class="number">2</span>;</span><br><span class="line">    degB = <span class="number">180</span> - degA - <span class="number">360</span> / num / <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    degA = <span class="number">360</span> / num / <span class="number">2</span>;</span><br><span class="line">    degB = <span class="number">180</span> - degA - <span class="number">360</span> / num / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">double</span> r = R * sin(_rad(degA)) / sin(_rad(degB));</span><br><span class="line">  <span class="keyword">return</span> nStarPath(num, R, r,x: x,y:y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画正n边形的路径</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param num 边数</span></span><br><span class="line"><span class="comment"> * @param R   外接圆半径</span></span><br><span class="line"><span class="comment"> * @return 画正n边形的路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Path regularPolygonPath(<span class="built_in">int</span> num, <span class="built_in">double</span> R,&#123;x = <span class="number">0</span>, y = <span class="number">0</span>&#125;) &#123;</span><br><span class="line">  <span class="built_in">double</span> r = R * cos(_rad(<span class="number">360</span> / num / <span class="number">2</span>)); <span class="comment">//!!一点解决</span></span><br><span class="line">  <span class="keyword">return</span> nStarPath(num, R, r,x: x,y:y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 角度制化为弧度制</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param deg 角度</span></span><br><span class="line"><span class="comment"> * @return 弧度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">double</span> _rad(<span class="built_in">double</span> deg) &#123;</span><br><span class="line">  <span class="keyword">return</span> deg * pi / <span class="number">180</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>师傅领进门，修行在个人</code>，我已经把功力传给你了,能否修成正果，就看各自造化。<br><code>事了拂衣去，深藏功与名</code>,Ok,Flutter七日游，完<code>捷</code>散花，自认为没有烂尾，耶!  </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Flutter七日游第七天：2018-12-22-天气：雨-阴&quot;&gt;&lt;a href=&quot;#Flutter七日游第七天：2018-12-22-天气：雨-阴&quot; class=&quot;headerlink&quot; title=&quot;Flutter七日游第七天：2018-12-22 天气：雨-阴&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter七日游第七天：2018-12-22 天气：雨-阴&lt;/code&gt;&lt;/h4&gt;&lt;h4 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;#零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;最后一天了,今天将把前六天的零碎知识整合起来,以及未涉及的零碎知识&lt;br&gt;最后会附上源码，在github,我按天分包稍微整理了一下，顺手Star一下吧&lt;br&gt;顺便提一下：Dart语法的相关测试在&lt;code&gt;test包的base里&lt;/code&gt;(怕你们找不到)&lt;br&gt;与Android代码交互后感觉flutter还是蛮可以的，可惜没条件玩ios,不然岂不是可以通杀&lt;br&gt;(给我七天或许可以把ios跑一圈,以后有钱再说吧)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;留图镇楼：分类效果和查询效果&quot;&gt;&lt;a href=&quot;#留图镇楼：分类效果和查询效果&quot; class=&quot;headerlink&quot; title=&quot;留图镇楼：分类效果和查询效果&quot;&gt;&lt;/a&gt;留图镇楼：&lt;code&gt;分类效果和查询效果&lt;/code&gt;&lt;/h5&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;http://photo.toly1994.com/flutter$seven_day$07$0.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&quot;http://photo.toly1994.com/flutter$seven_day$07$1.png&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第6天--异步-IO+网络访问+json</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/06.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/06.html</id>
    <published>2018-12-21T13:46:01.000Z</published>
    <updated>2020-05-04T08:05:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Flutter七日游第六天：2018-12-21-天气：雨-阴"><a href="#Flutter七日游第六天：2018-12-21-天气：雨-阴" class="headerlink" title="Flutter七日游第六天：2018-12-21 天气：雨-阴"></a><code>Flutter七日游第六天：2018-12-21 天气：雨-阴</code></h4><h4 id="零、前言"><a href="#零、前言" class="headerlink" title="零、前言"></a>零、前言</h4><blockquote><p> 对于问我怎么学习的人，空口白牙说的是鸡汤，我不喜欢喝也不喜欢做。<br>文中根据实际情况，分享一些个人的编程心得,自己参考一下，取长补短</p></blockquote><hr><h4 id="一、单线程模型下的异步操作"><a href="#一、单线程模型下的异步操作" class="headerlink" title="一、单线程模型下的异步操作"></a>一、单线程模型下的异步操作</h4><ul><li>为什么强调是<code>单线程</code>：Dart是单线程模型，单线程模型，单线程模型!!!   <blockquote><p>什么是单线程：<code>就是你是一个人在战斗</code><br>什么是异步: 比如你要烧水(耗时操作)，并不需要傻傻地等着水开才能去做下一件事(扫地)<br>只要开火(方法调用),然后你就可以去扫地(执行异步任务下面的方法)，水烧开鸣叫(回调)，  去冲水(处理异步任务结果)。</p></blockquote></li></ul><a id="more"></a><ul><li>Dart异步编程的方式：Future和Stream<blockquote><p>Future相当于40米大砍刀，Stream相当于一捆40米大砍刀<br>dart提供了关键字<code>async(异步)</code>和<code>await(延迟执行)</code>,相当于普通的便捷的小匕首</p></blockquote></li></ul><hr><h5 id="1-async和await的简单使用"><a href="#1-async和await的简单使用" class="headerlink" title="1.async和await的简单使用"></a>1.<code>async</code>和<code>await</code>的简单使用</h5><blockquote><p>感觉网上一些教程上来就告诉你什么样是错的，然后一步步纠正…最后都没有完整代码总结一下<br>我想最起码应该先给个正确的示范吧…然后再说错误情况</p></blockquote><h6 id="1-1：最简单的文件读取"><a href="#1-1：最简单的文件读取" class="headerlink" title="1.1：最简单的文件读取"></a>1.1：最简单的文件读取</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//根据名称读取文件</span><br><span class="line">readFile(name) &#123;</span><br><span class="line">  //创建文件对象</span><br><span class="line">  var file = File(name);</span><br><span class="line">  <span class="keyword">return</span> file.readAsString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//读取文件成功</span><br><span class="line">readOk() <span class="keyword">async</span>&#123;</span><br><span class="line">  var result = <span class="keyword">await</span> readFile(<span class="string">r"C:\Users\Administrator\Desktop\应龙.txt"</span>);</span><br><span class="line">  print(result);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()  &#123;</span><br><span class="line">  readOk();</span><br><span class="line">  print(<span class="string">"我是第几?"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$0.png" alt=""></p><p><img src="http://photo.toly1994.com/flutter$seven_day$06$1.png" alt=""></p><blockquote><p>函数执行过程中看到了<code>async</code>(烧水)会先去执行下面的操作(扫地),水烧开<code>await</code>放行，<code>print(result);</code>(冲水)</p></blockquote><hr><h6 id="1-2-async和await的分析"><a href="#1-2-async和await的分析" class="headerlink" title="1.2.async和await的分析"></a>1.2.<code>async</code>和<code>await</code>的分析</h6><blockquote><p>也许你就问，不加async或await会怎么样?不同时加又会怎么样?<br><code>不加async或await</code>:就像平常代码一样顺序执行<br><code>加async不加await</code>：然并卵<br><code>不加async加await</code>：报错  </p></blockquote><hr><h5 id="2-去拿我40米大砍刀：Future"><a href="#2-去拿我40米大砍刀：Future" class="headerlink" title="2.去拿我40米大砍刀：Future"></a>2.去拿我40米大砍刀：<code>Future</code></h5><blockquote><p>可以看出：<code>file.readAsString()</code>返回的是:<code>Future&lt;String&gt;</code>, </p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$2.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  var file = File(<span class="string">r"C:\Users\Administrator\Desktop\应龙.txt"</span>);</span><br><span class="line">  Future&lt;String&gt; re = file.readAsString();</span><br><span class="line">  re.then((result) &#123;</span><br><span class="line">    print(result);</span><br><span class="line">  &#125;);</span><br><span class="line">  print(<span class="string">"我是第几?"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样操作也能达到异步的效果，具体就不深入说了<br>有时间打算写一篇:基于<code>Java</code>,<code>Python</code>,<code>JavaScript(ES6+)</code>,<code>Dart</code>,<code>node</code>(都是我曾涉及过的)<br>综合讨论一下<code>单线程，多线程，同步，异步</code>,毕竟这几个词让我挺烦心</p></blockquote><hr><h4 id="二、Dart中的IO操作"><a href="#二、Dart中的IO操作" class="headerlink" title="二、Dart中的IO操作"></a>二、Dart中的IO操作</h4><h5 id="1-文件操作的API测试构造函数"><a href="#1-文件操作的API测试构造函数" class="headerlink" title="1.文件操作的API测试构造函数"></a>1.文件操作的API测试<code>构造函数</code></h5><p><img src="http://photo.toly1994.com/flutter$seven_day$06$3.png" alt=""></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="constructor">File(文件路径)</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>from<span class="constructor">Uri(Uri资源路径标识符)</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>from<span class="constructor">RawPath(Uint8List <span class="params">rawPath</span>)</span></span><br></pre></td></tr></table></figure><hr><h5 id="番外-：如何去认识一个类：Uri为例"><a href="#番外-：如何去认识一个类：Uri为例" class="headerlink" title="[番外]：如何去认识一个类：Uri为例"></a>[番外]：如何去认识一个类：<code>Uri为例</code></h5><blockquote><p>也许看到<code>File.fromUri(Uri uri)</code>你会说Uri我不会，然后就不管了,如果有空就看两眼呗，又不会吃亏<br>我的经验是先看它的构造方法，然后再看字段，再总览一下方法名(Ctr+F12)<br>如果你对这个类一无所知，还是先看粗略瞄一下文档注释，至少知道干嘛的<br>一般都会有一句简洁的话介绍它(英文不会，词典查一下,读原文档：这道坎早晚要过的)<br>Android中对Uri有一定的认识，知道它是一个资源定位的标志,就像门牌号吧。</p></blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[注释第一句]------------</span><br><span class="line">A parsed URI, such as a URL.</span><br><span class="line">url我们都知道：http://192.168.43.60:8089/file/springboot/data.json</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line">它是由一下部分构成的：</span><br><span class="line">http(协议名)://<span class="code">+ 192.168.43.60(域名) +</span> :8089(端口) + file/springboot/data.json(资源地址)</span><br><span class="line"></span><br><span class="line">比如我是资源，你要找我：</span><br><span class="line">中国://安徽：合肥/瑶海区/XXX路/XXX小区/张风捷特烈</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">----&gt;[Uri核心属性]------------</span><br><span class="line">factory Uri(</span><br><span class="line"><span class="code">      &#123;String scheme,</span></span><br><span class="line"><span class="code">      String userInfo,</span></span><br><span class="line"><span class="code">      String host,</span></span><br><span class="line"><span class="code">      int port,</span></span><br><span class="line"><span class="code">      String path,</span></span><br><span class="line"><span class="code">      Iterable&lt;String&gt; pathSegments,</span></span><br><span class="line"><span class="code">      String query,</span></span><br><span class="line"><span class="code">      Map&lt;String, dynamic /*String|Iterable&lt;String&gt;*/ &gt; queryParameters,</span></span><br><span class="line"><span class="code">      String fragment&#125;)</span></span><br></pre></td></tr></table></figure><h6 id="不知道的东西去试试呗-反正跑一下又不要钱"><a href="#不知道的东西去试试呗-反正跑一下又不要钱" class="headerlink" title="不知道的东西去试试呗,反正跑一下又不要钱"></a>不知道的东西去试试呗,反正跑一下又不要钱</h6><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> base = <span class="built_in">Uri</span>.base;</span><br><span class="line"><span class="built_in">print</span>(base);<span class="comment">//打印了跟路径--file:///I:/Java/Android/FlutterUnit/toly/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----&gt;[.parse方法测试]</span><br><span class="line"><span class="keyword">static</span> <span class="built_in">Uri</span> parse(<span class="built_in">String</span> uri, [<span class="built_in">int</span> start = <span class="number">0</span>, <span class="built_in">int</span> end])</span><br><span class="line"><span class="comment">//既然Uri.parse返回一个Uri对象，那么它应该有Uri的相应属性</span></span><br><span class="line"> <span class="keyword">var</span> parse = <span class="built_in">Uri</span>.parse(<span class="string">"http://192.168.43.60:8089/file/springboot/data.json"</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"host=<span class="subst">$&#123;parse.host&#125;</span>"</span>);<span class="comment">//192.168.43.60</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"port=<span class="subst">$&#123;parse.port&#125;</span>"</span>);<span class="comment">//8089</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"path=<span class="subst">$&#123;parse.path&#125;</span>"</span>);<span class="comment">//file/springboot/data.json</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"query=<span class="subst">$&#123;parse.query&#125;</span>"</span>);<span class="comment">//</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"fragment=<span class="subst">$&#123;parse.fragment&#125;</span>"</span>);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">-----&gt;[.http方法测试]</span><br><span class="line"><span class="built_in">Uri</span>.http(<span class="built_in">String</span> authority, <span class="built_in">String</span> unencodedPath,[<span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; queryParameters]) </span><br><span class="line">-----&gt;[.http方法测试,它的注释都写成这样了，你还不会用吗?]-------</span><br><span class="line"><span class="comment">//Creates a new `http` URI from authority, path and query</span></span><br><span class="line"><span class="comment">//http://example.org/path?q=dart.</span></span><br><span class="line"><span class="comment">//new Uri.http("example.org", "/path", &#123; "q" : "dart" &#125;);</span></span><br></pre></td></tr></table></figure><h6 id="如果用File开一个网络的Uri会怎么样："><a href="#如果用File开一个网络的Uri会怎么样：" class="headerlink" title="如果用File开一个网络的Uri会怎么样："></a>如果用File开一个网络的Uri会怎么样：</h6><blockquote><p><code>学会分析bug</code>，<code>不要轻易否定</code><br>首先保证网址是正确的</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$4.png" alt=""></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var file = <span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>from<span class="constructor">Uri(<span class="params">new</span> Uri.<span class="params">http</span>(<span class="string">"192.168.43.60:8089"</span>, <span class="string">"/file/springboot/data.json"</span>)</span>);</span><br><span class="line"></span><br><span class="line">Unhandled <span class="keyword">exception</span>:</span><br><span class="line">Unsupported operation: Cannot extract a file path from a http URI</span><br><span class="line">#<span class="number">0</span>      <span class="module-access"><span class="module"><span class="identifier">_Uri</span>.</span></span>toFilePath (dart:core/uri.dart:<span class="number">2617</span>:<span class="number">7</span>)</span><br><span class="line">#<span class="number">1</span>      <span class="keyword">new</span> <span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>fromUri (dart:io/file.dart:<span class="number">265</span>:<span class="number">49</span>)</span><br><span class="line">#<span class="number">2</span>      readFile (file:<span class="comment">///I:/Java/Android/FlutterUnit/toly/test/base/8_io.dart:11:19)</span></span><br></pre></td></tr></table></figure><blockquote><p>也许你到走了，会想(当然我也是这样)：什么鬼，老子看半天，TM不能用，浪费时间!<br>也许你会愤然而去，而我则会去分析错误的原因(这就是面对错误的不同选择)<br>前者可能永远也不知道原因，而后者即使最后无果，路上也会有所收获(打字的现在，我还未去分析)  </p></blockquote><hr><h6 id="所以，一起去看看吧"><a href="#所以，一起去看看吧" class="headerlink" title="所以，一起去看看吧"></a>所以，一起去看看吧</h6><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[bug的链接处：]</span><br><span class="line"> <span class="built_in">String</span> toFilePath(&#123;<span class="built_in">bool</span> windows&#125;) &#123;</span><br><span class="line">    <span class="keyword">if</span> (scheme != <span class="string">""</span> &amp;&amp; scheme != <span class="string">"file"</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedError(</span><br><span class="line">          <span class="string">"Cannot extract a file path from a <span class="subst">$scheme</span> URI"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 原来是scheme的锅------那scheme是什么呢?</span></span><br><span class="line">  <span class="keyword">var</span> uri = <span class="keyword">new</span> <span class="built_in">Uri</span>.http(<span class="string">"192.168.43.60:8089"</span>, <span class="string">"/file/springboot/data.json"</span>);</span><br><span class="line">  <span class="built_in">print</span>(uri.scheme);<span class="comment">//http</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//可见-- new Uri.http的scheme是http,而这里不是file所以报错</span></span><br><span class="line"> 至少你的知识库中多收录了一条信息：File.fromUri()不能访问非file类型的<span class="built_in">Uri</span></span><br><span class="line"> 也知道了scheme大概是什么东西，知识库就是这样一点一点自己累积的</span><br><span class="line"> </span><br><span class="line">----&gt;[这么重要的限制,方法上能不注明吗?]-------</span><br><span class="line">  <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">   * </span>Create </span>a<span class="markdown"> File object from </span>a<span class="markdown"> URI.</span></span></span><br><span class="line"><span class="comment"><span class="markdown">   *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">   * </span>If [uri] cannot reference </span>a<span class="markdown"> file this throws [UnsupportedError].</span></span></span><br><span class="line"><span class="comment"><span class="markdown">   如果uri未涉及 file会报错： UnsupportedError</span></span></span><br><span class="line"><span class="comment"><span class="markdown">   */</span></span></span><br><span class="line">  <span class="keyword">factory</span> File.fromUri(<span class="built_in">Uri</span> uri) =&gt; <span class="keyword">new</span> File(uri.toFilePath());</span><br><span class="line"></span><br><span class="line">好吧，是一开始没注意，到此一个错误就可以画上句号了  </span><br><span class="line"></span><br><span class="line">错误不可怕，可怕的是你不知道为什么而导致以后还会犯，总之踩的坑多了，就会知道坑在那里</span><br><span class="line">也许别人给说你那有坑，第一次小心的过去了，下一次没人提醒你，你可能就掉下去</span><br></pre></td></tr></table></figure><hr><h6 id="file的Uri是什么鬼"><a href="#file的Uri是什么鬼" class="headerlink" title="file的Uri是什么鬼?"></a>file的Uri是什么鬼?</h6><blockquote><p>也许你不知道，文件拖到浏览器里，也是能打开的，你所见的就是feil类型的Uri</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$5.png" alt=""></p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//源码上面还有很多注释自己看....</span></span><br><span class="line">* <span class="comment">// file:///C:/xxx/yyy</span></span><br><span class="line"> * <span class="keyword">new</span> Uri.file(<span class="string">r"C:\xxx\yyy"</span>, windows: <span class="literal">true</span>);</span><br><span class="line"> */</span><br><span class="line">factory Uri.file(String path, &#123;<span class="built_in">bool</span> windows&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">然后你就会用<span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>fromUri了：</span><br><span class="line">var file = <span class="module-access"><span class="module"><span class="identifier">File</span>.</span></span>from<span class="constructor">Uri(Uri.<span class="params">parse</span>(<span class="string">"file:///F:/SpringBootFiles/file/springboot/data.json"</span>)</span>);</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$6.png" alt=""></p><blockquote><p>从一个小的API开始，让自己尽可能去多认识一些事物，并不是说你要把源码都理得很清楚<br>在自己接受范围的150%之内可以去尝试，失败了没有关系，总比看那些驳来驳去的文章有意义  </p></blockquote><blockquote><p>如果你想提高自己(这句话也是自勉)：<br><code>不要让自己总走在平坦的路上，有时登高望远方能窥见美景，也不要一心只走险峰，小心失足。</code><br>今天心情不佳，废话有点多,听得进去的就听，听不进去的就无视，如果要驳我，请在评论区!!</p></blockquote><h6 id="番外结束"><a href="#番外结束" class="headerlink" title="[番外结束]"></a>[番外结束]</h6><hr><h5 id="2-File和Directory的常见Api"><a href="#2-File和Directory的常见Api" class="headerlink" title="2.File和Directory的常见Api"></a>2.File和Directory的常见Api</h5><blockquote><p>Java里文件夹也是File对象，Dart里区分了出来<br>很有意思，File和Directory的Api基本上都是同步，异步成对出现</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$7.png" alt=""></p><hr><h6 id="2-1-递归创建文件夹"><a href="#2-1-递归创建文件夹" class="headerlink" title="2.1:递归创建文件夹"></a>2.1:递归创建文件夹</h6><blockquote><p>默认recursive是false，只能创建下一级</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$8.png" alt=""></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  var dir = Directory(<span class="string">r"C:\Users\Administrator\Desktop\dart\test\all\li"</span>);</span><br><span class="line">  dir.createSync(recursive: true);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="2-2：列出所有的文件"><a href="#2-2：列出所有的文件" class="headerlink" title="2.2：列出所有的文件"></a>2.2：列出所有的文件</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">main() <span class="keyword">async</span> &#123;</span><br><span class="line">  var dir = Directory(<span class="string">r"E:\Material\MyUI"</span>);</span><br><span class="line">  var list = dir.list();//默认非递归及只列出一级</span><br><span class="line">  list.forEach((fs)&#123;</span><br><span class="line">    print(fs.path);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$9.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">main() <span class="keyword">async</span> &#123;</span><br><span class="line">  var dir = Directory(<span class="string">r"E:\Material\MyUI"</span>);</span><br><span class="line">  var list = dir.list(recursive: true);//递归列出所有文件</span><br><span class="line">  list.forEach((fs)&#123;</span><br><span class="line">    print(fs.path);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>目录下所有文件都列出来，就不贴图了</p></blockquote><hr><h6 id="2-3：重命名"><a href="#2-3：重命名" class="headerlink" title="2.3：重命名"></a>2.3：重命名</h6><blockquote><p>看一下就行了</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var dir = Directory(<span class="string">r"C:\Users\Administrator\Desktop\dart\test\all\li"</span>);</span><br><span class="line">dir.rename(<span class="string">r"C:\Users\Administrator\Desktop\dart\test\all\hello"</span>);</span><br></pre></td></tr></table></figure><hr><h5 id="3-File对象的常用操作："><a href="#3-File对象的常用操作：" class="headerlink" title="3.File对象的常用操作："></a>3.File对象的常用操作：</h5><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据名称读取文件</span></span><br><span class="line">readFile(name) async &#123;</span><br><span class="line">  <span class="comment">//创建文件对象</span></span><br><span class="line">  var <span class="keyword">file</span> = File(name);</span><br><span class="line">  try &#123;</span><br><span class="line">    <span class="comment">//判断是否存在</span></span><br><span class="line">    bool <span class="keyword">exists</span> = await <span class="keyword">file</span>.<span class="keyword">exists</span>();</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">exists</span>) &#123;</span><br><span class="line">      <span class="comment">//如果存在</span></span><br><span class="line">      <span class="keyword">print</span>(await <span class="keyword">file</span>.length()); <span class="comment">//文件大小(字节)---137</span></span><br><span class="line">      <span class="keyword">print</span>(await <span class="keyword">file</span>.lastModified()); <span class="comment">//最后修改时间---2018-12-21 13:49:35.000</span></span><br><span class="line">      <span class="keyword">print</span>(<span class="keyword">file</span>.<span class="keyword">parent</span>.path); <span class="comment">//获取父文件夹的路径---C:\Users\Administrator\Desktop\dart</span></span><br><span class="line">      <span class="keyword">return</span> await <span class="keyword">file</span>.readAsString(); <span class="comment">//读取文件并返回</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      await <span class="keyword">file</span>.create(recursive: true); <span class="comment">//不存在则创建文件</span></span><br><span class="line">      <span class="keyword">return</span> <span class="string">"未发现文件,已为您创建!Dart机器人:2333"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="comment">//异常处理</span></span><br><span class="line">    <span class="keyword">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>另外还有几种不同的打开方式，基本上Java都包含了，看名字也知道是什么</p></blockquote><hr><h5 id="4-文件的写入："><a href="#4-文件的写入：" class="headerlink" title="4.文件的写入："></a>4.文件的写入：</h5><blockquote><p>和java一样，默认全换：想要追加：参数加<code>mode: FileMode.append</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">main() <span class="keyword">async</span> &#123;</span><br><span class="line">  wirte(<span class="string">r"C:\Users\Administrator\Desktop\dart\应龙.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">wirte(name) <span class="keyword">async</span>&#123;</span><br><span class="line">  var file = File(name);</span><br><span class="line">  file.writeAsString(<span class="string">"海的彼岸有我未曾见证的风采"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$10.png" alt=""></p><hr><h4 id="三、关于移动端的文件读取问题"><a href="#三、关于移动端的文件读取问题" class="headerlink" title="三、关于移动端的文件读取问题"></a>三、关于移动端的文件读取问题</h4><h5 id="1-路径问题"><a href="#1-路径问题" class="headerlink" title="1.路径问题"></a>1.路径问题</h5><blockquote><p><code>path_provider: ^0.4.1</code>:提供了三个路径，勉强用用吧</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">localPath() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'临时目录: '</span> + (<span class="keyword">await</span> getTemporaryDirectory()).path);</span><br><span class="line">    <span class="comment">//----/data/user/0/com.toly1994.toly/cache</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'文档目录: '</span> + (<span class="keyword">await</span> getApplicationDocumentsDirectory()).path);</span><br><span class="line">    <span class="comment">//----/data/user/0/com.toly1994.toly/app_flutter</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'sd卡目录: '</span> + (<span class="keyword">await</span> getExternalStorageDirectory()).path);</span><br><span class="line">    <span class="comment">//----/storage/emulated/0</span></span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">print</span>(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-动态权限申请问题"><a href="#2-动态权限申请问题" class="headerlink" title="2.动态权限申请问题"></a>2.动态权限申请问题</h5><blockquote><p><code>simple_permissions: ^0.1.9</code>:提供了动态权限申请</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">readFormSD() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> perm =</span><br><span class="line">        SimplePermissions.requestPermission(Permission.ReadExternalStorage);</span><br><span class="line">    <span class="keyword">var</span> sdPath = getExternalStorageDirectory();</span><br><span class="line">    sdPath.then((file) &#123;</span><br><span class="line">      perm.then((v) <span class="keyword">async</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> res = <span class="keyword">await</span> readFile(file.path + <span class="string">"/应龙.txt"</span>);</span><br><span class="line">        <span class="built_in">print</span>(res);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">print</span>(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$11.png" alt=""></p><blockquote><p>好了，这样知识就对接完毕</p></blockquote><hr><h5 id="3-小测试：列出sd卡的文件"><a href="#3-小测试：列出sd卡的文件" class="headerlink" title="3.小测试：列出sd卡的文件"></a>3.小测试：列出sd卡的文件</h5><blockquote><p>比较基础，就是读取文件夹下的内容，设置给ListView的Item</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$06$12.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:path_provider/path_provider.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:simple_permissions/simple_permissions.dart';</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListFilePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _ListFilePageState createState() =&gt; _ListFilePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_ListFilePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;ListFilePage&gt;</span></span></span><br><span class="line"><span class="class">    <span class="keyword">with</span> <span class="title">SingleTickerProviderStateMixin</span> </span>&#123;</span><br><span class="line">  <span class="type">List</span>&lt;<span class="type">String</span>&gt; _files = [];</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    localPath();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="comment">//生成listView</span></span><br><span class="line">    <span class="keyword">var</span> listview = <span class="type">ListView</span>.builder(</span><br><span class="line">      itemCount: _files.length,</span><br><span class="line">      itemBuilder: (<span class="type">BuildContext</span> context, int index) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Column</span>(</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">Container</span>(</span><br><span class="line">                color: <span class="type">Colors</span>.white,</span><br><span class="line">                padding: <span class="type">EdgeInsets</span>.all(<span class="number">15</span>),</span><br><span class="line">                child: renderItem(index))</span><br><span class="line">          ],</span><br><span class="line">        );</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: listview,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加所有SD卡文件名称</span></span><br><span class="line">  localPath() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> perm =</span><br><span class="line">          <span class="type">SimplePermissions</span>.requestPermission(<span class="type">Permission</span>.<span class="type">ReadExternalStorage</span>);</span><br><span class="line">      <span class="keyword">var</span> sdPath = getExternalStorageDirectory();</span><br><span class="line">      sdPath.then((file) &#123;</span><br><span class="line">        perm.then((v) &#123;</span><br><span class="line">          file.list().forEach((i) &#123;</span><br><span class="line">            _files.add(i.path);</span><br><span class="line">          &#125;);</span><br><span class="line">          setState(() &#123;&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      print(err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//渲染单条目</span></span><br><span class="line">  renderItem(index) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Row</span>(</span><br><span class="line">      children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">        <span class="type">Icon</span>(</span><br><span class="line">          <span class="type">Icons</span>.extension,</span><br><span class="line">          color: <span class="type">Colors</span>.blue,</span><br><span class="line">        ),</span><br><span class="line">        <span class="type">Expanded</span>(</span><br><span class="line">            child: <span class="type">Padding</span>(</span><br><span class="line">          padding: <span class="type">EdgeInsets</span>.only(left: <span class="number">20</span>),</span><br><span class="line">          child: <span class="type">Text</span>(</span><br><span class="line">            _files[index],</span><br><span class="line">            style: <span class="type">TextStyle</span>(fontSize: <span class="number">18</span>),</span><br><span class="line">          ),</span><br><span class="line">        )),</span><br><span class="line">        <span class="type">Icon</span>(<span class="type">Icons</span>.arrow_forward),</span><br><span class="line">        <span class="type">Divider</span>(height: <span class="number">1</span>)</span><br><span class="line">      ],</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="三、Dart中的网络请求操作："><a href="#三、Dart中的网络请求操作：" class="headerlink" title="三、Dart中的网络请求操作："></a>三、Dart中的网络请求操作：</h4><h6 id="0-添加依赖：在pubspec-yaml的dependencies下"><a href="#0-添加依赖：在pubspec-yaml的dependencies下" class="headerlink" title="0.添加依赖：在pubspec.yaml的dependencies下"></a>0.添加依赖：<code>在pubspec.yaml的dependencies下</code></h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http: ^<span class="number">0.11</span><span class="number">.3</span>+<span class="number">17</span></span><br></pre></td></tr></table></figure><blockquote><p>我的服务器上提供了一些网络请求的Api,如果你想自己搭建服务器接口<a href="https://juejin.im/post/5c0f49606fb9a049be5d54d5" target="_blank" rel="noopener">，请看这篇</a><br>来回顾一下接口的api:</p></blockquote><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查询接口：GET请求--------------------------------------------</span><br><span class="line">----查询所有：</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span></span><br><span class="line">----查询偏移<span class="number">12</span>条，查询<span class="number">12</span>条(即<span class="number">12</span>条为一页的第<span class="number">2</span>页)：</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/12/</span><span class="number">12</span></span><br><span class="line">----按区域查询(A为Android数据，SB为SpringBoot数据，Re为React数据)</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/area/</span>A</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/area/</span>A/<span class="number">12</span>/<span class="number">12</span></span><br><span class="line">----按部分名称查询</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/name/</span>材料</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/name/</span>材料/<span class="number">2</span>/<span class="number">2</span></span><br><span class="line">----按类型名称查询(类型定义表见第一篇)</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/name/</span>ABCS</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/name/</span>ABCS/<span class="number">2</span>/<span class="number">2</span></span><br><span class="line">----按id名称查</span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/12</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">添改删接口---------------------------------------------------------------</span></span><br><span class="line"><span class="regexp">添-POST请求：http:/</span><span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span></span><br><span class="line">更新-PUT请求：<span class="symbol">http:</span>/<span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/1</span></span><br><span class="line"><span class="regexp">删-DELETE请求：http:/</span><span class="regexp">/www.toly1994.com:8089/api</span><span class="regexp">/android/note</span><span class="regexp">/1</span></span><br></pre></td></tr></table></figure><hr><h5 id="1-get请求"><a href="#1-get请求" class="headerlink" title="1.get请求"></a>1.get请求</h5><blockquote><p>注：<code>client</code>你随便取什么名字都行，客户端访问服务端，所以我用client  </p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import <span class="string">'package:http/http.dart'</span> as client;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  getData((data) &#123;</span><br><span class="line">    <span class="builtin-name">print</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getData(cbk) async &#123;</span><br><span class="line">  var api = <span class="string">'http://www.toly1994.com:8089/api/android/note/100'</span>;</span><br><span class="line">  try &#123;</span><br><span class="line">    final response = await client.<span class="builtin-name">get</span>(api);</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == 200) &#123;</span><br><span class="line">      cbk(response.body);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (e) &#123;</span><br><span class="line">    <span class="builtin-name">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$13.png" alt=""></p><blockquote><p>如果你觉得回调有点low,也完全可以用Future(用什么不是重点，怎么简洁怎么来)</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  getData().then((data)&#123;</span><br><span class="line">    <span class="built_in">print</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Future&lt;<span class="built_in">String</span>&gt; getData() <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> response = <span class="keyword">await</span> client.<span class="keyword">get</span>(<span class="string">'http://www.toly1994.com:8089/api/android/note/100'</span>);</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> response.body;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-post请求-插入数据"><a href="#2-post请求-插入数据" class="headerlink" title="2.post请求:插入数据"></a>2.post请求:插入数据</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  add((data) &#123;</span><br><span class="line">    <span class="built_in">print</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add(cbk) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> api = <span class="string">'http://www.toly1994.com:8089/api/android/note'</span>;</span><br><span class="line">  <span class="keyword">var</span> item = &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"C"</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"插入测试"</span>,</span><br><span class="line">    <span class="string">"localPath"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"jianshuUrl"</span>: <span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,</span><br><span class="line">    <span class="string">"juejinUrl"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"imgUrl"</span>:</span><br><span class="line">        <span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,</span><br><span class="line">    <span class="string">"createTime"</span>: <span class="string">"2018-09-06"</span>,</span><br><span class="line">    <span class="string">"info"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"area"</span>: <span class="string">"A"</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> response = <span class="keyword">await</span> client.post(api, body: item);</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      cbk(response.body);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$14.png" alt=""></p><hr><h5 id="3-put请求-更新数据"><a href="#3-put请求-更新数据" class="headerlink" title="3.put请求:更新数据"></a>3.put请求:更新数据</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">set</span>((data) &#123;</span><br><span class="line">    <span class="built_in">print</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(cbk) <span class="keyword">async</span> &#123;</span><br><span class="line">  <span class="keyword">var</span> api = <span class="string">'http://www.toly1994.com:8089/api/android/note/199'</span>;</span><br><span class="line">  <span class="keyword">var</span> item = &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"C"</span>,</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"修改测试"</span>,</span><br><span class="line">    <span class="string">"localPath"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"jianshuUrl"</span>: <span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,</span><br><span class="line">    <span class="string">"juejinUrl"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"imgUrl"</span>:</span><br><span class="line">    <span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,</span><br><span class="line">    <span class="string">"createTime"</span>: <span class="string">"2018-09-06"</span>,</span><br><span class="line">    <span class="string">"info"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="string">"area"</span>: <span class="string">"A"</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> response = <span class="keyword">await</span> client.put(api, body: item);</span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      cbk(response.body);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">    <span class="built_in">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$15.png" alt=""></p><hr><h5 id="4-delete请求：删除操作"><a href="#4-delete请求：删除操作" class="headerlink" title="4.delete请求：删除操作"></a>4.delete请求：删除操作</h5><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">main</span>() &#123;</span><br><span class="line">  <span class="keyword">delete</span>((data) &#123;</span><br><span class="line">    <span class="keyword">print</span>(data);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>(cbk) async &#123;</span><br><span class="line">  var api = 'http:<span class="comment">//www.toly1994.com:8089/api/android/note/199';</span></span><br><span class="line"></span><br><span class="line">  try &#123;</span><br><span class="line">    final response = await client.delete(api);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (response.statusCode == <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="built_in">cbk</span>(response.body);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="built_in">catch</span> (e) &#123;</span><br><span class="line">    <span class="keyword">print</span>(e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$06$16.png" alt=""></p><hr><h4 id="四、关于Json"><a href="#四、关于Json" class="headerlink" title="四、关于Json"></a>四、关于Json</h4><blockquote><p>一般都是解析服务器端传来的json,非后端基本不用生产json</p></blockquote><h5 id="1-将json转化为对象"><a href="#1-将json转化为对象" class="headerlink" title="1.将json转化为对象"></a>1.将json转化为对象</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"绘图相关"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"D5-Android绘图之让图形动起来"</span>,</span><br><span class="line">    <span class="attr">"localPath"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="attr">"jianshuUrl"</span>: <span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,</span><br><span class="line">    <span class="attr">"juejinUrl"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="attr">"imgUrl"</span>: <span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,</span><br><span class="line">    <span class="attr">"createTime"</span>: <span class="string">"2018-09-06"</span>,</span><br><span class="line">    <span class="attr">"info"</span>: <span class="string">"以前在Html利用js控制SVG或canvas进行运动模拟。浏览器自带window.requestAnimationFrame能不断执行渲染在这..."</span>,</span><br><span class="line">    <span class="attr">"area"</span>: <span class="string">"A"</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h6 id="1-1：创建实体类，创建构造方法"><a href="#1-1：创建实体类，创建构造方法" class="headerlink" title="1.1：创建实体类，创建构造方法"></a>1.1：创建实体类，创建构造方法</h6><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class NoteBean &#123;</span><br><span class="line">  int id;</span><br><span class="line">  String type;</span><br><span class="line">  String name;</span><br><span class="line">  String localPath;</span><br><span class="line">  String jianshuUrl;</span><br><span class="line">  String juejinUrl;</span><br><span class="line">  String imgUrl;</span><br><span class="line">  String createTime;</span><br><span class="line">  String info;</span><br><span class="line">  String area;</span><br><span class="line"></span><br><span class="line">  NoteBean.fromJson(Map&lt;String, dynamic&gt; map)</span><br><span class="line">      : id = map[<span class="string">'id'</span>],</span><br><span class="line">        name = map[<span class="string">'name'</span>],</span><br><span class="line">        localPath = map[<span class="string">'localPath'</span>],</span><br><span class="line">        jianshuUrl = map[<span class="string">'jianshuUrl'</span>],</span><br><span class="line">        juejinUrl = map[<span class="string">'juejinUrl'</span>],</span><br><span class="line">        imgUrl = map[<span class="string">'imgUrl'</span>],</span><br><span class="line">        createTime = map[<span class="string">'createTime'</span>],</span><br><span class="line">        <span class="builtin-name">info</span> = map[<span class="string">'info'</span>],</span><br><span class="line">       <span class="built_in"> area </span>= map[<span class="string">'area'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var j =</span><br><span class="line">    '&#123;<span class="string">"id"</span>:<span class="number">100</span>,<span class="string">"type"</span>:<span class="string">"绘图相关"</span>,<span class="string">"name"</span>:<span class="string">"D5-Android绘图之让图形动起来"</span>,<span class="string">"localPath"</span>:<span class="string">"null"</span>,<span class="string">"jianshuUrl"</span>:<span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,<span class="string">"juejinUrl"</span>:<span class="string">"null"</span>,<span class="string">"imgUrl"</span>:<span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,<span class="string">"createTime"</span>:<span class="string">"2018-09-06"</span>,<span class="string">"info"</span>:<span class="string">"以前在Html利用js控制SVG或canvas进行运动模拟。浏览器自带window.requestAnimationFrame能不断执行渲染在这..."</span>,<span class="string">"area"</span>:<span class="string">"A"</span>&#125;';</span><br><span class="line">var noteBean = <span class="module-access"><span class="module"><span class="identifier">NoteBean</span>.</span></span>from<span class="constructor">Json(<span class="params">json</span>.<span class="params">decode</span>(<span class="params">j</span>)</span>);</span><br><span class="line">print(noteBean.name);<span class="comment">//D5-Android绘图之让图形动起来</span></span><br></pre></td></tr></table></figure><hr><h5 id="2-复对的Json转化-也就是Json里套Json"><a href="#2-复对的Json转化-也就是Json里套Json" class="headerlink" title="2.复对的Json转化(也就是Json里套Json)"></a>2.复对的Json转化(也就是Json里套Json)</h5><h6 id="2-1：待处理的Json字符串"><a href="#2-1：待处理的Json字符串" class="headerlink" title="2.1：待处理的Json字符串"></a>2.1：待处理的Json字符串</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"msg"</span>: <span class="string">"操作成功"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: &#123;</span><br><span class="line">    <span class="attr">"id"</span>: <span class="number">100</span>,</span><br><span class="line">    <span class="attr">"type"</span>: <span class="string">"绘图相关"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"D5-Android绘图之让图形动起来"</span>,</span><br><span class="line">    <span class="attr">"localPath"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="attr">"jianshuUrl"</span>: <span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,</span><br><span class="line">    <span class="attr">"juejinUrl"</span>: <span class="string">"null"</span>,</span><br><span class="line">    <span class="attr">"imgUrl"</span>: <span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,</span><br><span class="line">    <span class="attr">"createTime"</span>: <span class="string">"2018-09-06"</span>,</span><br><span class="line">    <span class="attr">"info"</span>: <span class="string">"以前在Html利用js控制SVG或canvas进行运动模拟。浏览器自带window.requestAnimationFrame能不断执行渲染在这..."</span>,</span><br><span class="line">    <span class="attr">"area"</span>: <span class="string">"A"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="2-2-增加实体类ResultBean"><a href="#2-2-增加实体类ResultBean" class="headerlink" title="2.2:增加实体类ResultBean"></a>2.2:增加实体类<code>ResultBean</code></h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> ResultBean &#123;</span><br><span class="line">  String msg;</span><br><span class="line">  <span class="built_in">int</span> code;</span><br><span class="line">  NoteBean data;</span><br><span class="line"></span><br><span class="line">  <span class="module-access"><span class="module"><span class="identifier">ResultBean</span>.</span></span>from<span class="constructor">Json(Map&lt;String, <span class="params">dynamic</span>&gt; <span class="params">map</span>)</span></span><br><span class="line">      : msg = map<span class="literal">['<span class="identifier">msg</span>']</span>,</span><br><span class="line">        code = map<span class="literal">['<span class="identifier">code</span>']</span>,</span><br><span class="line">        data = <span class="module-access"><span class="module"><span class="identifier">NoteBean</span>.</span></span>from<span class="constructor">Json(<span class="params">map</span>['<span class="params">data</span>'])</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="2-3-使用："><a href="#2-3-使用：" class="headerlink" title="2.3:使用："></a>2.3:使用：</h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var j =</span><br><span class="line">    '&#123;<span class="string">"code"</span>:<span class="number">200</span>,<span class="string">"msg"</span>:<span class="string">"操作成功"</span>,<span class="string">"data"</span>:&#123;<span class="string">"id"</span>:<span class="number">100</span>,<span class="string">"type"</span>:<span class="string">"绘图相关"</span>,<span class="string">"name"</span>:<span class="string">"D5-Android绘图之让图形动起来"</span>,<span class="string">"localPath"</span>:<span class="string">"null"</span>,<span class="string">"jianshuUrl"</span>:<span class="string">"https://www.jianshu.com/p/12f8ab32591a"</span>,<span class="string">"juejinUrl"</span>:<span class="string">"null"</span>,<span class="string">"imgUrl"</span>:<span class="string">"http://toly1994.com:8089/imgs/android/c3af376135a7abe0655c908195b271db.png"</span>,<span class="string">"createTime"</span>:<span class="string">"2018-09-06"</span>,<span class="string">"info"</span>:<span class="string">"以前在Html利用js控制SVG或canvas进行运动模拟。浏览器自带window.requestAnimationFrame能不断执行渲染在这..."</span>,<span class="string">"area"</span>:<span class="string">"A"</span>&#125;&#125;';</span><br><span class="line"></span><br><span class="line">var result = <span class="module-access"><span class="module"><span class="identifier">ResultBean</span>.</span></span>from<span class="constructor">Json(<span class="params">json</span>.<span class="params">decode</span>(<span class="params">j</span>)</span>);</span><br><span class="line">print(result.data.name);<span class="comment">//D5-Android绘图之让图形动起来</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-关于Json的内嵌数组"><a href="#3-关于Json的内嵌数组" class="headerlink" title="3.关于Json的内嵌数组"></a>3.关于Json的内嵌数组</h5><blockquote><p>这里data是一个json的数组，这样访问的服务端接口的数据处理就搞定了</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"code"</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">"msg"</span>: <span class="string">"操作成功"</span>,</span><br><span class="line">  <span class="attr">"data"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">198</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"绘图相关"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"localPath"</span>: <span class="string">"---"</span>,</span><br><span class="line">      <span class="attr">"jianshuUrl"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"juejinUrl"</span>: <span class="string">"---"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://toly1994.com:8089/imgs/android/8a11d27d58f4c1fa4488cf39fdf68e76.png"</span>,</span><br><span class="line">      <span class="attr">"createTime"</span>: <span class="string">"2021-02-18"</span>,</span><br><span class="line">      <span class="attr">"info"</span>: <span class="string">"hh"</span>,</span><br><span class="line">      <span class="attr">"area"</span>: <span class="string">"A"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"id"</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"绘图相关"</span>,</span><br><span class="line">      <span class="attr">"name"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"localPath"</span>: <span class="string">"---"</span>,</span><br><span class="line">      <span class="attr">"jianshuUrl"</span>: <span class="string">""</span>,</span><br><span class="line">      <span class="attr">"juejinUrl"</span>: <span class="string">"---"</span>,</span><br><span class="line">      <span class="attr">"imgUrl"</span>: <span class="string">"http://toly1994.com:8089/imgs/android/8a11d27d58f4c1fa4488cf39fdf68e76.png"</span>,</span><br><span class="line">      <span class="attr">"createTime"</span>: <span class="string">"2018-12-21"</span>,</span><br><span class="line">      <span class="attr">"info"</span>: <span class="string">"hh"</span>,</span><br><span class="line">      <span class="attr">"area"</span>: <span class="string">"A"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">class ResultBean &#123;</span><br><span class="line">  String msg;</span><br><span class="line">  int code;</span><br><span class="line">  var data;</span><br><span class="line"></span><br><span class="line">  ResultBean.fromJson(Map&lt;String, dynamic&gt; map)</span><br><span class="line">      : msg = map[<span class="string">'msg'</span>],</span><br><span class="line">        code = map[<span class="string">'code'</span>],</span><br><span class="line">        data = map[<span class="string">'data'</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class NoteBean &#123;</span><br><span class="line">  int id;</span><br><span class="line">  String type;</span><br><span class="line">  String name;</span><br><span class="line">  String localPath;</span><br><span class="line">  String jianshuUrl;</span><br><span class="line">  String juejinUrl;</span><br><span class="line">  String imgUrl;</span><br><span class="line">  String createTime;</span><br><span class="line">  String info;</span><br><span class="line">  String area;</span><br><span class="line"></span><br><span class="line">  NoteBean.fromJson(Map&lt;String, dynamic&gt; map)</span><br><span class="line">      : id = map[<span class="string">'id'</span>],</span><br><span class="line">        name = map[<span class="string">'name'</span>],</span><br><span class="line">        localPath = map[<span class="string">'localPath'</span>],</span><br><span class="line">        jianshuUrl = map[<span class="string">'jianshuUrl'</span>],</span><br><span class="line">        juejinUrl = map[<span class="string">'juejinUrl'</span>],</span><br><span class="line">        imgUrl = map[<span class="string">'imgUrl'</span>],</span><br><span class="line">        createTime = map[<span class="string">'createTime'</span>],</span><br><span class="line">        <span class="builtin-name">info</span> = map[<span class="string">'info'</span>],</span><br><span class="line">       <span class="built_in"> area </span>= map[<span class="string">'area'</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> j ='&#123;<span class="string">"code"</span>:200,<span class="string">"msg"</span>:<span class="string">"操作成功"</span>,<span class="string">"data"</span>:[&#123;<span class="string">"id"</span>:198,<span class="string">"type"</span>:<span class="string">"绘图相关"</span>,<span class="string">"name"</span>:<span class="string">""</span>,<span class="string">"localPath"</span>:<span class="string">"---"</span>,<span class="string">"jianshuUrl"</span>:<span class="string">""</span>,<span class="string">"juejinUrl"</span>:<span class="string">"---"</span>,<span class="string">"imgUrl"</span>:<span class="string">"http://toly1994.com:8089/imgs/android/8a11d27d58f4c1fa4488cf39fdf68e76.png"</span>,<span class="string">"createTime"</span>:<span class="string">"2021-02-18"</span>,<span class="string">"info"</span>:<span class="string">"hh"</span>,<span class="string">"area"</span>:<span class="string">"A"</span>&#125;,&#123;<span class="string">"id"</span>:200,<span class="string">"type"</span>:<span class="string">"绘图相关"</span>,<span class="string">"name"</span>:<span class="string">""</span>,<span class="string">"localPath"</span>:<span class="string">"---"</span>,<span class="string">"jianshuUrl"</span>:<span class="string">""</span>,<span class="string">"juejinUrl"</span>:<span class="string">"---"</span>,<span class="string">"imgUrl"</span>:<span class="string">"http://toly1994.com:8089/imgs/android/8a11d27d58f4c1fa4488cf39fdf68e76.png"</span>,<span class="string">"createTime"</span>:<span class="string">"2018-12-21"</span>,<span class="string">"info"</span>:<span class="string">"hh"</span>,<span class="string">"area"</span>:<span class="string">"A"</span>&#125;]&#125;';</span><br><span class="line"><span class="keyword">var</span> result = ResultBean.fromJson(json.<span class="keyword">decode</span>(j));</span><br><span class="line"><span class="keyword">print</span>(NoteBean.fromJson(result.data[1]).imgUrl);<span class="comment">//http://toly1994.com:8089/imgs/android/8a11d27d58f4c1fa4488cf39fdf68e76.png</span></span><br></pre></td></tr></table></figure><blockquote><p>好了，今天就到这里,明天最后一天，敬请期待</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Flutter七日游第六天：2018-12-21-天气：雨-阴&quot;&gt;&lt;a href=&quot;#Flutter七日游第六天：2018-12-21-天气：雨-阴&quot; class=&quot;headerlink&quot; title=&quot;Flutter七日游第六天：2018-12-21 天气：雨-阴&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter七日游第六天：2018-12-21 天气：雨-阴&lt;/code&gt;&lt;/h4&gt;&lt;h4 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;#零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt; 对于问我怎么学习的人，空口白牙说的是鸡汤，我不喜欢喝也不喜欢做。&lt;br&gt;文中根据实际情况，分享一些个人的编程心得,自己参考一下，取长补短&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h4 id=&quot;一、单线程模型下的异步操作&quot;&gt;&lt;a href=&quot;#一、单线程模型下的异步操作&quot; class=&quot;headerlink&quot; title=&quot;一、单线程模型下的异步操作&quot;&gt;&lt;/a&gt;一、单线程模型下的异步操作&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;为什么强调是&lt;code&gt;单线程&lt;/code&gt;：Dart是单线程模型，单线程模型，单线程模型!!!   &lt;blockquote&gt;
&lt;p&gt;什么是单线程：&lt;code&gt;就是你是一个人在战斗&lt;/code&gt;&lt;br&gt;什么是异步: 比如你要烧水(耗时操作)，并不需要傻傻地等着水开才能去做下一件事(扫地)&lt;br&gt;只要开火(方法调用),然后你就可以去扫地(执行异步任务下面的方法)，水烧开鸣叫(回调)，  去冲水(处理异步任务结果)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第5天--布局实例+操作交互</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/05.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/05.html</id>
    <published>2018-12-20T13:46:01.000Z</published>
    <updated>2020-05-04T07:38:32.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="今天调料十足，保证新鲜美味-2018-12-20"><a href="#今天调料十足，保证新鲜美味-2018-12-20" class="headerlink" title="今天调料十足，保证新鲜美味----2018-12-20"></a><code>今天调料十足，保证新鲜美味----2018-12-20</code></h4><h5 id="1：写在前面："><a href="#1：写在前面：" class="headerlink" title="1：写在前面："></a>1：写在前面：</h5><blockquote><p>每个布局的实现方案都有很多，我只是选择自己认为较好的布局方案<br>对于非常复杂的布局，建议先<code>打草稿</code>，再进行<code>颜色块模拟</code>，最后再<code>写控件</code><br>有留白的地方Expanded+flex(<code>以下我所说的flex就是Row+Column的总成</code>)会有很好的适应性</p></blockquote><h5 id="2-选几张图镇楼："><a href="#2-选几张图镇楼：" class="headerlink" title="2.选几张图镇楼："></a>2.选几张图镇楼：</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$0.png" alt=""></p><a id="more"></a><table><thead><tr><th>–</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$05$1.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$05$2.png" alt=""></td></tr></tbody></table><hr><h4 id="一、入门级布局1："><a href="#一、入门级布局1：" class="headerlink" title="一、入门级布局1："></a>一、入门级布局1：</h4><h5 id="1-出题"><a href="#1-出题" class="headerlink" title="1.出题"></a>1.出题</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$3.png" alt=""></p><hr><h5 id="2-思路"><a href="#2-思路" class="headerlink" title="2.思路"></a>2.思路</h5><blockquote><p>很容易看出，三个块水平排列，两端靠边，Row逃不掉了，中间很容易想到Expanded<br>这样中间的部分自动尺寸，而且留白很多，基本上不会造成溢出，对不同屏幕适应性更好<br>三个部件写完后，用个Container套一下给内边距就行了(边距的多少，就不纠结了,演示而已)</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$4.png" alt=""></p><hr><h5 id="3-解题"><a href="#3-解题" class="headerlink" title="3.解题"></a>3.解题</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$5.png" alt=""></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var rowLine = Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Icon(</span><br><span class="line">      Icons.extension,</span><br><span class="line">      color: Colors.blue,</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">        child: Padding(</span><br><span class="line">      padding: EdgeInsets.only(<span class="name">left</span>: <span class="number">20</span>),</span><br><span class="line">      child: Text(</span><br><span class="line">        <span class="string">"好友微视"</span>,</span><br><span class="line">        style: TextStyle(<span class="name">fontSize</span>: <span class="number">18</span>),</span><br><span class="line">      ),</span><br><span class="line">    )),</span><br><span class="line">    Icon(<span class="name">Icons</span>.arrow_forward)</span><br><span class="line">  ],</span><br><span class="line">)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">var test1 = Container(<span class="name">color</span>: Colors.white, padding: EdgeInsets.all(<span class="number">15</span>), child: rowLine)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h4 id="二、入门级布局2："><a href="#二、入门级布局2：" class="headerlink" title="二、入门级布局2："></a>二、入门级布局2：</h4><h5 id="番外-：小封装1—添加测试背景色"><a href="#番外-：小封装1—添加测试背景色" class="headerlink" title="[番外]：小封装1—添加测试背景色"></a>[番外]：小封装1—添加测试背景色</h5><blockquote><p>实在要吐槽：想加个<code>背景色</code>想加一下麻烦死了…我是在受不了，封装一下方法 </p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">bg(Widget w, <span class="literal">[C<span class="identifier">olor</span> <span class="identifier">color</span>]</span>) &#123;</span><br><span class="line">  return <span class="constructor">Container(<span class="params">color</span>: <span class="params">color</span> ?? <span class="params">randomARGB</span>()</span>, child: w);</span><br><span class="line">&#125;</span><br><span class="line">Color random<span class="constructor">ARGB()</span>&#123;</span><br><span class="line">  Random random = <span class="keyword">new</span> <span class="constructor">Random()</span>;</span><br><span class="line">  <span class="built_in">int</span> r = <span class="number">30</span> + random.next<span class="constructor">Int(200)</span>;</span><br><span class="line">  <span class="built_in">int</span> g = <span class="number">30</span> + random.next<span class="constructor">Int(200)</span>;</span><br><span class="line">  <span class="built_in">int</span> b = <span class="number">30</span> + random.next<span class="constructor">Int(200)</span>;</span><br><span class="line">  <span class="built_in">int</span> a = <span class="number">50</span> + random.next<span class="constructor">Int(200)</span>;</span><br><span class="line">  return <span class="module-access"><span class="module"><span class="identifier">Color</span>.</span></span>from<span class="constructor">ARGB(<span class="params">a</span>, <span class="params">r</span>, <span class="params">g</span>, <span class="params">b</span>)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="1-出题-1"><a href="#1-出题-1" class="headerlink" title="1.出题"></a>1.出题</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$6.png" alt=""></p><hr><h5 id="2-思路-1"><a href="#2-思路-1" class="headerlink" title="2.思路"></a>2.思路</h5><blockquote><p>有了上面的指引，相信下面的应该难不倒你：<br>三个Row，中间用Column，模式基本同上，达到这步应该很简单  </p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$7.png" alt=""></p><blockquote><p>这里暂停一下，为了说明flex布局的轴，对于Column而言，主轴是纵向<br>交错轴横向，默认交错轴是<code>center</code>,所以呈现了上面的效果，我们只需要轻轻地：<br><code>crossAxisAlignment: CrossAxisAlignment.start,</code>就完成雏形了,剩下的小修小补一下</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$8.png" alt=""></p><hr><h5 id="3-解题-1"><a href="#3-解题-1" class="headerlink" title="3.解题"></a>3.解题</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$9.png" alt=""></p><blockquote><p>写文字的style真心烦，抽取一下吧</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正常文字</span></span><br><span class="line">var commonStyle = <span class="constructor">TextStyle(<span class="params">color</span>: Colors.<span class="params">black</span>, <span class="params">fontSize</span>: 18)</span>;</span><br><span class="line"><span class="comment">//灰色较小文字</span></span><br><span class="line">var infoStyle = <span class="constructor">TextStyle(<span class="params">color</span>: Color(0xff999999)</span>, fontSize: <span class="number">13</span>);</span><br></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//左边头像</span></span><br><span class="line">var headImg = Image.asset(</span><br><span class="line">  <span class="string">"images/icon_gql.jpg"</span>, width: <span class="number">45</span>, height: <span class="number">45</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//中间的信息</span></span><br><span class="line">var center2 = Column(</span><br><span class="line"><span class="symbol">  mainAxisAlignment:</span> MainAxisAlignment.center,</span><br><span class="line"><span class="symbol">  crossAxisAlignment:</span> CrossAxisAlignment.start,</span><br><span class="line"><span class="symbol">  children:</span> <span class="params">&lt;Widget&gt;</span>[</span><br><span class="line">    Text( <span class="string">"心如止水"</span>, style: commonStyle,),</span><br><span class="line">    Text(  <span class="string">"《应龙》--张风捷特烈 一游小池两岁月，洗却凡世几闲尘。时逢雷霆风会雨，应乘扶摇化入云。"</span>,</span><br><span class="line"><span class="symbol">      maxLines:</span> <span class="number">1</span>,</span><br><span class="line"><span class="symbol">      overflow:</span> TextOverflow.ellipsis,</span><br><span class="line"><span class="symbol">      style:</span> infoStyle,</span><br><span class="line"><span class="symbol">      textAlign:</span> TextAlign.start,</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//尾部的时间+图标</span></span><br><span class="line">var end2 = Column(</span><br><span class="line"><span class="symbol">  mainAxisAlignment:</span> MainAxisAlignment.center,</span><br><span class="line"><span class="symbol">  children:</span> <span class="params">&lt;Widget&gt;</span>[</span><br><span class="line">    Text(<span class="string">"06:45"</span>,style: infoStyle),</span><br><span class="line">    Icon(Icons.visibility_off,size: <span class="number">20</span>,color: Color(<span class="number">0xff999999</span>),</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//整行的内容</span></span><br><span class="line">var rowLine2 = Row(</span><br><span class="line"><span class="symbol">  children:</span> <span class="params">&lt;Widget&gt;</span>[</span><br><span class="line">    Padding(child: headImg, padding: EdgeInsets.all(<span class="number">5</span>)),</span><br><span class="line">    Expanded(child: Padding(padding: EdgeInsets.all(<span class="number">5</span>), child: center2)),</span><br><span class="line">    end2</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//包裹一下，收工</span></span><br><span class="line">var test2 = Container(</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">70</span>,</span><br><span class="line"><span class="symbol">    color:</span> Colors.white,</span><br><span class="line"><span class="symbol">    padding:</span> EdgeInsets.all(<span class="number">5</span>),</span><br><span class="line"><span class="symbol">    child:</span> rowLine2);</span><br></pre></td></tr></table></figure><hr><h4 id="三、新级级别布局1"><a href="#三、新级级别布局1" class="headerlink" title="三、新级级别布局1"></a>三、新级级别布局1</h4><h5 id="番外-：小封装2"><a href="#番外-：小封装2" class="headerlink" title="[番外]：小封装2"></a>[番外]：小封装2</h5><blockquote><p>好吧，我又要<code>封</code>了：感觉加个padding也是一堆废话，封装一下吧 </p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">加<span class="selector-tag">padding</span>只要函数包一下就好：<span class="selector-tag">--</span>看起来要比以前那一坨好多了</span><br><span class="line"><span class="selector-tag">pd</span>(Text(<span class="string">"创世神"</span>), <span class="attribute">l</span>: <span class="number">5</span>)<span class="comment">//只加左边距</span></span><br><span class="line"><span class="selector-tag">pda</span>(Text(<span class="string">"创世神"</span>),<span class="number">5</span>)<span class="comment">//全加边距</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以前全加加Pading:-----------------</span></span><br><span class="line"><span class="selector-tag">Padding</span>(</span><br><span class="line">  <span class="attribute">child</span>: headImg3,</span><br><span class="line">  <span class="attribute">padding</span>: EdgeInsets.all(<span class="number">5</span>),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">pd(Widget w, &#123;<span class="built_in">double</span> l, <span class="built_in">double</span> t, <span class="built_in">double</span> r, <span class="built_in">double</span> b&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Padding(</span><br><span class="line">    child: w,</span><br><span class="line">    padding: EdgeInsets.fromLTRB(l ?? <span class="number">0</span>, t ?? <span class="number">0</span>, r ?? <span class="number">0</span>, b ?? <span class="number">0</span>),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//全部padding</span></span><br><span class="line">pda(Widget w, <span class="built_in">double</span> a) &#123;</span><br><span class="line">  <span class="keyword">return</span> Padding(</span><br><span class="line">    child: w,</span><br><span class="line">    padding: EdgeInsets.all(a),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//水平、竖直的两个padding</span></span><br><span class="line">pdhv(Widget w, &#123;<span class="built_in">double</span> h, <span class="built_in">double</span> v&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> Padding(</span><br><span class="line">    child: w,</span><br><span class="line">    padding: EdgeInsets.fromLTRB(h ?? <span class="number">0</span>, v ?? <span class="number">0</span>, h ?? <span class="number">0</span>, v ?? <span class="number">0</span>),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="1-出题：-来玩掘金吧"><a href="#1-出题：-来玩掘金吧" class="headerlink" title="1.出题：(来玩掘金吧~)"></a>1.出题：(来玩掘金吧~)</h5><blockquote><p>这是网页掘金的主页栏，是我喜欢的风格，现在flutter上走一波</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$10.png" alt=""></p><hr><h5 id="2-分析"><a href="#2-分析" class="headerlink" title="2.分析"></a>2.分析</h5><blockquote><p>有了前两个的经验，这种样式应该难不倒你,区块划分如下：<br>也许有新手不知道从哪入手，那就画个Container，填个色，这是从0到1质变，然后就是+1的量变了<br>我比较喜欢卡片。所以这个用Card包一下吧，三块一目了然</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$11.png" alt=""></p><hr><h5 id="3-解题-2"><a href="#3-解题-2" class="headerlink" title="3.解题"></a>3.解题</h5><blockquote><p>也许你不知道一个布局有多大，你可以用上面的bg函数包裹一下，如下：</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$12.png" alt=""></p><blockquote><p>背景有助于你的排布，最后当然要把背景去掉</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$13.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//较大文字</span></span><br><span class="line"><span class="string">var</span> <span class="string">bigStyle</span> <span class="string">=</span> <span class="string">TextStyle(color:</span> <span class="string">Colors.black,</span> <span class="attr">fontSize:</span> <span class="number">20</span><span class="string">,</span> <span class="attr">fontWeight:</span> <span class="string">FontWeight.bold);</span></span><br><span class="line"><span class="string">//btn文字</span></span><br><span class="line"><span class="string">var</span> <span class="string">btnStyle</span> <span class="string">=</span> <span class="string">TextStyle(color:</span> <span class="string">Color(0xffffffff),</span> <span class="attr">fontSize:</span> <span class="number">13</span><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">////////////////////////-----------------测试3--------------------------------</span></span><br><span class="line"><span class="string">//左边头像</span></span><br><span class="line"><span class="string">var</span> <span class="string">headImg3</span> <span class="string">=</span> <span class="string">Image.asset("images/icon_90.png",</span> <span class="attr">width:</span> <span class="number">50</span><span class="string">,</span>  <span class="attr">height:</span> <span class="number">50</span><span class="string">,);</span></span><br><span class="line"></span><br><span class="line"><span class="string">//中间的信息</span></span><br><span class="line"><span class="string">var</span> <span class="string">center3</span> <span class="string">=</span> <span class="string">Column(</span></span><br><span class="line">  <span class="attr">mainAxisAlignment:</span> <span class="string">MainAxisAlignment.center,</span></span><br><span class="line">  <span class="attr">crossAxisAlignment:</span> <span class="string">CrossAxisAlignment.start,</span></span><br><span class="line">  <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">    <span class="string">Text("张风捷特烈",style:</span> <span class="string">bigStyle),</span></span><br><span class="line">    <span class="string">Row(children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Icon(Icons.next_week,</span> <span class="attr">size:</span> <span class="number">15</span><span class="string">),</span></span><br><span class="line">        <span class="string">pd(Text("创世神</span> <span class="string">|</span> <span class="string">无"),</span> <span class="attr">l:</span> <span class="number">5</span><span class="string">)</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">),</span></span><br><span class="line">    <span class="string">Row(children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Icon(Icons.keyboard,</span> <span class="attr">size:</span> <span class="number">15</span><span class="string">),</span></span><br><span class="line">        <span class="string">pd(Text("海的彼岸有我未曾见证的风采"),</span> <span class="attr">l:</span> <span class="number">5</span><span class="string">)</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">),</span></span><br><span class="line">  <span class="string">],</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">//尾部的</span></span><br><span class="line"><span class="string">var</span> <span class="string">end3</span> <span class="string">=</span> <span class="string">Column(</span></span><br><span class="line">  <span class="attr">mainAxisAlignment:</span> <span class="string">MainAxisAlignment.spaceBetween,</span></span><br><span class="line">  <span class="attr">crossAxisAlignment:</span> <span class="string">CrossAxisAlignment.end,</span></span><br><span class="line">  <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">    <span class="string">Row(children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Icon(Icons.language,size:</span> <span class="number">15</span><span class="string">,),</span></span><br><span class="line">        <span class="string">Icon(Icons.local_pharmacy,</span> <span class="attr">size:</span> <span class="number">15</span><span class="string">),</span></span><br><span class="line">        <span class="string">Icon(Icons.person_pin_circle,</span> <span class="attr">size:</span> <span class="number">15</span><span class="string">)</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">),</span></span><br><span class="line">    <span class="string">bg(pdhv(</span></span><br><span class="line">        <span class="string">Text("编辑",style:</span> <span class="string">btnStyle,),</span> <span class="attr">h:</span> <span class="number">10</span><span class="string">,</span> <span class="attr">v:</span> <span class="number">3</span><span class="string">),</span> <span class="string">Colors.blueAccent),</span></span><br><span class="line">  <span class="string">],</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">rowLine3</span> <span class="string">=</span> <span class="string">Row(</span></span><br><span class="line">  <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">    <span class="string">pda(headImg3,</span> <span class="number">5</span><span class="string">),</span></span><br><span class="line">    <span class="string">Expanded(child:</span> <span class="string">pda(center3,5)),</span></span><br><span class="line">    <span class="string">pda(end3,</span> <span class="number">10</span><span class="string">),</span></span><br><span class="line">  <span class="string">],</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">test3</span> <span class="string">=</span> <span class="string">Card(</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">Container(</span></span><br><span class="line">        <span class="attr">height:</span> <span class="number">95</span><span class="string">,</span></span><br><span class="line">        <span class="attr">color:</span> <span class="string">Colors.white,</span></span><br><span class="line">        <span class="attr">padding:</span> <span class="string">EdgeInsets.all(5),</span></span><br><span class="line">        <span class="attr">child:</span> <span class="string">rowLine3));</span></span><br></pre></td></tr></table></figure><hr><h4 id="四、新手级别布局-2"><a href="#四、新手级别布局-2" class="headerlink" title="四、新手级别布局(2)"></a>四、新手级别布局(2)</h4><h5 id="1-出题：还拿掘金来玩吧"><a href="#1-出题：还拿掘金来玩吧" class="headerlink" title="1.出题：还拿掘金来玩吧"></a>1.出题：还拿掘金来玩吧</h5><blockquote><p>这个稍微复杂了一丢丢</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$14.png" alt=""></p><hr><h5 id="2-分析：还是先打块："><a href="#2-分析：还是先打块：" class="headerlink" title="2.分析：还是先打块："></a>2.分析：还是先打块：</h5><blockquote><p>分块的方式有很多，你喜欢怎么打就这么打，你可以看出行，也可以看成列<br>外部是个Column，头，身，尾。身是一个Row,文字两行是Column，头，尾都是Row</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$15.png" alt=""></p><hr><h5 id="3-解题-3"><a href="#3-解题-3" class="headerlink" title="3.解题"></a>3.解题</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$05$16.png" alt=""></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">////////////////////////-----------------测试4--------------------------------</span></span><br><span class="line">var line1_4 = Row(</span><br><span class="line"><span class="symbol">  children:</span> &lt;Widget&gt;[</span><br><span class="line">    Image.asset(<span class="string">"images/icon_90.png"</span>, <span class="string">width:</span> <span class="number">20</span>, <span class="string">height:</span> <span class="number">20</span>),</span><br><span class="line">    Expanded( <span class="string">child:</span> pd(Text(<span class="string">"张风捷特烈"</span>), <span class="string">l:</span> <span class="number">5</span>),),</span><br><span class="line">    Text(<span class="string">"Flutter/Dart"</span>, <span class="string">style:</span> infoStyle,)</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">var center_right = Column(</span><br><span class="line"><span class="symbol">  mainAxisSize:</span> MainAxisSize.min,</span><br><span class="line"><span class="symbol">  children:</span> &lt;Widget&gt;[</span><br><span class="line">    Text(<span class="string">"Flutter第4天--基础控件(下)+Flex布局详解"</span>, <span class="string">style:</span> littelStyle,  <span class="string">maxLines:</span> <span class="number">2</span>,),</span><br><span class="line">    pd(Text(</span><br><span class="line">      <span class="string">"1.2：优雅地查看：图片的适应模式--BoxFit1.3：优雅地查看：颜色混合模式--colorBlendMode"</span>,</span><br><span class="line"><span class="symbol">      style:</span> infoStyle, <span class="string">maxLines:</span> <span class="number">2</span>,<span class="string">overflow:</span> TextOverflow.ellipsis),<span class="string">t:</span><span class="number">5</span>),</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//中间的信息</span></span><br><span class="line">var center4 = Row(</span><br><span class="line"><span class="symbol">  children:</span> &lt;Widget&gt;[Expanded(<span class="string">child:</span> pda(center_right, <span class="number">5</span>)),</span><br><span class="line">    Image.asset(<span class="string">"images/wy_300x200.jpg"</span>, <span class="string">width:</span> <span class="number">80</span>,<span class="string">height:</span> <span class="number">80</span>,<span class="string">fit:</span> BoxFit.fitHeight)</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">var end4 = Row(</span><br><span class="line"><span class="symbol">  children:</span> &lt;Widget&gt;[</span><br><span class="line">    Icon(Icons.grade,<span class="string">color:</span> Colors.green,<span class="string">size:</span> <span class="number">20</span>,),</span><br><span class="line">    Text(<span class="string">"1000W"</span>,<span class="string">style:</span> infoStyle,),</span><br><span class="line">    pd(Icon(Icons.tag_faces,<span class="string">color:</span>Colors.lightBlueAccent, <span class="string">size:</span> <span class="number">20</span>),<span class="string">l:</span><span class="number">15</span>,<span class="string">r:</span><span class="number">5</span>),</span><br><span class="line">    Text(<span class="string">"2000W"</span>,<span class="string">style:</span> infoStyle),</span><br><span class="line">  ],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">var item4 = Column(<span class="string">children:</span> &lt;Widget&gt;[line1_4, Expanded(<span class="string">child:</span> center4), end4]);</span><br><span class="line"></span><br><span class="line">var test4 = Card(</span><br><span class="line"><span class="symbol">    child:</span> Container(</span><br><span class="line"><span class="symbol">        height:</span> <span class="number">160</span>,</span><br><span class="line"><span class="symbol">        color:</span> Colors.white,</span><br><span class="line"><span class="symbol">        padding:</span> EdgeInsets.all(<span class="number">10</span>),</span><br><span class="line"><span class="symbol">        child:</span> item4));</span><br></pre></td></tr></table></figure><blockquote><p>经过这四个，可以看出，大块是小块组合的，一点点拼总能拼出来，<br>所以遇到复杂界面不要怕，一点一点分块，最后一点一点拼合，就能搞定<br>几个小例子就这样吧，好好消化一下</p></blockquote><hr><h4 id="五-ListView的测试"><a href="#五-ListView的测试" class="headerlink" title="五:ListView的测试"></a>五:ListView的测试</h4><blockquote><p>条目有了，此时不测试ListView更待何时?<br>当然现在还只是静态的，你可以将需要的字段抽取出来封装成函数<br>然后再动态获取数据填充视图(打算放在最后一天说，这里用静态页面测试)</p></blockquote><hr><h5 id="1-ListView-builder"><a href="#1-ListView-builder" class="headerlink" title="1.ListView.builder"></a>1.ListView.builder</h5><table><thead><tr><th>条目2</th><th>条目4</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$05$17.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$05$18.png" alt=""></td></tr></tbody></table><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条目2</span></span><br><span class="line">var test5 = <span class="module-access"><span class="module"><span class="identifier">ListView</span>.</span></span>builder(</span><br><span class="line">  itemCount: <span class="number">30</span>,</span><br><span class="line">  itemBuilder: (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">    return</span><br><span class="line">      <span class="constructor">Column(<span class="params">children</span>: &lt;Widget&gt;[<span class="params">test2</span>,Divider(<span class="params">height</span>:1)</span>],);</span><br><span class="line">  &#125;,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h5 id="2-ListView-separated"><a href="#2-ListView-separated" class="headerlink" title="2.ListView.separated"></a>2.ListView.separated</h5><blockquote><p>这个多一个separatorBuilder,类型和itemBuilder一毛一样<br>也就是在某些位置，插入东西分割(常用的是分割线)，看下图：<br>我在index=1的条目下面插入了test2条目(左图)，变相的多条目…，<br>当然你可以随意控制怎么玩,比如每隔两个插入一个(右图)，<code>注意：插入的条目不算总数里</code></p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$19.png" alt=""></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在index=1下插入</span></span><br><span class="line">var test6 = ListView.separated(</span><br><span class="line"><span class="symbol">    itemBuilder:</span> (ctx, i) &#123;</span><br><span class="line">      return Column(</span><br><span class="line"><span class="symbol">        children:</span> <span class="params">&lt;Widget&gt;</span>[test4],</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="symbol">    separatorBuilder:</span> (ctx, i) &#123;</span><br><span class="line">      return Column(children: <span class="params">&lt;Widget&gt;</span>[i==<span class="number">1</span>?test2:Container()],</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="symbol">    itemCount:</span> <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//每隔两个插入</span></span><br><span class="line">var test6 = ListView.separated(</span><br><span class="line"><span class="symbol">    itemBuilder:</span> (ctx, i) &#123;</span><br><span class="line">      return Column(</span><br><span class="line"><span class="symbol">        children:</span> <span class="params">&lt;Widget&gt;</span>[test4],</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="symbol">    separatorBuilder:</span> (ctx, i) &#123;</span><br><span class="line">      return Column(</span><br><span class="line"><span class="symbol">        children:</span> <span class="params">&lt;Widget&gt;</span>[(i+<span class="number">1</span> ) % <span class="number">2</span>== <span class="number">0</span> ? test2 : Container()],</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="symbol">    itemCount:</span> <span class="number">40</span>);</span><br></pre></td></tr></table></figure><hr><h4 id="六、操作交互："><a href="#六、操作交互：" class="headerlink" title="六、操作交互："></a>六、操作交互：</h4><blockquote><p>Bit世界的三大要素:数据(m),界面(v)，交互(c或p)，<br>一个项目讲白了，就是围绕这三个转，说谁更重要的都是废话<br><code>没有数据的是空壳标本，没有交互的是植物人，没有界面的那时白日做梦...</code><br>Flutter的交互感觉好奇葩…也许是一切节Widget的思想驱使吧，还是包一下</p></blockquote><h5 id="1-先天交互天赋的控件"><a href="#1-先天交互天赋的控件" class="headerlink" title="1.先天交互天赋的控件"></a>1.先天交互天赋的控件</h5><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Switch</span> <span class="keyword">Slider</span> <span class="keyword">Checkbox</span> TextField SnackBar BottomNavigationBar</span><br><span class="line">OutlineButton FlatButton RaisedButton IconButton FloatingActionButton 等...</span><br></pre></td></tr></table></figure><hr><h5 id="2-没有先天天赋怎么办-—GestureDetector给你光环加持"><a href="#2-没有先天天赋怎么办-—GestureDetector给你光环加持" class="headerlink" title="2.没有先天天赋怎么办?—GestureDetector给你光环加持"></a>2.没有先天天赋怎么办?—<code>GestureDetector</code>给你光环加持</h5><blockquote><p>看一下源码：好吧，挺多的</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$20.png" alt=""></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">GestureDetector(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="keyword">this</span>.child,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onTap,----点击----Function()---</span><br><span class="line">  <span class="keyword">this</span>.onTapDown,----按下：Function(TapDownDetails details)---</span><br><span class="line">  <span class="keyword">this</span>.onTapUp,---- 抬起：Function(TapUpDetails details)----</span><br><span class="line">  <span class="keyword">this</span>.onTapCancel,----取消(onTap无法触发时)：Function()----</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onDoubleTap,----双击----void Function()----</span><br><span class="line">  <span class="keyword">this</span>.onLongPress,----长按----void Function()----</span><br><span class="line">  <span class="keyword">this</span>.onLongPressUp,----长按松开----void Function()----</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onVerticalDragDown,----竖直拖动按下----Function(DragDownDetails details)----</span><br><span class="line">  <span class="keyword">this</span>.onVerticalDragStart,----竖直拖动开始----Function(DragStartDetails details)----</span><br><span class="line">  <span class="keyword">this</span>.onVerticalDragUpdate,----竖直拖动更新----Function(DragUpdateDetails details)----</span><br><span class="line">  <span class="keyword">this</span>.onVerticalDragEnd,----竖直拖动结束----Function(DragEndDetails details)----</span><br><span class="line">  <span class="keyword">this</span>.onVerticalDragCancel,----竖直拖动取消----Function()----</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onHorizontalDragDown,</span><br><span class="line">  <span class="keyword">this</span>.onHorizontalDragStart,</span><br><span class="line">  <span class="keyword">this</span>.onHorizontalDragUpdate,</span><br><span class="line">  <span class="keyword">this</span>.onHorizontalDragEnd,</span><br><span class="line">  <span class="keyword">this</span>.onHorizontalDragCancel,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onPanDown,</span><br><span class="line">  <span class="keyword">this</span>.onPanStart,</span><br><span class="line">  <span class="keyword">this</span>.onPanUpdate,</span><br><span class="line">  <span class="keyword">this</span>.onPanEnd,</span><br><span class="line">  <span class="keyword">this</span>.onPanCancel,</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">this</span>.onScaleStart,</span><br><span class="line">  <span class="keyword">this</span>.onScaleUpdate,</span><br><span class="line">  <span class="keyword">this</span>.onScaleEnd,</span><br><span class="line">  <span class="keyword">this</span>.behavior,</span><br><span class="line">  <span class="keyword">this</span>.excludeFromSemantics = <span class="literal">false</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-测试1：四大战将"><a href="#3-测试1：四大战将" class="headerlink" title="3.测试1：四大战将"></a>3.测试1：<code>四大战将</code></h5><h6 id="3-1-源码追踪："><a href="#3-1-源码追踪：" class="headerlink" title="3.1.源码追踪："></a>3.1.源码追踪：</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.onTap,----点击----<span class="type">Function</span>()---</span><br><span class="line"><span class="keyword">this</span>.onTapDown,----按下：<span class="type">Function</span>(<span class="type">TapDownDetails</span> details)---</span><br><span class="line"><span class="keyword">this</span>.onTapUp,---- 抬起：<span class="type">Function</span>(<span class="type">TapUpDetails</span> details)</span><br><span class="line"><span class="keyword">this</span>.onTapCancel,----取消(onTap无法触发时)：<span class="type">Function</span>()----</span><br><span class="line">    </span><br><span class="line">----&gt;[源码追踪:onTapDown]</span><br><span class="line"><span class="keyword">final</span> <span class="type">GestureTapDownCallback</span> onTapDown;</span><br><span class="line"></span><br><span class="line">----&gt;[源码追踪:<span class="type">GestureTapDownCallback</span>]</span><br><span class="line">typedef <span class="type">GestureTapDownCallback</span> = void <span class="type">Function</span>(<span class="type">TapDownDetails</span> details);</span><br><span class="line"></span><br><span class="line">----&gt;[源码追踪:<span class="type">TapDownDetails</span>]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TapDownDetails</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// Creates details for a [GestureTapDownCallback].</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// The [globalPosition] argument must not be null.</span></span><br><span class="line">  <span class="type">TapDownDetails</span>(&#123; <span class="keyword">this</span>.globalPosition = <span class="type">Offset</span>.zero &#125;)</span><br><span class="line">    : assert(globalPosition != <span class="literal">null</span>);</span><br><span class="line">    </span><br><span class="line">----&gt;[源码追踪:<span class="type">Offset</span>]</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Offset</span> <span class="keyword">extends</span> <span class="title">OffsetBase</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// Creates an offset. The first argument sets [dx], the horizontal component,</span></span><br><span class="line">  <span class="comment">/// and the second sets [dy], the vertical component.</span></span><br><span class="line">  const <span class="type">Offset</span>(double dx, double dy) : <span class="keyword">super</span>(dx, dy);</span><br><span class="line">  </span><br><span class="line"><span class="comment">//好吧，搞了半天就是落点嘛...</span></span><br></pre></td></tr></table></figure><hr><h6 id="3-2测试代码"><a href="#3-2测试代码" class="headerlink" title="3.2测试代码"></a>3.2测试代码</h6><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var box = Container(</span><br><span class="line">  width: <span class="number">100</span>,</span><br><span class="line">  height: <span class="number">100</span>,</span><br><span class="line">  color: Colors.lightBlueAccent,</span><br><span class="line">)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">var ctrl_test = GestureDetector(</span><br><span class="line">  child: box,</span><br><span class="line">  onTap: () &#123;</span><br><span class="line">    print(<span class="string">"onTap"</span>)<span class="comment">;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onTapDown: (<span class="name">d</span>) &#123;</span><br><span class="line">    print(<span class="string">"onPanDown"</span> + d.globalPosition.toString())<span class="comment">;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onTapUp: (<span class="name">d</span>) &#123;</span><br><span class="line">    print(<span class="string">"onTapUp"</span> +  d.globalPosition.toString())<span class="comment">;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onTapCancel: () &#123;</span><br><span class="line">    print(<span class="string">"onTapUp"</span>)<span class="comment">;</span></span><br><span class="line">  &#125;,</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">点了一下，控制台输出:</span><br><span class="line">I/flutter (<span class="number">27114</span>): onPanDownOffset(<span class="number">205.5</span>, <span class="number">384.5</span>)</span><br><span class="line">I/flutter (<span class="number">27114</span>): onTapUpOffset(<span class="number">205.5</span>, <span class="number">384.5</span>)</span><br><span class="line">I/flutter (<span class="number">27114</span>): onTap</span><br><span class="line"></span><br><span class="line">可见坐标是相对于屏幕顶点的</span><br><span class="line">onTapCancel</span><br></pre></td></tr></table></figure><hr><h5 id="4-测试2：三大小白"><a href="#4-测试2：三大小白" class="headerlink" title="4.测试2：三大小白"></a>4.测试2：三大小白</h5><blockquote><p>顾名思义…不多说</p></blockquote><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">this</span><span class="string">.</span><span class="comment">onDoubleTap</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">双击</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">void</span> <span class="comment">Function()</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">this</span><span class="string">.</span><span class="comment">onLongPress</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">长按</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">void</span> <span class="comment">Function()</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">this</span><span class="string">.</span><span class="comment">onLongPressUp</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">长按松开</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">void</span> <span class="comment">Function()</span>--<span class="literal">-</span><span class="literal">-</span></span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var ctrl_test2 = GestureDetector(</span><br><span class="line">    child: box,</span><br><span class="line">    onDoubleTap: () &#123;</span><br><span class="line">      print(<span class="string">"onDoubleTap"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    onLongPress: () &#123;</span><br><span class="line">      print(<span class="string">"onLongPress"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    onLongPressUp: () &#123;</span><br><span class="line">      print(<span class="string">"onLongPressUp"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h5 id="5-测试3：战场双龙-只给一条，另一条类比"><a href="#5-测试3：战场双龙-只给一条，另一条类比" class="headerlink" title="5.测试3：战场双龙(只给一条，另一条类比)"></a>5.测试3：战场双龙(只给一条，另一条类比)</h5><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">this</span><span class="string">.</span><span class="comment">onVerticalDragDown</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">竖直拖动按下</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">Function(DragDownDetails</span> <span class="comment">details)</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"><span class="comment">this</span><span class="string">.</span><span class="comment">onVerticalDragStart</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">竖直拖动开始</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">Function(DragStartDetails</span> <span class="comment">details)</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"> <span class="comment">this</span><span class="string">.</span><span class="comment">onVerticalDragUpdate</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">竖直拖动更新</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">Function(DragUpdateDetails</span> <span class="comment">details)</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"> <span class="comment">this</span><span class="string">.</span><span class="comment">onVerticalDragEnd</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">竖直拖动结束</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">Function(DragEndDetails</span> <span class="comment">details)</span>--<span class="literal">-</span><span class="literal">-</span></span><br><span class="line"> <span class="comment">this</span><span class="string">.</span><span class="comment">onVerticalDragCancel</span><span class="string">,</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">竖直拖动取消</span>--<span class="literal">-</span><span class="literal">-</span><span class="comment">Function()</span>--<span class="literal">-</span><span class="literal">-</span></span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var ctrl_test3 = GestureDetector(</span><br><span class="line">    child: box,</span><br><span class="line">    onVerticalDragDown: (<span class="name">d</span>) &#123;</span><br><span class="line">      print(<span class="string">"onVerticalDragDown---"</span> + d.globalPosition.toString())<span class="comment">;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    onVerticalDragStart: (<span class="name">d</span>) &#123;</span><br><span class="line">      print(<span class="string">"onVerticalDragStart---"</span> + d.globalPosition.toString())<span class="comment">;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    onVerticalDragUpdate: (<span class="name">d</span>) &#123;</span><br><span class="line">      print(<span class="string">"onVerticalDragUpdate---"</span> + d.globalPosition.toString())<span class="comment">;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    onVerticalDragCancel: () &#123;</span><br><span class="line">      print(<span class="string">"onVerticalDragCancel---"</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragDown---Offset(<span class="number">182.5</span>, <span class="number">384.8</span>)</span><br><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragStart---Offset(<span class="number">182.5</span>, <span class="number">384.8</span>)</span><br><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragUpdate---Offset(<span class="number">182.5</span>, <span class="number">390.2</span>)</span><br><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragUpdate---Offset(<span class="number">181.8</span>, <span class="number">402.2</span>)</span><br><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragUpdate---Offset(<span class="number">180.8</span>, <span class="number">420.5</span>)</span><br><span class="line">I/flutter ( <span class="number">4994</span>): onVerticalDragUpdate---Offset(<span class="number">181.2</span>, <span class="number">443.5</span>)</span><br></pre></td></tr></table></figure><hr><h4 id="七、交互操作小案例"><a href="#七、交互操作小案例" class="headerlink" title="七、交互操作小案例"></a>七、交互操作小案例</h4><h5 id="1：点击生成小球"><a href="#1：点击生成小球" class="headerlink" title="1：点击生成小球"></a>1：点击生成小球</h5><blockquote><p>canvas画出的CustomPaint大小神奇般的是0,导致GestureDetector不起作用<br>没办法，只能曲线救国，GestureDetector包住全部，在减去偏移量<br>小球的绘制就不分析了，就是收集球，再画出来，如果第二天的文章会了，这都是小菜</p></blockquote><h6 id="1-1小球数据承载类："><a href="#1-1小球数据承载类：" class="headerlink" title="1.1小球数据承载类："></a>1.1小球数据承载类：</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Draw</span> &#123;</span><br><span class="line">  <span class="built_in">double</span> x;</span><br><span class="line">  <span class="built_in">double</span> y;</span><br><span class="line">  Color color;</span><br><span class="line">  Draw(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-2：准备Canvas绘板"><a href="#1-2：准备Canvas绘板" class="headerlink" title="1.2：准备Canvas绘板"></a>1.2：准备Canvas绘板</h6><blockquote><p>drawGrid绘制网格见第二篇(其实没有也无所谓,我比较喜欢)</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$21.png" alt=""></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Canvas绘版</span></span><br><span class="line"><span class="keyword">class</span> CanvasView extends CustomPainter &#123;</span><br><span class="line">  BuildContext context;</span><br><span class="line">  Paint mPaint;</span><br><span class="line">  <span class="constructor">CanvasView(<span class="params">this</span>.<span class="params">context</span>)</span> &#123;</span><br><span class="line">    mPaint = <span class="keyword">new</span> <span class="constructor">Paint()</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  @override</span><br><span class="line">  void paint(Canvas canvas, Size size) &#123;</span><br><span class="line">    balls.for<span class="constructor">Each((<span class="params">ball</span>)</span> &#123;</span><br><span class="line">      draw<span class="constructor">Ball(<span class="params">canvas</span>, <span class="params">ball</span>)</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    var winSize = <span class="module-access"><span class="module"><span class="identifier">MediaQuery</span>.</span></span><span class="keyword">of</span>(context).size;</span><br><span class="line">    draw<span class="constructor">Grid(<span class="params">canvas</span>, <span class="params">winSize</span>)</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  <span class="built_in">bool</span> should<span class="constructor">Repaint(CustomPainter <span class="params">oldDelegate</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement shouldRepaint</span></span><br><span class="line">    return <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"> <span class="comment">//绘制小球</span></span><br><span class="line">  void draw<span class="constructor">Ball(Canvas <span class="params">canvas</span>, Draw <span class="params">ball</span>)</span> &#123;</span><br><span class="line">    mPaint.color = ball.color;</span><br><span class="line">    canvas.draw<span class="constructor">Circle(Offset(<span class="params">ball</span>.<span class="params">x</span>, <span class="params">ball</span>.<span class="params">y</span>)</span>, <span class="number">10</span>, mPaint);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-3-数据的变动与渲染-交互"><a href="#1-3-数据的变动与渲染-交互" class="headerlink" title="1.3.数据的变动与渲染(交互)"></a>1.3.数据的变动与渲染(交互)</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> balls = []; <span class="comment">//小球合集</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanvasPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="type">CanvasPage</span>(&#123;<span class="type">Key</span> key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _CanvasPageState createState() =&gt; _CanvasPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CanvasPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;CanvasPage&gt;</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">var</span> appBar = <span class="type">AppBar</span>(</span><br><span class="line">      title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> barTopHeight = <span class="type">MediaQueryData</span>.fromWindow(window).padding.top;</span><br><span class="line">    print(barTopHeight);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scf = <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: appBar,</span><br><span class="line">        body: <span class="type">CustomPaint</span>(</span><br><span class="line">          painter: <span class="type">CanvasView</span>(context),</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">GestureDetector</span>(</span><br><span class="line">      child: scf,</span><br><span class="line">      onTapDown: (d) &#123;</span><br><span class="line">        <span class="keyword">var</span> pos = d.globalPosition;</span><br><span class="line">        balls.add(<span class="keyword">new</span> <span class="type">Draw</span>(pos.dx,</span><br><span class="line">            pos.dy - appBar.preferredSize.height - barTopHeight, randomRGB()));</span><br><span class="line">        print(balls.length);</span><br><span class="line">        setState(() &#123;&#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-onPanUpdate测试"><a href="#2-onPanUpdate测试" class="headerlink" title="2.onPanUpdate测试"></a>2.<code>onPanUpdate</code>测试</h5><blockquote><p>实现起来还是很简单的，<code>onPanUpdate</code>的时候加点就行了</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$22.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onPanUpdate: (d) &#123;</span><br><span class="line">      <span class="keyword">var</span> pos = d.globalPosition;</span><br><span class="line">      balls.<span class="keyword">add</span>(<span class="keyword">new</span> Draw(pos.dx,</span><br><span class="line">          pos.dy - appBar.preferredSize.height - barTopHeight, randomARGB()));</span><br></pre></td></tr></table></figure><hr><h5 id="3-画线"><a href="#3-画线" class="headerlink" title="3.画线"></a>3.画线</h5><blockquote><p>好吧，这个比较搓，不过测试了<code>onPanDown</code>、<code>onPanUpdate</code>、<code>onPanEnd</code><br>Flutter的canvas用的怪怪的，无法记录前次的绘制,要实现自由绘制，看来只能拼点了</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$05$23.png" alt=""></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Canvas绘版</span></span><br><span class="line"><span class="keyword">class</span> CanvasView extends CustomPainter &#123;</span><br><span class="line">  BuildContext context;</span><br><span class="line">  Paint mPaint;</span><br><span class="line">  double _downX;</span><br><span class="line">  double _downY;</span><br><span class="line">  double _upX;</span><br><span class="line">  double _upY;</span><br><span class="line">  <span class="constructor">CanvasView(<span class="params">this</span>.<span class="params">context</span>, <span class="params">this</span>.<span class="params">_downX</span>, <span class="params">this</span>.<span class="params">_downY</span>, <span class="params">this</span>.<span class="params">_upX</span>, <span class="params">this</span>.<span class="params">_upY</span>)</span> &#123;</span><br><span class="line">    mPaint = <span class="keyword">new</span> <span class="constructor">Paint()</span></span><br><span class="line">      ..strokeWidth = <span class="number">10</span></span><br><span class="line">      ..strokeCap = <span class="module-access"><span class="module"><span class="identifier">StrokeCap</span>.</span></span>round;</span><br><span class="line">  &#125;</span><br><span class="line">  @override</span><br><span class="line">  void paint(Canvas canvas, Size size) &#123;</span><br><span class="line">    var winSize = <span class="module-access"><span class="module"><span class="identifier">MediaQuery</span>.</span></span><span class="keyword">of</span>(context).size;</span><br><span class="line">    draw<span class="constructor">Grid(<span class="params">canvas</span>, <span class="params">winSize</span>)</span>;</span><br><span class="line">    print(<span class="string">"_downX:$_downX,_downY:$_downY"</span>);</span><br><span class="line">    canvas.draw<span class="constructor">Line(Offset(<span class="params">_downX</span>, <span class="params">_downY</span>)</span>, <span class="constructor">Offset(<span class="params">_upX</span>, <span class="params">_upY</span>)</span>, mPaint);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  <span class="built_in">bool</span> should<span class="constructor">Repaint(CustomPainter <span class="params">oldDelegate</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> implement shouldRepaint</span></span><br><span class="line">    return <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanvasPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="type">CanvasPage</span>(&#123;<span class="type">Key</span> key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _CanvasPageState createState() =&gt; _CanvasPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_CanvasPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;CanvasPage&gt;</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> _downX;</span><br><span class="line">  <span class="keyword">var</span> _downY;</span><br><span class="line">  <span class="keyword">var</span> _upX;</span><br><span class="line">  <span class="keyword">var</span> _upY;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">var</span> appBar = <span class="type">AppBar</span>(</span><br><span class="line">      title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">var</span> barTopHeight = <span class="type">MediaQueryData</span>.fromWindow(window).padding.top;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scf = <span class="type">Scaffold</span>(</span><br><span class="line">        appBar: appBar,</span><br><span class="line">        body: <span class="type">CustomPaint</span>(</span><br><span class="line">          painter: <span class="type">CanvasView</span>(context, _downX, _downY, _upX, _upY),</span><br><span class="line">        ));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="type">GestureDetector</span>(</span><br><span class="line">      child: scf,</span><br><span class="line">      onPanDown: (d) &#123;</span><br><span class="line">        _downX = d.globalPosition.dx;</span><br><span class="line">        _downY =</span><br><span class="line">            d.globalPosition.dy - appBar.preferredSize.height - barTopHeight;</span><br><span class="line">      &#125;,</span><br><span class="line">      onPanUpdate: (d) &#123;</span><br><span class="line">        _upX = d.globalPosition.dx;</span><br><span class="line">        _upY = d.globalPosition.dy - appBar.preferredSize.height - barTopHeight;</span><br><span class="line">        setState(() &#123;&#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      onPanEnd: (d) &#123;</span><br><span class="line">        _downX = <span class="number">-10.0</span>;</span><br><span class="line">        _downY =  <span class="number">-10.0</span>;</span><br><span class="line">        _upX =  <span class="number">-10.0</span>;</span><br><span class="line">        _upY =  <span class="number">-10.0</span>;</span><br><span class="line">        setState(() &#123;&#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="八、关于跳转"><a href="#八、关于跳转" class="headerlink" title="八、关于跳转"></a>八、关于跳转</h4><p><img src="http://photo.toly1994.com/flutter$seven_day$05$24.png" alt=""></p><h5 id="跳转方式1：加routes"><a href="#跳转方式1：加routes" class="headerlink" title="跳转方式1：加routes"></a>跳转方式1：加<code>routes</code></h5><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> MaterialApp(</span><br><span class="line">    title: <span class="string">'Flutter Demo'</span>,</span><br><span class="line">    theme: ThemeData(</span><br><span class="line">      primarySwatch: Colors.lightBlue,</span><br><span class="line">    ),</span><br><span class="line">    home: <span class="keyword">new</span> CanvasPage(),</span><br><span class="line">  routes: &lt;<span class="built_in">String</span>, WidgetBuilder&gt; &#123;</span><br><span class="line">  <span class="string">'/clock'</span>: <span class="function">(<span class="params">BuildContext context</span>) =&gt;</span> ClockPage(),</span><br><span class="line">&#125;,);</span><br><span class="line"></span><br><span class="line"><span class="comment">//跳转方法： </span></span><br><span class="line">Navigator.of(context).pushNamed(<span class="string">'/clock'</span>);</span><br></pre></td></tr></table></figure><hr><h5 id="跳转方式2：直接开控件"><a href="#跳转方式2：直接开控件" class="headerlink" title="跳转方式2：直接开控件"></a>跳转方式2：直接开控件</h5><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Navigator</span>.</span></span>push(context,<span class="constructor">MaterialPageRoute(<span class="params">builder</span>: (<span class="params">bu</span>)</span> =&gt; <span class="constructor">ClockPage()</span>));</span><br></pre></td></tr></table></figure><hr><h5 id="关闭方式："><a href="#关闭方式：" class="headerlink" title="关闭方式："></a>关闭方式：</h5><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.<span class="built_in">pop</span>(<span class="built_in">context</span>);</span><br></pre></td></tr></table></figure><h5 id="要说flutter的方便之处，那就是布局是对象，这有多爽"><a href="#要说flutter的方便之处，那就是布局是对象，这有多爽" class="headerlink" title="要说flutter的方便之处，那就是布局是对象，这有多爽:"></a>要说flutter的方便之处，那就是布局是对象，这有多爽:</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Android时候写xml，如果一个布局文件你想要其中的一部分，这就尴尬了:  </span><br><span class="line">cv一下，删删改改，有时id有联系就更尴尬了。   </span><br><span class="line"><span class="number">2.</span>虽然安卓的xml相比于Java代码布局的简洁性，复用性高很多，但仍有局限性。  </span><br><span class="line"><span class="number">3.</span>而flutter布局是对象，你可以用变量来记录它，随用随取。  </span><br><span class="line"><span class="number">4.</span>Flutter的flex布局让布局的适应性变得很强，虽然Android的约束布局也可以，但略显繁杂</span><br></pre></td></tr></table></figure><blockquote><p>好了，今天就到这里</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;今天调料十足，保证新鲜美味-2018-12-20&quot;&gt;&lt;a href=&quot;#今天调料十足，保证新鲜美味-2018-12-20&quot; class=&quot;headerlink&quot; title=&quot;今天调料十足，保证新鲜美味----2018-12-20&quot;&gt;&lt;/a&gt;&lt;code&gt;今天调料十足，保证新鲜美味----2018-12-20&lt;/code&gt;&lt;/h4&gt;&lt;h5 id=&quot;1：写在前面：&quot;&gt;&lt;a href=&quot;#1：写在前面：&quot; class=&quot;headerlink&quot; title=&quot;1：写在前面：&quot;&gt;&lt;/a&gt;1：写在前面：&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;每个布局的实现方案都有很多，我只是选择自己认为较好的布局方案&lt;br&gt;对于非常复杂的布局，建议先&lt;code&gt;打草稿&lt;/code&gt;，再进行&lt;code&gt;颜色块模拟&lt;/code&gt;，最后再&lt;code&gt;写控件&lt;/code&gt;&lt;br&gt;有留白的地方Expanded+flex(&lt;code&gt;以下我所说的flex就是Row+Column的总成&lt;/code&gt;)会有很好的适应性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;2-选几张图镇楼：&quot;&gt;&lt;a href=&quot;#2-选几张图镇楼：&quot; class=&quot;headerlink&quot; title=&quot;2.选几张图镇楼：&quot;&gt;&lt;/a&gt;2.选几张图镇楼：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://photo.toly1994.com/flutter$seven_day$05$0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第4天--基础控件(下)+Flex布局详解</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/04.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/04.html</id>
    <published>2018-12-19T13:46:01.000Z</published>
    <updated>2020-05-04T07:01:01.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h5><blockquote><p>Flex布局是Flutter的五虎上将之一,虎父无犬子，其子Row和Column也能力非凡<br>你有没有被mainAxisAlignment，crossAxisAlignment弄得晕头转向,本文将助你将他们纳入麾下。<br>先看一下父子三人在Flutter布局体系中的位置:<code>多子组件布局</code>  </p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$0.png" alt=""></p><a id="more"></a><hr><h5 id="1-Flex的属性一览"><a href="#1-Flex的属性一览" class="headerlink" title="1.Flex的属性一览"></a>1.Flex的属性一览</h5><table><thead><tr><th>属性名</th><th>类型</th><th>默认值</th><th>简介</th></tr></thead><tbody><tr><td>direction</td><td>Axis</td><td>@required</td><td>轴向</td></tr><tr><td>mainAxisAlignment</td><td>MainAxisAlignment</td><td>start</td><td>主轴方向对齐方式</td></tr><tr><td>crossAxisAlignment</td><td>CrossAxisAlignment</td><td>center</td><td>交叉轴方向对齐方式</td></tr><tr><td>mainAxisSize</td><td>MainAxisSize</td><td>max</td><td>主轴尺寸</td></tr><tr><td>textDirection</td><td>TextDirection</td><td>null</td><td>文本方向</td></tr><tr><td>verticalDirection</td><td>VerticalDirection</td><td>down</td><td>竖直方向</td></tr><tr><td>textBaseline</td><td>TextBaseline</td><td>null</td><td>基线类型</td></tr><tr><td>children</td><td>List<Widget></td><td><Widget>[]</td><td>内部孩子</td></tr></tbody></table><hr><h5 id="2-轴向-direction-Axis"><a href="#2-轴向-direction-Axis" class="headerlink" title="2.轴向:direction:Axis"></a>2.轴向:<code>direction:Axis</code></h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Axis</span> &#123;</span></span><br><span class="line">  horizontal,<span class="regexp">//</span>水平</span><br><span class="line">  vertical,<span class="regexp">//</span>竖直</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>也就是水平排放还是竖直排放，可以看出默认情况下都是主轴顶头,交叉轴居中<br>比如horizontal下主轴为水平轴，交叉轴则为竖直。也就是水平顶头，竖直居中<br>这里使用MultiShower快速展示,更好的对比出不同之处，<a href="https://juejin.im/post/5d2842ac6fb9a07eb15d82ad" target="_blank" rel="noopener">MultiShower详见</a></p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$1.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">direction</span> <span class="string">=[Axis.horizontal,Axis.vertical];</span></span><br><span class="line"><span class="string">var</span> <span class="string">show</span> <span class="string">=</span> <span class="string">MultiShower(direction,(e)&#123;</span></span><br><span class="line">  <span class="string">return</span> <span class="string">Flex(</span></span><br><span class="line">    <span class="attr">direction:</span> <span class="string">e,</span></span><br><span class="line">    <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span></span><br><span class="line"></span><br><span class="line">  <span class="string">);</span></span><br><span class="line"><span class="string">&#125;,color:</span> <span class="string">Colors.black12,width:</span> <span class="number">300</span><span class="string">,height:</span> <span class="number">200</span><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">redBox=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Colors.red,</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">blueBox=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Colors.blue,</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">30</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">60</span><span class="string">,</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">yellowBox=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Colors.yellow,</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">greenBox=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Colors.green,</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">60</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">60</span><span class="string">,</span></span><br><span class="line"><span class="string">);</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-主轴方向-mainAxisAlignment-MainAxisAlignment"><a href="#3-主轴方向-mainAxisAlignment-MainAxisAlignment" class="headerlink" title="3.主轴方向:mainAxisAlignment:MainAxisAlignment"></a>3.主轴方向:<code>mainAxisAlignment:MainAxisAlignment</code></h5><blockquote><p>主轴方向的排布规则,这里以水平为例，主轴为水平方向。竖直类比即可</p></blockquote><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">MainAxisAlignment</span> &#123;</span></span><br><span class="line">  start,<span class="regexp">//</span>顶头</span><br><span class="line">  <span class="keyword">end</span>,<span class="regexp">//</span>接尾</span><br><span class="line">  center,<span class="regexp">//</span>居中</span><br><span class="line">  spaceBetween,<span class="regexp">//</span>顶头接尾，其他均分</span><br><span class="line">  spaceAround,<span class="regexp">//</span>中间的孩子均分,两头的孩子空一半</span><br><span class="line">  spaceEvenly,<span class="regexp">//</span>均匀平分</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$04$2.png" alt=""></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">testMainAxisAlignment()&#123;</span><br><span class="line">  <span class="built_in">var</span> redBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.red,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">50</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> blueBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.blue,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">60</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> yellowBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.yellow,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> greenBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.green,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> mainAxisAlignment =[</span><br><span class="line">  MainAxisAlignment.start,MainAxisAlignment.<span class="built_in">center</span>,</span><br><span class="line">  MainAxisAlignment.end,MainAxisAlignment.spaceAround,</span><br><span class="line">  MainAxisAlignment.spaceBetween,MainAxisAlignment.spaceEvenly];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">show</span> = MultiShower(mainAxisAlignment,(e)&#123;</span><br><span class="line">    <span class="built_in">return</span> Flex(</span><br><span class="line">      direction: Axis.horizontal,</span><br><span class="line">      mainAxisAlignment: e,</span><br><span class="line">      children: &lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">  &#125;,<span class="built_in">color</span>: Colors.black12,<span class="built_in">width</span>: <span class="number">200</span>,<span class="built_in">height</span>: <span class="number">150</span>);</span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">show</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="4-交叉轴方向-crossAxisAlignment-CrossAxisAlignment"><a href="#4-交叉轴方向-crossAxisAlignment-CrossAxisAlignment" class="headerlink" title="4.交叉轴方向:crossAxisAlignment:CrossAxisAlignment"></a>4.交叉轴方向:<code>crossAxisAlignment:CrossAxisAlignment</code></h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CrossAxisAlignment</span> &#123;</span></span><br><span class="line">  start,<span class="regexp">//</span>顶头</span><br><span class="line">  <span class="keyword">end</span>,<span class="regexp">//</span>接尾</span><br><span class="line">  center,<span class="regexp">//</span>居中</span><br><span class="line">  stretch,<span class="regexp">//</span>伸展</span><br><span class="line">  baseline,<span class="regexp">//</span>基线</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>还是水平为例，交叉轴便是竖轴，这里可以看出他们的布局行为<br>其中需要注意的是<code>CrossAxisAlignment.baseline</code>使用时必须有<code>textBaseline</code><br>其中textBaseline确定对齐的是那种基线,分为<code>alphabetic</code>和<code>ideographic</code></p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$3.png" alt=""></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">testCrossAxisAlignment()&#123;</span><br><span class="line">  <span class="built_in">var</span> redBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.red,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">50</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> blueBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.blue,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">60</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> yellowBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.yellow,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> greenBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.green,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">var</span> crossAxisAlignment =[CrossAxisAlignment.start,CrossAxisAlignment.<span class="built_in">center</span>,</span><br><span class="line">    CrossAxisAlignment.end,CrossAxisAlignment.stretch,CrossAxisAlignment.baseline];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">show</span> = MultiShower(crossAxisAlignment,(e)&#123;</span><br><span class="line">    <span class="built_in">return</span> Flex(</span><br><span class="line">      direction: Axis.horizontal,</span><br><span class="line">      crossAxisAlignment: e,</span><br><span class="line">      textBaseline: TextBaseline.<span class="built_in">alphabetic</span>,//基线类型</span><br><span class="line">      children: &lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">  &#125;,<span class="built_in">color</span>: Colors.black12,<span class="built_in">width</span>: <span class="number">200</span>,<span class="built_in">height</span>: <span class="number">140</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">show</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="5-主轴尺寸-mainAxisSize"><a href="#5-主轴尺寸-mainAxisSize" class="headerlink" title="5.主轴尺寸:mainAxisSize"></a>5.主轴尺寸:mainAxisSize</h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">MainAxisSize</span> &#123;</span></span><br><span class="line">  min,</span><br><span class="line">  max,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>当父容器的宽未约束,Flex默认会将自身尽可能延伸，这便是MainAxisSize.max</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$4.png" alt=""></p><blockquote><p>此时改为MainAxisSize.min时,它不会延伸自己的区域，自会包裹内容</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$5.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">testMainAxisSize()&#123;</span></span><br><span class="line">  <span class="string">var</span> <span class="string">redBox=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Colors.red,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line">  <span class="string">);</span></span><br><span class="line"></span><br><span class="line">  <span class="string">var</span> <span class="string">blueBox=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Colors.blue,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">30</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">60</span><span class="string">,</span></span><br><span class="line">  <span class="string">);</span></span><br><span class="line"></span><br><span class="line">  <span class="string">var</span> <span class="string">yellowBox=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Colors.yellow,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">  <span class="string">);</span></span><br><span class="line"></span><br><span class="line">  <span class="string">var</span> <span class="string">greenBox=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Colors.green,</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">50</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">10</span><span class="string">,</span></span><br><span class="line">  <span class="string">);</span></span><br><span class="line"></span><br><span class="line">  <span class="string">return</span> <span class="string">Center(child:</span> <span class="string">Flex(</span></span><br><span class="line">    <span class="attr">direction:</span> <span class="string">Axis.horizontal,</span></span><br><span class="line">    <span class="attr">mainAxisSize:</span> <span class="string">MainAxisSize.max,</span></span><br><span class="line">    <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span></span><br><span class="line"></span><br><span class="line">  <span class="string">),);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h5 id="6-文字方向-textDirection-TextDirection"><a href="#6-文字方向-textDirection-TextDirection" class="headerlink" title="6.文字方向:textDirection:TextDirection"></a>6.文字方向:<code>textDirection:TextDirection</code></h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">TextDirection</span> &#123;</span></span><br><span class="line">  ltr,<span class="regexp">//</span>从左到右</span><br><span class="line">  rtl,<span class="regexp">//</span>从右到左</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这个非常好理解，不多言了</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$04$6.png" alt=""></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">testTextDirection()&#123;</span><br><span class="line">  <span class="built_in">var</span> redBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.red,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">50</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> blueBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.blue,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">60</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> yellowBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.yellow,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> greenBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.green,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> textDirection =[TextDirection.ltr,TextDirection.rtl];</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">show</span> = MultiShower(textDirection,(e)&#123;</span><br><span class="line">    <span class="built_in">return</span> Flex(</span><br><span class="line">      direction: Axis.horizontal,</span><br><span class="line">      textDirection: e,</span><br><span class="line">      children: &lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">  &#125;,<span class="built_in">color</span>: Colors.black12,<span class="built_in">width</span>: <span class="number">200</span>,<span class="built_in">height</span>: <span class="number">140</span>);</span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">show</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="7-竖直方向排序-verticalDirection-VerticalDirection"><a href="#7-竖直方向排序-verticalDirection-VerticalDirection" class="headerlink" title="7.竖直方向排序:verticalDirection:VerticalDirection"></a>7.竖直方向排序:<code>verticalDirection:VerticalDirection</code></h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">VerticalDirection</span>&#123;</span></span><br><span class="line">    up,</span><br><span class="line">    down,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$04$7.png" alt=""></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">testVerticalDirection()&#123;</span><br><span class="line">  <span class="built_in">var</span> redBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.red,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">50</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> blueBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.blue,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">30</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">60</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> yellowBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.yellow,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> greenBox= Container(</span><br><span class="line">    <span class="built_in">color</span>: Colors.green,</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">50</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">10</span>,</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> verticalDirection =[VerticalDirection.up,VerticalDirection.down];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">show</span> = MultiShower(verticalDirection,(e)&#123;</span><br><span class="line">    <span class="built_in">return</span> Flex(</span><br><span class="line">      direction: Axis.vertical,</span><br><span class="line">      verticalDirection: e</span><br><span class="line">      children: &lt;Widget&gt;[redBox,blueBox,yellowBox,greenBox],</span><br><span class="line"></span><br><span class="line">    );</span><br><span class="line">  &#125;,<span class="built_in">color</span>: Colors.black12,<span class="built_in">width</span>: <span class="number">200</span>,<span class="built_in">height</span>: <span class="number">140</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">show</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="8-基线对齐方式-textBaseline-TextBaseline"><a href="#8-基线对齐方式-textBaseline-TextBaseline" class="headerlink" title="8.基线对齐方式:textBaseline:TextBaseline"></a>8.基线对齐方式:<code>textBaseline:TextBaseline</code></h5><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">TextBaseline</span> &#123;</span></span><br><span class="line">  alphabetic,</span><br><span class="line">  ideographic,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$04$8.png" alt=""></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">testTextBaseline()&#123;</span><br><span class="line">  <span class="built_in">var</span> redBox= Text(</span><br><span class="line">    <span class="string">"张风捷特烈"</span>,<span class="built_in">style</span>: TextStyle(fontSize: <span class="number">20</span>,backgroundColor: Colors.red),</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> blueBox= Text(</span><br><span class="line">    <span class="string">"toly"</span>,<span class="built_in">style</span>: TextStyle(fontSize: <span class="number">50</span>,backgroundColor: Colors.blue),</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> yellowBox=  Text(</span><br><span class="line">    <span class="string">"1994"</span>,<span class="built_in">style</span>: TextStyle(fontSize: <span class="number">30</span>,backgroundColor: Colors.green),</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> textBaseline =[TextBaseline.<span class="built_in">alphabetic</span>,TextBaseline.ideographic];</span><br><span class="line"></span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">show</span> = MultiShower(textBaseline,(e)&#123;</span><br><span class="line">    <span class="built_in">return</span> Flex(</span><br><span class="line">      direction: Axis.horizontal,</span><br><span class="line">      crossAxisAlignment: CrossAxisAlignment.baseline,</span><br><span class="line">      textBaseline: e,</span><br><span class="line">      children: &lt;Widget&gt;[redBox,blueBox,yellowBox],</span><br><span class="line">    );</span><br><span class="line">  &#125;,<span class="built_in">color</span>: Colors.black12,<span class="built_in">width</span>: <span class="number">300</span>,<span class="built_in">height</span>: <span class="number">140</span>);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">show</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>至此，Flutter中的Flex布局就已经完全解读完了。<br>其中Flutter的孩子Row是<code>direction: Axis.horizontal,</code>Column是<code>direction: Axis.vertical,</code><br>其他的属性都是类似的，相当于Flex的简化版，所以Flex在手，天下我有。</p></blockquote><hr><h6 id="Expanded与Flex的搭配—-更新于2019-1-22"><a href="#Expanded与Flex的搭配—-更新于2019-1-22" class="headerlink" title="Expanded与Flex的搭配— [更新于2019.1.22]"></a>Expanded与Flex的搭配— [更新于2019.1.22]</h6><blockquote><p>还要一点是关于Expanded，也比较保用，它能与Flex布局结合，变更孩子尺寸  </p></blockquote><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">c</span><span class="number">1</span>:绿色  <span class="keyword">c</span><span class="number">2</span>:红色  <span class="keyword">c</span><span class="number">3</span>:黄色</span><br><span class="line"><span class="number">1</span>).Expanded--<span class="keyword">c</span><span class="number">2</span>：<span class="keyword">c</span><span class="number">1</span>和<span class="keyword">c</span><span class="number">3</span>将不变，<span class="keyword">c</span><span class="number">2</span>延伸自己占满剩余部分</span><br><span class="line"><span class="number">2</span>).同时Expanded--<span class="keyword">c</span><span class="number">2</span>和<span class="keyword">c</span><span class="number">3</span>，最终<span class="keyword">c</span><span class="number">2</span>和<span class="keyword">c</span><span class="number">3</span>的长度是一样的</span><br><span class="line"><span class="number">3</span>).同时Expanded--<span class="keyword">c</span><span class="number">1</span>，<span class="keyword">c</span><span class="number">2</span>和<span class="keyword">c</span><span class="number">3</span>，最终<span class="keyword">c</span><span class="number">1</span>,<span class="keyword">c</span><span class="number">2</span>，<span class="keyword">c</span><span class="number">3</span>长度都是一样的</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$04$9.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0.前言&quot;&gt;&lt;/a&gt;0.前言&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;Flex布局是Flutter的五虎上将之一,虎父无犬子，其子Row和Column也能力非凡&lt;br&gt;你有没有被mainAxisAlignment，crossAxisAlignment弄得晕头转向,本文将助你将他们纳入麾下。&lt;br&gt;先看一下父子三人在Flutter布局体系中的位置:&lt;code&gt;多子组件布局&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://photo.toly1994.com/flutter$seven_day$04$0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第3天--基础控件(上)</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/03.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/03.html</id>
    <published>2018-12-18T13:46:01.000Z</published>
    <updated>2020-05-04T07:18:14.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Flutter七日游第三天：2018-12-18-天气：晴朗"><a href="#Flutter七日游第三天：2018-12-18-天气：晴朗" class="headerlink" title="Flutter七日游第三天：2018-12-18 天气：晴朗"></a><code>Flutter七日游第三天：2018-12-18 天气：晴朗</code></h4><h4 id="零、前言"><a href="#零、前言" class="headerlink" title="零、前言"></a>零、前言</h4><blockquote><p>浪了两天，Dart语法基本上熟悉了，绘图也不怕了，现在进入正轨，继续浪~<br>今天来学些枯燥的东西了–基础控件，戒骄戒躁，基础还是要好好掌握。<br>本文目的在于尽可能看清控件的全局(细枝末节点到为止),详细用法等布局实战再细说吧<br>本文能用图的，尽量不用字(看完你可能会觉得我脑洞有点大)，废话不多说，进入今天的内容    </p></blockquote><hr><h5 id="一、Widget简入"><a href="#一、Widget简入" class="headerlink" title="一、Widget简入"></a>一、Widget简入</h5><blockquote><p>Widget:[小器具，装饰品，窗口小部件],以后简称：<code>控件</code><br>下面看一下Widget树：(只延伸到下代)</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$0.png" alt=""></p><a id="more"></a><hr><h5 id="1-StatelessWidget和StatefulWidget"><a href="#1-StatelessWidget和StatefulWidget" class="headerlink" title="1.StatelessWidget和StatefulWidget"></a>1.<code>StatelessWidget</code>和<code>StatefulWidget</code></h5><blockquote><p>目前出现在我眼前的只这有两个，所以先只看这两个:</p></blockquote><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">StatelessWidget：源码第一句话：</span><br><span class="line">----&gt;A widget that does not require mutable <span class="keyword">state</span>.</span><br><span class="line">----&gt;一个不需要变动状态的控件</span><br><span class="line"></span><br><span class="line">StatefulWidget ：源码第一句话：</span><br><span class="line">----&gt;A widget that has mutable <span class="keyword">state</span>.</span><br><span class="line">----&gt;一个可变动状态的控件</span><br></pre></td></tr></table></figure><hr><h5 id="2-StatelessWidget一共就有三个方法"><a href="#2-StatelessWidget一共就有三个方法" class="headerlink" title="2.StatelessWidget一共就有三个方法:"></a>2.StatelessWidget一共就有三个方法:</h5><p><img src="http://photo.toly1994.com/flutter$seven_day$03$1.png" alt=""></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">--------&gt;[构造方法，需要一个key,而且老爸已经给他了]----</span><br><span class="line"><span class="comment">/// Initializes [key] for subclasses.</span></span><br><span class="line">const <span class="type">StatelessWidget</span>(&#123; <span class="type">Key</span> key &#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">--------&gt;[createElement方法复写<span class="type">Widget</span>方法，使用<span class="type">StatelessElement</span>--tag1--自给自足]</span><br><span class="line"><span class="comment">/// It is uncommon for subclasses to override this method.</span></span><br><span class="line"><span class="comment">//子类重写此方法是不常见的。----所以就不要没事找事了</span></span><br><span class="line"><span class="type">StatelessElement</span> createElement() =&gt; <span class="type">StatelessElement</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">--tag1--&gt;[<span class="type">StatelessElement</span>,接收一个<span class="type">StatelessWidget</span>]</span><br><span class="line"><span class="comment">/// An [Element] that uses a [StatelessWidget] as its configuration.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StatelessElement</span> <span class="keyword">extends</span> <span class="title">ComponentElement</span> </span>&#123;</span><br><span class="line"> <span class="comment">/// Creates an element that uses the given widget as its configuration.</span></span><br><span class="line">  <span class="type">StatelessElement</span>(<span class="type">StatelessWidget</span> widget) : <span class="keyword">super</span>(widget);</span><br><span class="line">  </span><br><span class="line">--------&gt;[使用现在要关注的只有：build方法--]</span><br><span class="line"><span class="comment">/// Describes the part of the user interface represented by this widget.  </span></span><br><span class="line"><span class="comment">//描述此控件呈现在用户界面上的部分</span></span><br><span class="line">  <span class="meta">@protected</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context);<span class="comment">//空实现</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-初始项目看StatelessWidget"><a href="#3-初始项目看StatelessWidget" class="headerlink" title="3.初始项目看StatelessWidget:"></a>3.初始项目看<code>StatelessWidget</code>:</h5><blockquote><p><code>StatelessWidget</code>映入眼帘，可见该类内部一定有一个build方法返回一个Widget</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Flutter</span> <span class="type">Demo</span>',</span><br><span class="line">      theme: <span class="type">ThemeData</span>(</span><br><span class="line">        primarySwatch: <span class="type">Colors</span>.lightBlue,</span><br><span class="line">      ),</span><br><span class="line">      home:<span class="type">MyHomePage</span>(title: <span class="symbol">'Flutter</span> <span class="type">Demo</span> <span class="type">Home</span> <span class="type">Page</span>'),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不难看出MaterialApp是一个Widget，而且至少有title，theme，home三个属性</span></span><br><span class="line">而且home传入的是一个<span class="type">Widget</span></span><br></pre></td></tr></table></figure><hr><h5 id="4-恭喜达成成就：Widget源码偷窥者-成就奖励：三张卡片："><a href="#4-恭喜达成成就：Widget源码偷窥者-成就奖励：三张卡片：" class="headerlink" title="4.恭喜达成成就：Widget源码偷窥者, 成就奖励：三张卡片："></a>4.恭喜达成成就：<code>Widget源码偷窥者</code>, 成就奖励：三张卡片：</h5><blockquote><p>卡片初始属性：见白框(PS:<code>属性会随着你的阅历变多哦</code>)</p></blockquote><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$2.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$3.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$4.png" alt=""></td></tr></tbody></table><hr><h4 id="二、Flutter卡牌游戏Start"><a href="#二、Flutter卡牌游戏Start" class="headerlink" title="二、Flutter卡牌游戏Start"></a>二、Flutter卡牌游戏Start</h4><blockquote><p>接下来会列出一长串属性，并挑选些简单的属性测试一下<br>如果你觉得及其无聊，列属性的地方可以跳过,基本上每三个做一个小测试</p></blockquote><h5 id="1：MaterialApp-材料App"><a href="#1：MaterialApp-材料App" class="headerlink" title="1：MaterialApp--材料App"></a>1：<code>MaterialApp--材料App</code></h5><blockquote><p><code>An application that uses material design.</code>源码如是说:<code>一个使用材料设计的App</code><br>继承自<code>StatefulWidget</code>，字段蛮多的,先列一下，看看现在用到的，其他的用到再说吧。</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MaterialApp</span> <span class="title">extends</span> <span class="title">StatefulWidget</span> </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.navigatorKey,</span><br><span class="line">    <span class="keyword">this</span>.home,<span class="comment">//---&gt;tag1&lt;---</span></span><br><span class="line">    <span class="keyword">this</span>.routes = <span class="keyword">const</span> &lt;String, WidgetBuilder&gt;&#123;&#125;,</span><br><span class="line">    <span class="keyword">this</span>.initialRoute,</span><br><span class="line">    <span class="keyword">this</span>.onGenerateRoute,</span><br><span class="line">    <span class="keyword">this</span>.onUnknownRoute,</span><br><span class="line">    <span class="keyword">this</span>.navigatorObservers = <span class="keyword">const</span> &lt;NavigatorObserver&gt;[],</span><br><span class="line">    <span class="keyword">this</span>.builder,</span><br><span class="line">    <span class="keyword">this</span>.title = <span class="string">''</span>,<span class="comment">//---&gt;tag2&lt;---</span></span><br><span class="line">    <span class="keyword">this</span>.onGenerateTitle,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.theme,<span class="comment">//---&gt;tag3&lt;---</span></span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="keyword">this</span>.localizationsDelegates,</span><br><span class="line">    <span class="keyword">this</span>.localeListResolutionCallback,</span><br><span class="line">    <span class="keyword">this</span>.localeResolutionCallback,</span><br><span class="line">    <span class="keyword">this</span>.supportedLocales = <span class="keyword">const</span> &lt;Locale&gt;[Locale(<span class="string">'en'</span>, <span class="string">'US'</span>)],</span><br><span class="line">    <span class="keyword">this</span>.debugShowMaterialGrid = <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.showPerformanceOverlay = <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.checkerboardRasterCacheImages = <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.checkerboardOffscreenLayers = <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.showSemanticsDebugger = <span class="literal">false</span>,</span><br><span class="line">    <span class="keyword">this</span>.debugShowCheckedModeBanner = <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">//---&gt;tag1&lt;---[title是个字符串]----</span></span><br><span class="line"><span class="comment">/// This value is passed unmodified to [WidgetsApp.title].</span></span><br><span class="line"><span class="keyword">final</span> String title;</span><br><span class="line"></span><br><span class="line"><span class="comment">//---&gt;tag2&lt;---[theme是个ThemeData对象:保存材料设计主题的颜色和版式值]----</span></span><br><span class="line"><span class="comment">/// The colors to use for the application's widgets.</span></span><br><span class="line"><span class="keyword">final</span> ThemeData theme;</span><br><span class="line"></span><br><span class="line"><span class="comment">//---&gt;tag3&lt;---[home是个Widget对象]----</span></span><br><span class="line"><span class="comment">/// &#123;@macro flutter.widgets.widgetsApp.home&#125;</span></span><br><span class="line"><span class="keyword">final</span> Widget home;</span><br></pre></td></tr></table></figure><hr><h5 id="2-Scaffold-脚手架"><a href="#2-Scaffold-脚手架" class="headerlink" title="2.Scaffold--脚手架"></a>2.<code>Scaffold--脚手架</code></h5><blockquote><p>什么是脚手架，大概就是这个感觉吧，也就是辅助脚手的工具，方便施工</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$5.png" alt=""></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PreferredSizeWidget             <span class="keyword">this</span>.appBar,</span><br><span class="line">Widget                          <span class="keyword">this</span>.body,</span><br><span class="line">Widget                          <span class="keyword">this</span>.floatingActionButton,</span><br><span class="line">FloatingActionButtonLocation    <span class="keyword">this</span>.floatingActionButtonLocation,</span><br><span class="line">FloatingActionButtonAnimator    <span class="keyword">this</span>.floatingActionButtonAnimator,</span><br><span class="line">List&lt;Widget&gt;                    <span class="keyword">this</span>.persistentFooterButtons,</span><br><span class="line">Widget                          <span class="keyword">this</span>.drawer,</span><br><span class="line">Widget                          <span class="keyword">this</span>.endDrawer,</span><br><span class="line">Widget                          <span class="keyword">this</span>.bottomNavigationBar,</span><br><span class="line">Widget                          <span class="keyword">this</span>.bottomSheet,</span><br><span class="line">Color                           <span class="keyword">this</span>.backgroundColor,</span><br><span class="line">bool                            <span class="keyword">this</span>.resizeToAvoidBottomPadding = <span class="literal">true</span>,</span><br><span class="line">bool                            <span class="keyword">this</span>.primary = <span class="literal">true</span>,</span><br></pre></td></tr></table></figure><hr><h5 id="3：AppBar-App的Bar"><a href="#3：AppBar-App的Bar" class="headerlink" title="3：AppBar--App的Bar"></a>3：<code>AppBar--App的Bar</code></h5><blockquote><p>就像安卓的ToolBar一样的控件</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Widget                  <span class="keyword">this</span>.leading,</span><br><span class="line">bool                    <span class="keyword">this</span>.automaticallyImplyLeading = <span class="literal">true</span>,</span><br><span class="line">Widget                  <span class="keyword">this</span>.title,</span><br><span class="line">List&lt;Widget&gt;            <span class="keyword">this</span>.actions,</span><br><span class="line">Widget                  <span class="keyword">this</span>.flexibleSpace,</span><br><span class="line">PreferredSizeWidget     <span class="keyword">this</span>.bottom,</span><br><span class="line">double                  <span class="keyword">this</span>.elevation = <span class="number">4.0</span>,</span><br><span class="line">Color                   <span class="keyword">this</span>.backgroundColor,</span><br><span class="line">Brightness              <span class="keyword">this</span>.brightness,</span><br><span class="line">IconThemeData           <span class="keyword">this</span>.iconTheme,</span><br><span class="line">TextTheme               <span class="keyword">this</span>.textTheme,</span><br><span class="line">bool                    <span class="keyword">this</span>.primary = <span class="literal">true</span>,</span><br><span class="line">bool                    <span class="keyword">this</span>.centerTitle,</span><br><span class="line">double                  <span class="keyword">this</span>.titleSpacing = NavigationToolbar.kMiddleSpacing,</span><br><span class="line">double                  <span class="keyword">this</span>.toolbarOpacity = <span class="number">1.0</span>,</span><br><span class="line">double                  <span class="keyword">this</span>.bottomOpacity = <span class="number">1.0</span>,</span><br></pre></td></tr></table></figure><hr><h6 id="新手任务1：能力小测试："><a href="#新手任务1：能力小测试：" class="headerlink" title="新手任务1：能力小测试："></a>新手任务1：<code>能力小测试</code>：</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$6.png" alt=""></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">MaterialApp</span>(</span><br><span class="line">        <span class="attribute">title</span>: <span class="string">'Flutter Demo'</span>,</span><br><span class="line">        <span class="attribute">theme</span>: ThemeData(</span><br><span class="line">          <span class="attribute">primarySwatch</span>: Colors.lightBlue,</span><br><span class="line">        ),</span><br><span class="line">        <span class="attribute">home</span>: Scaffold(</span><br><span class="line">            <span class="attribute">appBar</span>: AppBar(</span><br><span class="line">                <span class="attribute">title</span>: Text(<span class="string">"张风捷特烈"</span>),<span class="comment">//标题</span></span><br><span class="line">                <span class="attribute">backgroundColor</span>: Color(<span class="number">0</span>xffcbf231), <span class="comment">//背景色</span></span><br><span class="line">                <span class="attribute">elevation</span>: <span class="number">12</span>,<span class="comment">//阴影</span></span><br><span class="line">                <span class="attribute">centerTitle</span>: true,</span><br><span class="line">                <span class="attribute">toolbarOpacity</span>: .<span class="number">4</span>)<span class="comment">//透明度</span></span><br><span class="line">        ));</span><br></pre></td></tr></table></figure><h6 id="新手任务完成，奖励卡片：欢迎继续冒险"><a href="#新手任务完成，奖励卡片：欢迎继续冒险" class="headerlink" title="新手任务完成，奖励卡片：欢迎继续冒险"></a>新手任务完成，奖励卡片：<code>欢迎继续冒险</code></h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$7.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$8.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$9.png" alt=""></td></tr></tbody></table><hr><h5 id="4：Text-文字"><a href="#4：Text-文字" class="headerlink" title="4：Text--文字"></a>4：<code>Text--文字</code></h5><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> Text(<span class="keyword">this</span>.<span class="keyword">data</span>, &#123;</span><br><span class="line">TextStyle           <span class="keyword">this</span>.style,</span><br><span class="line">TextAlign           <span class="keyword">this</span>.textAlign,</span><br><span class="line">TextDirection       <span class="keyword">this</span>.textDirection,</span><br><span class="line">Locale              <span class="keyword">this</span>.locale,</span><br><span class="line">bool                <span class="keyword">this</span>.softWrap,</span><br><span class="line">TextOverflow        <span class="keyword">this</span>.overflow,</span><br><span class="line">double              <span class="keyword">this</span>.textScaleFactor,</span><br><span class="line">int                 <span class="keyword">this</span>.maxLines,</span><br><span class="line">String              <span class="keyword">this</span>.semanticsLabel,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Creates a text widget with a [TextSpan].</span></span><br><span class="line">  <span class="keyword">const</span> Text.rich(<span class="keyword">this</span>.textSpan, &#123;</span><br><span class="line">        <span class="comment">//同上</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//----&gt;[TextStyle]----------------</span></span><br><span class="line">bool                <span class="keyword">this</span>.inherit = <span class="literal">true</span>,</span><br><span class="line">Color               <span class="keyword">this</span>.color,</span><br><span class="line">double              <span class="keyword">this</span>.fontSize,</span><br><span class="line">FontWeight          <span class="keyword">this</span>.fontWeight,</span><br><span class="line">FontStyle           <span class="keyword">this</span>.fontStyle,</span><br><span class="line">double              <span class="keyword">this</span>.letterSpacing,</span><br><span class="line">double              <span class="keyword">this</span>.wordSpacing,</span><br><span class="line">TextBaseline        <span class="keyword">this</span>.textBaseline,</span><br><span class="line">double              <span class="keyword">this</span>.height,</span><br><span class="line">Locale              <span class="keyword">this</span>.locale,</span><br><span class="line">Paint               <span class="keyword">this</span>.foreground,</span><br><span class="line">Paint               <span class="keyword">this</span>.background,</span><br><span class="line">List&lt;ui.Shadow&gt;     <span class="keyword">this</span>.shadows,</span><br><span class="line">TextDecoration      <span class="keyword">this</span>.decoration,</span><br><span class="line">Color               <span class="keyword">this</span>.decorationColor,</span><br><span class="line">TextDecorationStyle <span class="keyword">this</span>.decorationStyle,</span><br><span class="line">String              <span class="keyword">this</span>.debugLabel,</span><br><span class="line">String              String fontFamily,</span><br><span class="line"></span><br><span class="line"><span class="comment">//----&gt;[TextAlign]----------------</span></span><br><span class="line"><span class="keyword">enum</span> TextAlign &#123;</span><br><span class="line">  left,right,center,justify,start,end,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//----&gt;[TextOverflow]----------------</span></span><br><span class="line"><span class="keyword">enum</span> TextOverflow &#123;</span><br><span class="line">  clip,fade,ellipsis,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="5-FloatingActionButton-浮动动作按钮"><a href="#5-FloatingActionButton-浮动动作按钮" class="headerlink" title="5.FloatingActionButton--浮动动作按钮"></a>5.<code>FloatingActionButton--浮动动作按钮</code></h5><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Widget                  <span class="keyword">this</span>.child,</span><br><span class="line">String                  <span class="keyword">this</span>.tooltip,</span><br><span class="line">Color                   <span class="keyword">this</span>.foregroundColor,</span><br><span class="line">Color                   <span class="keyword">this</span>.backgroundColor,</span><br><span class="line">Object                  <span class="keyword">this</span>.heroTag = <span class="keyword">const</span> _DefaultHeroTag(),</span><br><span class="line">double                  <span class="keyword">this</span>.elevation = <span class="number">6.0</span>,</span><br><span class="line">double                  <span class="keyword">this</span>.highlightElevation = <span class="number">12.0</span>,</span><br><span class="line">VoidCallback            <span class="meta">@required</span> <span class="keyword">this</span>.onPressed,</span><br><span class="line">bool                    <span class="keyword">this</span>.mini = <span class="literal">false</span>,</span><br><span class="line">ShapeBorder             <span class="keyword">this</span>.shape = <span class="keyword">const</span> CircleBorder(),</span><br><span class="line">Clip                    <span class="keyword">this</span>.clipBehavior = Clip.none,</span><br><span class="line">MaterialTapTargetSize   <span class="keyword">this</span>.materialTapTargetSize,</span><br><span class="line">bool                    <span class="keyword">this</span>.isExtended = <span class="literal">false</span>,</span><br></pre></td></tr></table></figure><h5 id="6-Icon-图标"><a href="#6-Icon-图标" class="headerlink" title="6.Icon--图标"></a>6.<code>Icon--图标</code></h5><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">double          <span class="keyword">this</span>.size,</span><br><span class="line">Color           <span class="keyword">this</span>.color,</span><br><span class="line">String          <span class="keyword">this</span>.semanticLabel,------This label does not show <span class="keyword">in</span> the UI.</span><br><span class="line">TextDirection   <span class="keyword">this</span>.textDirection,</span><br></pre></td></tr></table></figure><h6 id="新手任务2："><a href="#新手任务2：" class="headerlink" title="新手任务2："></a>新手任务2：</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$10.png" alt=""></p><p><img src="http://photo.toly1994.com/flutter$seven_day$03$11.png" alt=""></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">body</span>: Text(</span><br><span class="line">            <span class="string">"一箫一剑平生意，负尽狂名十五年"</span>,</span><br><span class="line">            <span class="attribute">maxLines</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attribute">overflow</span>: TextOverflow.fade,</span><br><span class="line">            <span class="attribute">style</span>: TextStyle(</span><br><span class="line">                <span class="attribute">color</span>: Colors.blue,</span><br><span class="line">                <span class="attribute">fontSize</span>: <span class="number">20</span>,</span><br><span class="line">                <span class="attribute">letterSpacing</span>: <span class="number">10</span>,</span><br><span class="line">                <span class="attribute">fontWeight</span>: FontWeight.bold,</span><br><span class="line">                <span class="attribute">background</span>: Paint()..color = Colors.amberAccent),</span><br><span class="line">          ),</span><br><span class="line">          <span class="attribute">floatingActionButton</span>: FloatingActionButton(</span><br><span class="line">            <span class="attribute">backgroundColor</span>: Colors.deepOrangeAccent,</span><br><span class="line">            <span class="attribute">elevation</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attribute">highlightElevation</span>: <span class="number">24</span>,</span><br><span class="line">            <span class="attribute">onPressed</span>: () &#123;&#125;,</span><br><span class="line">            <span class="attribute">tooltip</span>: <span class="string">'Increment'</span>,</span><br><span class="line">            <span class="attribute">child</span>: Icon(Icons.add,<span class="attribute">size</span>: <span class="number">40</span>,<span class="attribute">color</span>: Colors.white,<span class="attribute">semanticLabel</span>:<span class="string">"toly"</span>),</span><br><span class="line">          ),</span><br></pre></td></tr></table></figure><hr><h4 id="三、基础控件点将台-1"><a href="#三、基础控件点将台-1" class="headerlink" title="三、基础控件点将台(1)"></a>三、基础控件点将台(1)</h4><blockquote><p>以上6张卡片是初始项目中的控件,通过新手任务基本上更加熟悉了一些<br>Flutter还有哪些控件，建议看一下Flutter中文网，罗列的挺好的，下面一起学习一下<br>(PS:看了一下，真是多如鸡毛…吓得我不知从何入手)</p></blockquote><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">所谓`打蛇打七寸,擒贼先擒王`,小兵之后再收拾  </span><br><span class="line">通过Android和html+css，我领悟到，对于界面设计者而言，布局是至关重要的,所以先看容器</span><br></pre></td></tr></table></figure><h5 id="1-Layout布局容器之Row-Column-行-列"><a href="#1-Layout布局容器之Row-Column-行-列" class="headerlink" title="1.Layout布局容器之Row+Column--行+列"></a>1.<code>Layout</code>布局容器之<code>Row+Column--行+列</code></h5><p><img src="http://photo.toly1994.com/flutter$seven_day$03$12.png" alt=""></p><hr><h6 id="1-1-Row的基础认知"><a href="#1-1-Row的基础认知" class="headerlink" title="1.1:Row的基础认知"></a>1.1:Row的基础认知</h6><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">----&gt;[源码注释第一句]-----------------------------</span></span><br><span class="line"><span class="attr">A</span> <span class="string">widget that displays its children in a horizontal array.</span></span><br><span class="line"><span class="attr">一个以水平数组的形式显示其子部件的Widget。</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">Row(&#123;</span></span><br><span class="line">    <span class="attr">Key</span> <span class="string">key,</span></span><br><span class="line">    <span class="attr">MainAxisAlignment</span> <span class="string">mainAxisAlignment = MainAxisAlignment.start,</span></span><br><span class="line">    <span class="attr">MainAxisSize</span> <span class="string">mainAxisSize = MainAxisSize.max,</span></span><br><span class="line">    <span class="attr">CrossAxisAlignment</span> <span class="string">crossAxisAlignment = CrossAxisAlignment.center,</span></span><br><span class="line">    <span class="attr">TextDirection</span> <span class="string">textDirection,</span></span><br><span class="line">    <span class="attr">VerticalDirection</span> <span class="string">verticalDirection = VerticalDirection.down,</span></span><br><span class="line">    <span class="attr">TextBaseline</span> <span class="string">textBaseline,</span></span><br><span class="line">    <span class="meta">List&lt;Widget&gt;</span> <span class="string">children = const &lt;Widget&gt;[],</span></span><br></pre></td></tr></table></figure><h6 id="1-2：基本使用"><a href="#1-2：基本使用" class="headerlink" title="1.2：基本使用"></a>1.2：基本使用</h6><blockquote><p>children看来是一个Widget数组，想想也不难理解，毕竟做大哥的，当然要有不少小弟啦<br><code>注：为了方便修改，以下代码把Scaffold的body属性值抽成变量使用</code></p></blockquote><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> row_test = Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'绝域从军计惘然，,'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'东南幽恨满词笺。'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'一箫一剑平生意，'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'负尽狂名十五年。'</span>),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$03$13.png" alt=""></p><blockquote><p>可以看出越界有提醒，感觉蛮有心的,水平排列没毛病</p></blockquote><hr><h6 id="1-3-Column：用法基本上差不多"><a href="#1-3-Column：用法基本上差不多" class="headerlink" title="1.3.Column：用法基本上差不多"></a>1.3.Column：用法基本上差不多</h6><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">----&gt;[源码注释第一句]-----------------------------</span></span><br><span class="line"> <span class="attr">A</span> <span class="string">widget that displays its children in a vertical array.</span></span><br><span class="line"><span class="attr">一个以竖直数组的形式显示其子部件的Widget。</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Column(&#123;</span></span><br><span class="line">    <span class="attr">Key</span> <span class="string">key,</span></span><br><span class="line">    <span class="attr">MainAxisAlignment</span> <span class="string">mainAxisAlignment = MainAxisAlignment.start,</span></span><br><span class="line">    <span class="attr">MainAxisSize</span> <span class="string">mainAxisSize = MainAxisSize.max,</span></span><br><span class="line">    <span class="attr">CrossAxisAlignment</span> <span class="string">crossAxisAlignment = CrossAxisAlignment.center,</span></span><br><span class="line">    <span class="attr">TextDirection</span> <span class="string">textDirection,</span></span><br><span class="line">    <span class="attr">VerticalDirection</span> <span class="string">verticalDirection = VerticalDirection.down,</span></span><br><span class="line">    <span class="attr">TextBaseline</span> <span class="string">textBaseline,</span></span><br><span class="line">    <span class="meta">List&lt;Widget&gt;</span> <span class="string">children = const &lt;Widget&gt;[],</span></span><br></pre></td></tr></table></figure><h6 id="1-4-Column基本使用"><a href="#1-4-Column基本使用" class="headerlink" title="1.4.Column基本使用"></a>1.4.Column基本使用</h6><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> row_column = Column(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'绝域从军计惘然，,'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'东南幽恨满词笺。'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'一箫一剑平生意，'</span>),</span><br><span class="line">    <span class="built_in">Text</span>(<span class="string">'负尽狂名十五年。'</span>),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$03$14.png" alt=""></p><hr><h6 id="恭喜完成成就：布局菜鸟—奖励卡片："><a href="#恭喜完成成就：布局菜鸟—奖励卡片：" class="headerlink" title="恭喜完成成就：布局菜鸟—奖励卡片："></a>恭喜完成成就：<code>布局菜鸟</code>—奖励卡片：</h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$15.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$16.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$17.png" alt=""></td></tr></tbody></table><blockquote><p>恭喜解锁新卡片：Expanded，快去用用吧<br>Expanded意思是：<code>使…伸展</code>,看到下面的图,你应该就会明白</p></blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">var row_test = Row(</span><br><span class="line">  children: &lt;Widget&gt;[</span><br><span class="line">    Expanded(</span><br><span class="line">      child<span class="symbol">:Text</span>('绝域从军计惘然，'),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child<span class="symbol">:Text</span>('东南幽恨满词笺。'),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child<span class="symbol">:Text</span>('一箫一剑平生意，'),</span><br><span class="line">    ),</span><br><span class="line">    Expanded(</span><br><span class="line">      child<span class="symbol">:Text</span>('负尽狂名十五年。'),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$03$18.png" alt=""></p><hr><h5 id="2-Container-容器"><a href="#2-Container-容器" class="headerlink" title="2.Container--容器"></a>2.<code>Container--容器</code></h5><blockquote><p>可以理解为Android中的View，更像html中的div<br>Container是一个没有状态的控件</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$19.png" alt=""></p><hr><h6 id="2-1：源码小窥"><a href="#2-1：源码小窥" class="headerlink" title="2.1：源码小窥"></a>2.1：源码小窥</h6><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[源码注释第一句]-----------------------------</span><br><span class="line">A convenience widget that combines common painting, positioning, and sizing widgets.</span><br><span class="line">一个方便的widget，它组合了常见的painting、positioning和sizing 控件。</span><br><span class="line"></span><br><span class="line">Color                   color,</span><br><span class="line">double                  width,</span><br><span class="line">double                  height,</span><br><span class="line">Widget                  <span class="keyword">this</span>.child,</span><br><span class="line">EdgeInsetsGeometry      <span class="keyword">this</span>.margin,</span><br><span class="line">EdgeInsetsGeometry      <span class="keyword">this</span>.padding,</span><br><span class="line">AlignmentGeometry       <span class="keyword">this</span>.alignment,</span><br><span class="line">Decoration              Decoration decoration,</span><br><span class="line">Decoration              <span class="keyword">this</span>.foregroundDecoration,</span><br><span class="line">BoxConstraints          BoxConstraints constraints,</span><br><span class="line">Matrix4                 <span class="keyword">this</span>.transform,</span><br></pre></td></tr></table></figure><hr><h6 id="2-2：简单使用："><a href="#2-2：简单使用：" class="headerlink" title="2.2：简单使用："></a>2.2：简单使用：</h6><blockquote><p>[插曲]这里分享一个点：<code>当看到一个新的东西应该怎么办?</code></p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">比如`margin`,看到`<span class="type">EdgeInsetsGeometry</span>`我的心情是一脸懵<span class="type">X</span>,不应该是数字吗?</span><br><span class="line">进源码：`<span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">EdgeInsetsGeometry</span> </span>&#123;`,抽象的，找他儿子去，</span><br><span class="line"><span class="type">AndroidStudio</span>中按`<span class="type">Ctrl</span>+<span class="type">H</span>`可以查看继承树，然后就看到了<span class="type">EdgeInsets</span>.fromLTRB</span><br><span class="line">这样<span class="type">Flutter</span>的margin就和你的知识库中的margin进行了连接，你就会用了</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EdgeInsets</span> <span class="keyword">extends</span> <span class="title">EdgeInsetsGeometry</span> </span>&#123;</span><br><span class="line">  const <span class="type">EdgeInsets</span>.fromLTRB(<span class="keyword">this</span>.left, <span class="keyword">this</span>.top, <span class="keyword">this</span>.right, <span class="keyword">this</span>.bottom);</span><br><span class="line">  const <span class="type">EdgeInsets</span>.all(double value)</span><br><span class="line">      : left = value, top = value, right = value, bottom = value;</span><br><span class="line"></span><br><span class="line">新事物往往都与旧事物有联系,学习新事物最好快速找到它与你知识库中旧事物的联系,</span><br><span class="line">联系的多少取决于你知识库中内容的多少，连接得越多，你会越快或越能掌握旧事物</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">container_test</span> <span class="string">=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Color.fromARGB(100,</span> <span class="number">81</span><span class="string">,</span> <span class="number">211</span><span class="string">,</span> <span class="number">253</span><span class="string">),</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">200</span><span class="string">,</span></span><br><span class="line">  <span class="attr">child:</span> <span class="string">Text("张风捷特烈"),</span></span><br><span class="line">  <span class="attr">margin:</span> <span class="string">EdgeInsets.fromLTRB(5,</span> <span class="number">10</span><span class="string">,</span> <span class="number">15</span><span class="string">,</span> <span class="number">20</span><span class="string">),</span></span><br><span class="line">  <span class="attr">padding:</span>  <span class="string">EdgeInsets.all(40),</span></span><br><span class="line"><span class="string">);</span></span><br></pre></td></tr></table></figure><blockquote><p>padding和margin简称pm,左图是上面代码没有pm时，右图是有pm时</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$20.png" alt=""></p><hr><h6 id="恭喜达成成就：Container使用者–卡牌奖励："><a href="#恭喜达成成就：Container使用者–卡牌奖励：" class="headerlink" title="恭喜达成成就：Container使用者–卡牌奖励："></a>恭喜达成成就：<code>Container使用者</code>–卡牌奖励：</h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$21.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$22.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$23.png" alt=""></td></tr></tbody></table><blockquote><p>NPC:恭喜解锁两张辅助卡<code>Padding</code>和<code>Center</code>,快来测试一下吧<br>这两个没什么好说的，顾图思义，看图吧</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">padding_test</span> <span class="string">=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Color.fromARGB(100,</span> <span class="number">81</span><span class="string">,</span> <span class="number">211</span><span class="string">,</span> <span class="number">253</span><span class="string">),</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">150</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">250</span><span class="string">,</span></span><br><span class="line">  <span class="attr">child:</span> <span class="string">Padding(</span></span><br><span class="line">    <span class="attr">padding:</span> <span class="string">EdgeInsets.all(10),</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">Text("张风捷特烈"),</span></span><br><span class="line">  <span class="string">),</span></span><br><span class="line"><span class="string">);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">var</span> <span class="string">center_test</span> <span class="string">=</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Color.fromARGB(100,</span> <span class="number">81</span><span class="string">,</span> <span class="number">211</span><span class="string">,</span> <span class="number">253</span><span class="string">),</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">150</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">250</span><span class="string">,</span></span><br><span class="line">  <span class="attr">child:</span> <span class="string">Center(</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">Text("张风捷特烈"),</span></span><br><span class="line">  <span class="string">),</span></span><br><span class="line"><span class="string">);</span></span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$03$24.png" alt=""></p><hr><h5 id="3-Stack-堆叠"><a href="#3-Stack-堆叠" class="headerlink" title="3.Stack -- 堆叠"></a>3.<code>Stack -- 堆叠</code></h5><blockquote><p>第一反应:栈?有道了一下，有堆叠的意思</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[源码注释第一句]-----------------------------</span><br><span class="line">A widget that positions its children relative to the edges of its box.</span><br><span class="line">一个相对于它的框的边缘来定位它的子部件的Widget。</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.alignment = AlignmentDirectional.topStart,</span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="keyword">this</span>.fit = StackFit.loose,</span><br><span class="line">    <span class="keyword">this</span>.overflow = Overflow.clip,</span><br><span class="line">    List&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br></pre></td></tr></table></figure><hr><h6 id="触发新手任务3，并触发局部Widget树，系统赠送卡牌："><a href="#触发新手任务3，并触发局部Widget树，系统赠送卡牌：" class="headerlink" title="触发新手任务3，并触发局部Widget树，系统赠送卡牌："></a>触发新手任务3，并触发局部Widget树，系统赠送卡牌：</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$25.png" alt=""></p><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$26.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$27.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$28.png" alt=""></td></tr></tbody></table><blockquote><p>请完成下面布局：</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$29.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">stack_test</span> <span class="string">=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Color.fromARGB(100,</span> <span class="number">81</span><span class="string">,</span> <span class="number">211</span><span class="string">,</span> <span class="number">253</span><span class="string">),</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">150</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">250</span><span class="string">,</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">Stack(</span></span><br><span class="line">      <span class="attr">alignment:</span> <span class="string">Alignment.centerLeft,</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Text('绝域从军计惘然，,'),</span></span><br><span class="line">        <span class="string">Align(</span></span><br><span class="line">          <span class="attr">alignment:</span> <span class="string">Alignment.topRight,</span></span><br><span class="line">          <span class="attr">widthFactor:</span> <span class="number">1.5</span><span class="string">,</span></span><br><span class="line">          <span class="attr">child:</span> <span class="string">Card(</span></span><br><span class="line">              <span class="attr">elevation:</span> <span class="number">10</span><span class="string">,</span> <span class="attr">color:</span> <span class="string">Color(0xffffffff),</span> <span class="attr">child:</span> <span class="string">Text('东南幽恨满词笺。')),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">Text('一箫一剑平生意，'),</span></span><br><span class="line">        <span class="string">Text('负尽狂名十五年。'),</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">));</span></span><br></pre></td></tr></table></figure><blockquote><p>现在对Stack有点感觉了吧，它像FramLayout一样会叠合控件,<br>并且alignment还可以确定Stack自身相对于老爸的位置<br>Align也有alignment,不过能有一个孩子，Card我最喜欢了<br>这里mark一下Card里的<code>ShapeBorder shape</code>,源码粗略看了一下，可能挺好玩，今天主看控件</p></blockquote><hr><h5 id="4-IndexedStack-定索引显示"><a href="#4-IndexedStack-定索引显示" class="headerlink" title="4.IndexedStack--定索引显示"></a>4.<code>IndexedStack--定索引显示</code></h5><blockquote><p>按照索引来显示堆叠容器中的控件，挺好玩的</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$30.png" alt=""></p><p><img src="http://photo.toly1994.com/flutter$seven_day$03$31.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">index_stack_test</span> <span class="string">=</span> <span class="string">Container(</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">Color.fromARGB(100,</span> <span class="number">81</span><span class="string">,</span> <span class="number">211</span><span class="string">,</span> <span class="number">253</span><span class="string">),</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">150</span><span class="string">,</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">250</span><span class="string">,</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">IndexedStack(</span></span><br><span class="line">      <span class="string">index:3,</span></span><br><span class="line">      <span class="attr">alignment:</span> <span class="string">Alignment.centerLeft,</span></span><br><span class="line">      <span class="attr">children:</span> <span class="string">&lt;Widget&gt;[</span></span><br><span class="line">        <span class="string">Text('绝域从军计惘然，'),</span></span><br><span class="line">        <span class="string">Align(</span></span><br><span class="line">          <span class="attr">alignment:</span> <span class="string">Alignment.topRight,</span></span><br><span class="line">          <span class="attr">widthFactor:</span> <span class="number">1.5</span><span class="string">,</span></span><br><span class="line">          <span class="attr">child:</span> <span class="string">Card(</span></span><br><span class="line">              <span class="attr">elevation:</span> <span class="number">10</span><span class="string">,</span> <span class="attr">color:</span> <span class="string">Color(0xffffffff),</span> <span class="attr">child:</span> <span class="string">Text('东南幽恨满词笺。')),</span></span><br><span class="line">        <span class="string">),</span></span><br><span class="line">        <span class="string">Text('一箫一剑平生意，'),</span></span><br><span class="line">        <span class="string">Text('负尽狂名十五年。'),</span></span><br><span class="line">      <span class="string">],</span></span><br><span class="line">    <span class="string">));</span></span><br></pre></td></tr></table></figure><hr><h5 id="5-Transform-变换"><a href="#5-Transform-变换" class="headerlink" title="5.Transform--变换"></a>5.<code>Transform--变换</code></h5><blockquote><p>transform属性的Matrix4有机会肯定好好分析分析，mark一下<br>Matrix4.rotationZ传入的是弧度制的度数，佩服佩服</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Transform(</span><br><span class="line">    origin: Offset(<span class="number">0</span>, <span class="number">150</span>),</span><br><span class="line">    transform: Matrix4.rotationZ(<span class="number">3.1415</span> / <span class="number">4</span>),</span><br><span class="line">    child: <span class="comment">//同上面的Container，挺长的，不贴了</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p><img src="http://photo.toly1994.com/flutter$seven_day$03$32.png" alt=""></p><hr><h5 id="6-Offstage-显隐控制"><a href="#6-Offstage-显隐控制" class="headerlink" title="6.Offstage--显隐控制"></a>6.<code>Offstage--显隐控制</code></h5><blockquote><p>把<code>负尽狂名十五年</code>用Offstage包裹一下，offstage为true–隐藏，为false–显示<br>感觉应该挺好用，简洁，明了，人狠话不多。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Offstage</span>(</span><br><span class="line">    <span class="attribute">offstage</span>: false,</span><br><span class="line">    <span class="attribute">child</span>: Text(<span class="string">'负尽狂名十五年。'</span>),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h6 id="恭喜获得成就：布局小新手-：奖励卡牌："><a href="#恭喜获得成就：布局小新手-：奖励卡牌：" class="headerlink" title="恭喜获得成就：布局小新手 ：奖励卡牌："></a>恭喜获得成就：<code>布局小新手</code> ：奖励卡牌：</h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$33.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$34.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$35.png" alt=""></td></tr></tbody></table><hr><h4 id="三、基础控件点将台之–三大战力"><a href="#三、基础控件点将台之–三大战力" class="headerlink" title="三、基础控件点将台之–三大战力"></a>三、基础控件点将台之–三大战力</h4><blockquote><p>隐藏剧情触发：<br>NPC：传说有三条恶龙盘踞在布局深处，为祸人间，勇士们，准备好了吗?</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$36.png" alt=""></p><h5 id="1-表格–Table"><a href="#1-表格–Table" class="headerlink" title="1.表格–Table"></a>1.表格–Table</h5><h6 id="1-1：属性一览"><a href="#1-1：属性一览" class="headerlink" title="1.1：属性一览"></a>1.1：属性一览</h6><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.children = <span class="keyword">const</span> &lt;TableRow&gt;[],</span><br><span class="line"><span class="keyword">this</span>.columnWidths,</span><br><span class="line"><span class="keyword">this</span>.defaultColumnWidth = <span class="keyword">const</span> FlexColumnWidth(<span class="number">1.0</span>),</span><br><span class="line"><span class="keyword">this</span>.textDirection,</span><br><span class="line"><span class="keyword">this</span>.border,</span><br><span class="line"><span class="keyword">this</span>.defaultVerticalAlignment = TableCellVerticalAlignment.top,</span><br><span class="line"><span class="keyword">this</span>.textBaseline,</span><br></pre></td></tr></table></figure><hr><h6 id="1-2：新手任务4：完成下面表格"><a href="#1-2：新手任务4：完成下面表格" class="headerlink" title="1.2：新手任务4：完成下面表格"></a>1.2：新手任务4：完成下面表格</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$37.png" alt=""></p><blockquote><p>代码实现：<br><code>columnWidths</code>:可以指定每列的宽度<br><code>border</code>:边线的样式<br><code>children</code>:通过<code>TableRow</code>来显示一行  </p></blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">var table_test = Table(</span><br><span class="line">  columnWidths: const &lt;int, TableColumnWidth&gt;&#123;</span><br><span class="line">    <span class="number">0</span>: FixedColumnWidth(<span class="number">60.0</span>),</span><br><span class="line">    <span class="number">1</span>: FixedColumnWidth(<span class="number">100.0</span>),</span><br><span class="line">    <span class="number">2</span>: FixedColumnWidth(<span class="number">100.0</span>),</span><br><span class="line">    <span class="number">3</span>: FixedColumnWidth(<span class="number">80.0</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  defaultVerticalAlignment: TableCellVerticalAlignment.middle,</span><br><span class="line">  border:</span><br><span class="line">      TableBorder.all(<span class="name">color</span>: Color(<span class="number">0</span>xff16DAF1), width: <span class="number">1.0</span>, style: BorderStyle.solid),</span><br><span class="line">  children: const &lt;TableRow&gt;[</span><br><span class="line">    TableRow(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        Center(<span class="name">child</span>: Text('姓名')),</span><br><span class="line">        Center(<span class="name">child</span>: Text('年龄')),</span><br><span class="line">        Center(<span class="name">child</span>: Text('称号')),</span><br><span class="line">        Center(<span class="name">child</span>: Text('武器')),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">    TableRow(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        Text('捷特'),</span><br><span class="line">        Text('<span class="number">24</span>'),</span><br><span class="line">        Text('风神'),</span><br><span class="line">        Text('黑风剑'),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">    TableRow(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        Text('巫缨'),</span><br><span class="line">        Text('<span class="number">23</span>'),</span><br><span class="line">        Text('百里巫缨'),</span><br><span class="line">        Text('百里弓'),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">    TableRow(</span><br><span class="line">      children: &lt;Widget&gt;[</span><br><span class="line">        Text('龙少'),</span><br><span class="line">        Text('<span class="number">23</span>'),</span><br><span class="line">        Text('控尊'),</span><br><span class="line">        Text('控尊戒'),</span><br><span class="line">      ],</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h5 id="2-流动容器-–Flow："><a href="#2-流动容器-–Flow：" class="headerlink" title="2.流动容器 –Flow："></a>2.流动容器 –Flow：</h5><h6 id="2-1：属性一览"><a href="#2-1：属性一览" class="headerlink" title="2.1：属性一览"></a>2.1：属性一览</h6><blockquote><p>属性很简洁,但是：FlowDelegate够熬一碗粥的</p></blockquote><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FlowDelegate <span class="keyword">@required</span> <span class="keyword">this</span>.<span class="built_in">delegate</span>,</span><br><span class="line">List&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br></pre></td></tr></table></figure><hr><h6 id="2-2：新手任务5：用完Flow成下面布局"><a href="#2-2：新手任务5：用完Flow成下面布局" class="headerlink" title="2.2：新手任务5：用完Flow成下面布局"></a>2.2：新手任务5：用完Flow成下面布局</h6><blockquote><p>简单分析一下：随机颜色，随机长度，到尾部不够就换行</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$38.png" alt=""></p><blockquote><p>代码实现：从网上找了一个<code>FlowDelegate</code>的实现类<br>核心就是根据位置可以自己绘制孩子的位置(吐槽:源码了竟然没有实现类,给一个也好啊…)</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MarginFlowDelegate</span> <span class="keyword">extends</span> <span class="title">FlowDelegate</span> </span>&#123;</span><br><span class="line">  <span class="type">EdgeInsets</span> _margin = <span class="type">EdgeInsets</span>.zero;<span class="comment">//成员变量_margin</span></span><br><span class="line">  <span class="type">MarginFlowDelegate</span>(<span class="keyword">this</span>._margin); <span class="comment">//构造函数</span></span><br><span class="line">  <span class="meta">@override</span><span class="comment">//绘制孩子的方法</span></span><br><span class="line">  void paintChildren(<span class="type">FlowPaintingContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">var</span> offsetX = _margin.left;</span><br><span class="line">    <span class="keyword">var</span> offsetY = _margin.top;</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; context.childCount; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> w = context.getChildSize(i).width + offsetX + _margin.right;</span><br><span class="line">      <span class="keyword">if</span> (w &lt; context.size.width) &#123;</span><br><span class="line">        context.paintChild(i, transform: <span class="keyword">new</span> <span class="type">Matrix4</span>.translationValues(offsetX, offsetY, <span class="number">0.0</span>));</span><br><span class="line">        offsetX = w + _margin.left;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        offsetX = _margin.left;</span><br><span class="line">        offsetY += context.getChildSize(i).height + _margin.top + _margin.bottom;</span><br><span class="line">        context.paintChild(i,transform: <span class="keyword">new</span> <span class="type">Matrix4</span>.translationValues(offsetX, offsetY, <span class="number">0.0</span>));</span><br><span class="line">        offsetX += context.getChildSize(i).width + _margin.left + _margin.right;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>动态生成Widget数组(可别傻傻的cv,60个Container)</p></blockquote><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">formColorList(int count) &#123;</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">random</span> = <span class="built_in">new</span> Random();</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">li</span> = &lt;Widget&gt;[];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    <span class="built_in">li</span>.add(<span class="built_in">new</span> Container(</span><br><span class="line">      <span class="built_in">width</span>: <span class="number">100</span> * (<span class="built_in">random</span>.nextDouble() + <span class="number">0.3</span>),</span><br><span class="line">      <span class="built_in">height</span>: <span class="number">30</span>,</span><br><span class="line">      <span class="built_in">color</span>: randomRGB(),</span><br><span class="line">    ));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">li</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>用起来倒是简单：</p></blockquote><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var flow_test = Flow(</span><br><span class="line">    delegate: MarginFlowDelegate(<span class="name">EdgeInsets</span>.all(<span class="number">5</span>)),</span><br><span class="line">    children: formColorList(<span class="number">60</span>))<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-包裹–Warp"><a href="#3-包裹–Warp" class="headerlink" title="3.包裹–Warp"></a>3.包裹–Warp</h5><h6 id="3-1：简单认识："><a href="#3-1：简单认识：" class="headerlink" title="3.1：简单认识："></a>3.1：简单认识：</h6><blockquote><p>这东西和css的flex有九分相似，还好我flex布局玩的挺好：<a href="https://juejin.im/post/5c0caf33e51d455b3d3dc567" target="_blank" rel="noopener">有兴趣的可看这里</a><br>Flow用起来麻烦很多，但可控制，灵活性更好，如果不是什么逆天改命的布局，Warp应该够了</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Wrap(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="keyword">this</span>.direction = Axis.horizontal,</span><br><span class="line">  <span class="keyword">this</span>.alignment = WrapAlignment.start,</span><br><span class="line">  <span class="keyword">this</span>.spacing = <span class="number">0.0</span>,</span><br><span class="line">  <span class="keyword">this</span>.runAlignment = WrapAlignment.start,</span><br><span class="line">  <span class="keyword">this</span>.runSpacing = <span class="number">0.0</span>,</span><br><span class="line">  <span class="keyword">this</span>.crossAxisAlignment = WrapCrossAlignment.start,</span><br><span class="line">  <span class="keyword">this</span>.textDirection,</span><br><span class="line">  <span class="keyword">this</span>.verticalDirection = VerticalDirection.down,</span><br><span class="line">  List&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h6 id="direction"><a href="#direction" class="headerlink" title="direction"></a>direction</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$39.png" alt=""></p><hr><h6 id="3-2：新手任务6-1"><a href="#3-2：新手任务6-1" class="headerlink" title="3.2：新手任务6-1"></a>3.2：新手任务6-1</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$40.png" alt=""></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var wrap_test = Wrap(</span><br><span class="line"><span class="symbol">    spacing:</span> <span class="number">8.0</span>, <span class="comment">// 列间距</span></span><br><span class="line"><span class="symbol">    runSpacing:</span> <span class="number">4.0</span>, <span class="comment">//行间距</span></span><br><span class="line"><span class="symbol">    direction:</span>Axis.vertical ,</span><br><span class="line"><span class="symbol">    crossAxisAlignment:</span>WrapCrossAlignment.center,</span><br><span class="line"><span class="symbol">    children:</span> formColorList(<span class="number">50</span>));</span><br></pre></td></tr></table></figure><hr><h6 id="3-3：新手任务6-2"><a href="#3-3：新手任务6-2" class="headerlink" title="3.3：新手任务6-2"></a>3.3：新手任务6-2</h6><p><img src="http://photo.toly1994.com/flutter$seven_day$03$41.png" alt=""></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var wrap_test = Wrap(</span><br><span class="line"><span class="symbol">    spacing:</span> <span class="number">8.0</span>, <span class="comment">// 列间距</span></span><br><span class="line"><span class="symbol">    runSpacing:</span> <span class="number">4.0</span>, <span class="comment">//行间距</span></span><br><span class="line"><span class="symbol">    direction:</span>Axis.horizontal ,</span><br><span class="line"><span class="symbol">    alignment:</span>WrapAlignment.spaceBetween,</span><br><span class="line"><span class="symbol">    children:</span> formColorList(<span class="number">50</span>));</span><br></pre></td></tr></table></figure><h6 id="duang-三大战力倒下，恭喜获得称号：布局勇士，收获三张传说级卡片："><a href="#duang-三大战力倒下，恭喜获得称号：布局勇士，收获三张传说级卡片：" class="headerlink" title="duang,三大战力倒下，恭喜获得称号：布局勇士，收获三张传说级卡片："></a>duang,三大战力倒下，恭喜获得称号：<code>布局勇士</code>，收获三张传说级卡片：</h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$42.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$43.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$44.png" alt=""></td></tr></tbody></table><hr><h4 id="三、基础控件点将台之–列表"><a href="#三、基础控件点将台之–列表" class="headerlink" title="三、基础控件点将台之–列表"></a>三、基础控件点将台之–列表</h4><blockquote><p>NPC:好吧，我编不下去了…大家加油!</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$45.png" alt=""></p><hr><h5 id="1-老伙伴：ListView"><a href="#1-老伙伴：ListView" class="headerlink" title="1.老伙伴：ListView"></a>1.老伙伴：ListView</h5><blockquote><p>这里先简单看一下效果，明天根据例子来详细分析具体用法<br>ListView,单独可以用，传入一个Widget数组，批量生产ListView.builder简洁些</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">ListView</span>.</span></span>builder(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  Axis scrollDirection = <span class="module-access"><span class="module"><span class="identifier">Axis</span>.</span></span>vertical,</span><br><span class="line">  <span class="built_in">bool</span> reverse = <span class="literal">false</span>,</span><br><span class="line">  ScrollController controller,</span><br><span class="line">  <span class="built_in">bool</span> primary,</span><br><span class="line">  ScrollPhysics physics,</span><br><span class="line">  <span class="built_in">bool</span> shrinkWrap = <span class="literal">false</span>,</span><br><span class="line">  EdgeInsetsGeometry padding,</span><br><span class="line">  this.itemExtent,</span><br><span class="line">  @required IndexedWidgetBuilder itemBuilder,</span><br><span class="line">  <span class="built_in">int</span> itemCount,</span><br><span class="line">  <span class="built_in">bool</span> addAutomaticKeepAlives = <span class="literal">true</span>,</span><br><span class="line">  <span class="built_in">bool</span> addRepaintBoundaries = <span class="literal">true</span>,</span><br><span class="line">  <span class="built_in">bool</span> addSemanticIndexes = <span class="literal">true</span>,</span><br><span class="line">  double cacheExtent,</span><br><span class="line">  <span class="built_in">int</span> semanticChildCount,</span><br></pre></td></tr></table></figure><hr><table><thead><tr><th>竖直</th><th>水平</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$46.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$47.png" alt=""></td></tr></tbody></table><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">//竖直</span></span><br><span class="line"><span class="attr">var</span> <span class="string">list_view_test = ListView.builder(</span></span><br><span class="line">  <span class="attr">itemCount</span>: <span class="string">20,</span></span><br><span class="line">  <span class="attr">padding</span>: <span class="string">EdgeInsets.all(8.0),</span></span><br><span class="line">  <span class="attr">itemExtent</span>: <span class="string">60.0,</span></span><br><span class="line">  <span class="attr">itemBuilder</span>: <span class="string">(BuildContext context, int index) &#123;</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">Card(</span></span><br><span class="line">      <span class="attr">child</span>: <span class="string">Center(child: Text('toly $index')),</span></span><br><span class="line">    <span class="attr">);</span></span><br><span class="line">  <span class="attr">&#125;,</span></span><br><span class="line"><span class="attr">);</span></span><br><span class="line"></span><br><span class="line"><span class="attr">//水平</span></span><br><span class="line"><span class="attr">var</span> <span class="string">list_view_test = ListView.builder(</span></span><br><span class="line">  <span class="attr">itemCount</span>: <span class="string">20,</span></span><br><span class="line">  <span class="attr">padding</span>: <span class="string">EdgeInsets.all(8.0),</span></span><br><span class="line">  <span class="attr">scrollDirection</span>:<span class="string">Axis.horizontal,</span></span><br><span class="line">  <span class="attr">itemExtent</span>: <span class="string">60.0,</span></span><br><span class="line">  <span class="attr">itemBuilder</span>: <span class="string">(BuildContext context, int index) &#123;</span></span><br><span class="line">    <span class="attr">return</span> <span class="string">Card(</span></span><br><span class="line">      <span class="attr">child</span>: <span class="string">Center(child: Text('toly $index')),</span></span><br><span class="line">    <span class="attr">);</span></span><br><span class="line">  <span class="attr">&#125;,</span></span><br><span class="line"><span class="attr">);</span></span><br></pre></td></tr></table></figure><hr><h5 id="2–老伙伴：GridView"><a href="#2–老伙伴：GridView" class="headerlink" title="2–老伙伴：GridView"></a>2–老伙伴：GridView</h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GridView.count(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    Axis scrollDirection = Axis.vertical,</span><br><span class="line">    <span class="built_in">bool</span> reverse = <span class="literal">false</span>,</span><br><span class="line">    ScrollController controller,</span><br><span class="line">    <span class="built_in">bool</span> primary,</span><br><span class="line">    ScrollPhysics physics,</span><br><span class="line">    <span class="built_in">bool</span> shrinkWrap = <span class="literal">false</span>,</span><br><span class="line">    EdgeInsetsGeometry padding,</span><br><span class="line">    @required <span class="built_in">int</span> crossAxisCount,</span><br><span class="line">    <span class="built_in">double</span> mainAxisSpacing = <span class="number">0.0</span>,</span><br><span class="line">    <span class="built_in">double</span> crossAxisSpacing = <span class="number">0.0</span>,</span><br><span class="line">    <span class="built_in">double</span> childAspectRatio = <span class="number">1.0</span>,</span><br><span class="line">    <span class="built_in">bool</span> addAutomaticKeepAlives = <span class="literal">true</span>,</span><br><span class="line">    <span class="built_in">bool</span> addRepaintBoundaries = <span class="literal">true</span>,</span><br><span class="line">    <span class="built_in">bool</span> addSemanticIndexes = <span class="literal">true</span>,</span><br><span class="line">    <span class="built_in">double</span> cacheExtent,</span><br><span class="line">    List&lt;Widget&gt; children = <span class="keyword">const</span> &lt;Widget&gt;[],</span><br><span class="line">    <span class="built_in">int</span> semanticChildCount,</span><br></pre></td></tr></table></figure><hr><table><thead><tr><th>水平GridView</th><th>竖直GridView</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$48.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$49.png" alt=""></td></tr></tbody></table><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//竖直GridView</span></span><br><span class="line"><span class="keyword">var</span> grid_view_test = GridView.<span class="keyword">count</span>(</span><br><span class="line">  crossAxisCount: 4,</span><br><span class="line">  children: <span class="keyword">List</span>.<span class="keyword">generate</span>(</span><br><span class="line">    100,</span><br><span class="line">    (index) &#123;</span><br><span class="line">      <span class="keyword">return</span>  Card(</span><br><span class="line">        child: Center(child: Text('toly <span class="variable">$index</span>')),</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">  ),</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//水平GridView</span></span><br><span class="line"><span class="keyword">var</span> grid_view_test = GridView.<span class="keyword">count</span>(</span><br><span class="line">  crossAxisCount: 4,</span><br><span class="line">  scrollDirection:Axis.horizontal,</span><br><span class="line">  children: <span class="keyword">List</span>.<span class="keyword">generate</span>(</span><br><span class="line">    100,</span><br><span class="line">    (index) &#123;</span><br><span class="line">      <span class="keyword">return</span>  Card(</span><br><span class="line">        child: Center(child: Text('toly <span class="variable">$index</span>')),</span><br><span class="line">      );</span><br><span class="line">    &#125;,</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h5 id="3-轴列容器–ListBody-我自己取的名字"><a href="#3-轴列容器–ListBody-我自己取的名字" class="headerlink" title="3.轴列容器–ListBody(我自己取的名字)"></a>3.轴列容器–ListBody(我自己取的名字)</h5><blockquote><p>好吧，被它的名字骗了，和ListView并没有太大的关系，也就是个多孩子的容器<br>优点在于在指定轴上尺寸正常，另一轴上会被拉伸，见图：</p></blockquote><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">A widget <span class="keyword">that</span> arranges <span class="keyword">its</span> children sequentially along a <span class="keyword">given</span> axis,</span><br><span class="line">forcing them <span class="keyword">to</span> <span class="keyword">the</span> dimension <span class="keyword">of</span> <span class="keyword">the</span> parent <span class="keyword">in</span> <span class="keyword">the</span> other axis.</span><br><span class="line">一个widget，它按照给定的轴顺序排列它的子部件，并迫使它们位于另一个轴上的父轴的维度。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ListBody(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    this.mainAxis = Axis.vertical,</span><br><span class="line">    this.<span class="built_in">reverse</span> = <span class="literal">false</span>,</span><br><span class="line">    List&lt;Widget&gt; children = const &lt;Widget&gt;[],</span><br></pre></td></tr></table></figure><hr><table><thead><tr><th>水平定</th><th>竖直定</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$50.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$51.png" alt=""></td></tr></tbody></table><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//竖直定</span></span><br><span class="line">var list_body_test = Column(</span><br><span class="line"><span class="symbol">  children:</span> <span class="params">&lt;Widget&gt;</span>[</span><br><span class="line">    ListBody(</span><br><span class="line"><span class="symbol">      mainAxis:</span> Axis.vertical,</span><br><span class="line"><span class="symbol">      reverse:</span> false,</span><br><span class="line"><span class="symbol">      children:</span> formColorList(<span class="number">5</span>)</span><br><span class="line">    )],</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//水平定</span></span><br><span class="line">var list_body_test = Row(</span><br><span class="line"><span class="symbol">  children:</span> <span class="params">&lt;Widget&gt;</span>[</span><br><span class="line">    ListBody(</span><br><span class="line"><span class="symbol">      mainAxis:</span> Axis.horizontal,</span><br><span class="line"><span class="symbol">      reverse:</span> false,</span><br><span class="line"><span class="symbol">      children:</span> formColorList(<span class="number">5</span>)</span><br><span class="line">    )],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h6 id="好了，又到三局一度的发卡时间了"><a href="#好了，又到三局一度的发卡时间了" class="headerlink" title="好了，又到三局一度的发卡时间了"></a>好了，又到三局一度的发卡时间了</h6><blockquote><p>未精炼的传说级卡片，更多属性加成，战士们，去精炼吧</p></blockquote><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$52.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$53.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$54.png" alt=""></td></tr></tbody></table><hr><h4 id="四、容器扫个尾："><a href="#四、容器扫个尾：" class="headerlink" title="四、容器扫个尾："></a>四、容器扫个尾：</h4><h5 id="1-Baseline"><a href="#1-Baseline" class="headerlink" title="1.Baseline"></a>1.Baseline</h5><blockquote><p>将文字按照基线对齐(因为比较好看)–<code>baseline</code>越大，距离顶端越远</p></blockquote><p><img src="http://photo.toly1994.com/flutter$seven_day$03$55.png" alt=""></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Baseline(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="meta">@required</span> <span class="keyword">this</span>.baseline,</span><br><span class="line">  <span class="meta">@required</span> <span class="keyword">this</span>.baselineType,</span><br><span class="line">  Widget child</span><br></pre></td></tr></table></figure><hr><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">formTextList(int count) &#123;</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">random</span> = <span class="built_in">new</span> Random();</span><br><span class="line">  <span class="built_in">var</span> <span class="built_in">li</span> = &lt;Widget&gt;[];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    <span class="built_in">li</span>.add(<span class="built_in">new</span> Baseline(</span><br><span class="line">      baselineType: TextBaseline.<span class="built_in">alphabetic</span>,</span><br><span class="line">      child: <span class="built_in">new</span> Text('Toly',</span><br><span class="line">        <span class="built_in">style</span>: <span class="built_in">new</span> TextStyle(</span><br><span class="line">          fontSize: <span class="number">20.0</span> + <span class="built_in">random</span>.nextInt(<span class="number">40</span>),</span><br><span class="line">          textBaseline: TextBaseline.<span class="built_in">alphabetic</span>,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      baseline: <span class="number">80</span>,</span><br><span class="line">    ));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> <span class="built_in">li</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">var</span> base_line_test = <span class="built_in">new</span> Row(</span><br><span class="line">  children: formTextList(<span class="number">5</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><hr><h5 id="2-FractionallySizedBox"><a href="#2-FractionallySizedBox" class="headerlink" title="2.FractionallySizedBox"></a>2.FractionallySizedBox</h5><blockquote><p>这个挺有意思，儿子随爷爷，父亲(FractionallySizedBox)中间倒把手<br>可以实现爷爷和孙子之间的尺寸比例联系</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> FractionallySizedBox(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">  <span class="keyword">this</span>.widthFactor,</span><br><span class="line">  <span class="keyword">this</span>.heightFactor,</span><br><span class="line">  Widget child,</span><br></pre></td></tr></table></figure><hr><p><img src="http://photo.toly1994.com/flutter$seven_day$03$56.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">fsb_test</span> <span class="string">=</span> <span class="string">new</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">Colors.blue,</span></span><br><span class="line">  <span class="attr">height:</span> <span class="number">150.0</span><span class="string">,</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">150.0</span><span class="string">,</span></span><br><span class="line">  <span class="attr">child:</span> <span class="string">new</span> <span class="string">FractionallySizedBox(</span></span><br><span class="line">    <span class="attr">alignment:</span> <span class="string">Alignment.bottomCenter,</span></span><br><span class="line">    <span class="attr">widthFactor:</span> <span class="number">1.5</span><span class="string">,</span></span><br><span class="line">    <span class="attr">heightFactor:</span> <span class="number">0.5</span><span class="string">,</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">new</span> <span class="string">Container(</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">Colors.red,</span></span><br><span class="line">    <span class="string">),</span></span><br><span class="line">  <span class="string">),</span></span><br><span class="line"><span class="string">);</span></span><br></pre></td></tr></table></figure><hr><h5 id="3-AspectRatio"><a href="#3-AspectRatio" class="headerlink" title="3.AspectRatio"></a>3.AspectRatio</h5><blockquote><p>就是设定一个定比例的容器<code>width/height=aspectRatio</code></p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> AspectRatio(&#123;</span><br><span class="line">  Key key,</span><br><span class="line">  <span class="meta">@required</span> <span class="keyword">this</span>.aspectRatio,</span><br><span class="line">  Widget child</span><br></pre></td></tr></table></figure><hr><p><img src="http://photo.toly1994.com/flutter$seven_day$03$57.png" alt=""></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">aspectratio_test</span> <span class="string">=</span> <span class="string">new</span> <span class="string">Container(</span></span><br><span class="line">  <span class="attr">width:</span> <span class="number">200.0</span><span class="string">,</span></span><br><span class="line">  <span class="attr">child:</span> <span class="string">new</span> <span class="string">AspectRatio(</span></span><br><span class="line">    <span class="attr">aspectRatio:</span> <span class="number">1.5</span><span class="string">,</span></span><br><span class="line">    <span class="attr">child:</span> <span class="string">new</span> <span class="string">Container(</span></span><br><span class="line">      <span class="attr">color:</span> <span class="string">Colors.red,</span></span><br><span class="line">    <span class="string">),</span></span><br><span class="line">  <span class="string">),</span></span><br><span class="line"><span class="string">);</span></span><br></pre></td></tr></table></figure><hr><h6 id="恭喜获得称号-布局学徒-，奖励卡片"><a href="#恭喜获得称号-布局学徒-，奖励卡片" class="headerlink" title="恭喜获得称号:布局学徒 ，奖励卡片"></a>恭喜获得称号:<code>布局学徒</code> ，奖励卡片</h6><table><thead><tr><th>-</th><th>-</th><th>-</th></tr></thead><tbody><tr><td><img src="http://photo.toly1994.com/flutter$seven_day$03$58.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$59.png" alt=""></td><td><img src="http://photo.toly1994.com/flutter$seven_day$03$60.png" alt=""></td></tr></tbody></table><blockquote><p>还剩几个Box，明天写几个布局例子顺带讲一下，反正每个新控件都会发张卡<br>最后把卡片总结起来，看看能不能凑够两幅扑克牌…打印出来当扑克牌打，还怕Flutter控件学不会?<br>好了，今天就到这里，脑细胞死不少，赶快看几集动漫补补脑。</p></blockquote><hr><h4 id="五、总结一下mark的点："><a href="#五、总结一下mark的点：" class="headerlink" title="五、总结一下mark的点："></a>五、总结一下mark的点：</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一天：</span></span><br><span class="line">3.现在焦点应该汇聚在StatefulWidget身上，很多地方都出现了,<span class="keyword">mark</span>一下</span><br><span class="line">---StatefulWidget是Widget的一个子类，是具有状态的控件，可谓元老级别</span><br><span class="line"></span><br><span class="line">4.canvas竟然没办法画文字,这不科学，<span class="keyword">mark</span>一下</span><br><span class="line">---保持<span class="keyword">mark</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第三天：</span></span><br><span class="line">1.这里<span class="keyword">mark</span>一下Card里的ShapeBorder shape,源码粗略看了一下，可能挺好玩，今天主看控件</span><br><span class="line">---保持<span class="keyword">mark</span></span><br><span class="line"></span><br><span class="line">2.transform属性的Matrix4有机会肯定好好分析分析，<span class="keyword">mark</span>一下</span><br><span class="line">---保持<span class="keyword">mark</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Flutter七日游第三天：2018-12-18-天气：晴朗&quot;&gt;&lt;a href=&quot;#Flutter七日游第三天：2018-12-18-天气：晴朗&quot; class=&quot;headerlink&quot; title=&quot;Flutter七日游第三天：2018-12-18 天气：晴朗&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter七日游第三天：2018-12-18 天气：晴朗&lt;/code&gt;&lt;/h4&gt;&lt;h4 id=&quot;零、前言&quot;&gt;&lt;a href=&quot;#零、前言&quot; class=&quot;headerlink&quot; title=&quot;零、前言&quot;&gt;&lt;/a&gt;零、前言&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;浪了两天，Dart语法基本上熟悉了，绘图也不怕了，现在进入正轨，继续浪~&lt;br&gt;今天来学些枯燥的东西了–基础控件，戒骄戒躁，基础还是要好好掌握。&lt;br&gt;本文目的在于尽可能看清控件的全局(细枝末节点到为止),详细用法等布局实战再细说吧&lt;br&gt;本文能用图的，尽量不用字(看完你可能会觉得我脑洞有点大)，废话不多说，进入今天的内容    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h5 id=&quot;一、Widget简入&quot;&gt;&lt;a href=&quot;#一、Widget简入&quot; class=&quot;headerlink&quot; title=&quot;一、Widget简入&quot;&gt;&lt;/a&gt;一、Widget简入&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;Widget:[小器具，装饰品，窗口小部件],以后简称：&lt;code&gt;控件&lt;/code&gt;&lt;br&gt;下面看一下Widget树：(只延伸到下代)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://photo.toly1994.com/flutter$seven_day$03$0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第2天--Animation动画+粒子运动</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/02.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/02.html</id>
    <published>2018-12-17T13:46:01.000Z</published>
    <updated>2020-05-04T00:28:42.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Flutter七日游第二天-2018-12-17-天气晴朗"><a href="#Flutter七日游第二天-2018-12-17-天气晴朗" class="headerlink" title="Flutter七日游第二天----2018-12-17----天气晴朗"></a><code>Flutter七日游第二天----2018-12-17----天气晴朗</code></h4><h4 id="零前言："><a href="#零前言：" class="headerlink" title="零前言："></a>零前言：</h4><blockquote><p>昨天讲了一下Flutter的基础项目，介绍了一下Dart语言，简单的用Canvas绘个图<br>本来打算今天把内置控件看一下的,不过既然昨天把图都画了,今天不玩动画岂不可惜<br>今天主要是把动画理一下,顺便把Android-java粒子运动复刻到Flutter-Dart里<br>最后会实现一个粒子时钟，<a href="https://juejin.im/post/5be7d3916fb9a04a0b21aeca" target="_blank" rel="noopener">Java版详见：Android原生绘图之炫酷倒计时</a><br>所以这篇会挺好玩的，瓜子，饮料，花生米备好，开始看吧</p></blockquote><h5 id="先挑几个图镇楼吧"><a href="#先挑几个图镇楼吧" class="headerlink" title="先挑几个图镇楼吧"></a>先挑几个图镇楼吧</h5><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/0.png" alt=""></p><a id="more"></a><table><thead><tr><th>运动盒</th><th>粉碎球</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/1.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/2.png" alt=""></td></tr></tbody></table><table><thead><tr><th>星与芒</th><th>星扩动</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/3.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/4.png" alt=""></td></tr></tbody></table><hr><h4 id="一、入门级动画：五角星的长大"><a href="#一、入门级动画：五角星的长大" class="headerlink" title="一、入门级动画：五角星的长大"></a>一、入门级动画：<code>五角星的长大</code></h4><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/5.png" alt=""></p><hr><h5 id="1-照葫芦画瓢"><a href="#1-照葫芦画瓢" class="headerlink" title="1.照葫芦画瓢"></a>1.照葫芦画瓢</h5><blockquote><p>按照昨天的Flutter初始项目，我们来自己写一个<br>本人是喜欢分包的,Javaer的优良习惯。至少逻辑清晰，分工明确，我创建了一个<code>pager包</code><br>主页面内容用AnimaPage,虽然暂时还不知道StatefulWidget是什么，反正按照套路出牌就行了<br>仿照初始项目的套路写，这里绘图区自定义AnimaView,打算对五角星的外接圆半径R进行动画</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:toly/view/anima_view.dart';</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimaPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _AnimaPageState createState() =&gt; _AnimaPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_AnimaPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;AnimaPage&gt;</span></span>&#123;</span><br><span class="line">  double _R = <span class="number">25</span>;<span class="comment">//五角星的外接圆半径</span></span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">CustomPaint</span>(</span><br><span class="line">        painter: <span class="type">AnimaView</span>(context, _R),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: <span class="type">FloatingActionButton</span>(</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: <span class="symbol">'Incremen</span>t',</span><br><span class="line">        child: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-AnimaView的实现："><a href="#2-AnimaView的实现：" class="headerlink" title="2.AnimaView的实现："></a>2.AnimaView的实现：</h5><blockquote><p>n角星的路径第一天已经封装好了，不会的可以去看一下</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'dart</span>:ui';</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:toly/helper/common_path.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:toly/helper/help_view.dart';</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimaView</span> <span class="keyword">extends</span> <span class="title">CustomPainter</span> </span>&#123;</span><br><span class="line">  <span class="type">Paint</span> mPaint;</span><br><span class="line">  <span class="type">BuildContext</span> context;</span><br><span class="line">  double _R;</span><br><span class="line"></span><br><span class="line">  <span class="type">AnimaView</span>(<span class="keyword">this</span>.context, double r) &#123;</span><br><span class="line">    mPaint = <span class="keyword">new</span> <span class="type">Paint</span>();</span><br><span class="line">    mPaint.color = <span class="type">Colors</span>.deepOrange;</span><br><span class="line">    _R = r;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void paint(<span class="type">Canvas</span> canvas, <span class="type">Size</span> size) &#123;</span><br><span class="line">    <span class="keyword">var</span> winSize = <span class="type">MediaQuery</span>.of(context).size;</span><br><span class="line">    drawGrid(canvas, winSize);</span><br><span class="line">    drawCoo(canvas, <span class="keyword">new</span> <span class="type">Size</span>(<span class="number">160</span>, <span class="number">320</span>), winSize);</span><br><span class="line">    canvas.translate(<span class="number">160</span>, <span class="number">320</span>);</span><br><span class="line">    canvas.drawPath(nStarPath(<span class="number">5</span>, _R, <span class="number">50</span>), mPaint);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  bool shouldRepaint(<span class="type">CustomPainter</span> oldDelegate) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-让数据动起来"><a href="#3-让数据动起来" class="headerlink" title="3.让数据动起来"></a>3.让数据动起来</h5><blockquote><p>现在万事俱备，只欠东风把R的值吹动就行了,下面有请Animation登场<br>vsync需要with SingleTickerProviderStateMixi<br>Tween:补间动画—-这里即：在 25.0, ~ 150.0之间在2000ms之内均匀变化<br>(PS:由于程序运行情况不同，并非绝对均匀,但整体上是均匀的)<br><code>..</code>:是级联运算,相当于再使用此对象，这里<code>..</code>也就代表<code>animation.</code></p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimaPage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _AnimaPageState createState() =&gt; _AnimaPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_AnimaPageState</span> <span class="keyword">extends</span> <span class="title">State&lt;AnimaPage&gt;</span></span></span><br><span class="line"><span class="class">    <span class="keyword">with</span> <span class="title">SingleTickerProviderStateMixin</span> </span>&#123;</span><br><span class="line">  <span class="type">AnimationController</span> controller;</span><br><span class="line">  <span class="type">Animation</span>&lt;double&gt; animation;</span><br><span class="line">  double _R = <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    <span class="comment">// 创建 AnimationController 对象</span></span><br><span class="line">    <span class="comment">//|----vsync时会防止屏幕外动画（动画的UI不在当前屏幕时）消耗不必要的资源 </span></span><br><span class="line">    controller = <span class="type">AnimationController</span>(</span><br><span class="line">        duration: const <span class="type">Duration</span>(milliseconds: <span class="number">2000</span>), vsync: <span class="keyword">this</span>);</span><br><span class="line">    animation = <span class="type">Tween</span>(begin: <span class="number">25.0</span>, end: <span class="number">150.0</span>).animate(controller)</span><br><span class="line">      ..addListener(() &#123;</span><br><span class="line">        setState(() &#123;</span><br><span class="line">          _R = animation.value;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    controller.dispose(); <span class="comment">// 资源释放</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">CustomPaint</span>(</span><br><span class="line">        painter: <span class="type">AnimaView</span>(context, _R),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: <span class="type">FloatingActionButton</span>(</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">          controller.forward(); <span class="comment">//执行动画</span></span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: <span class="symbol">'Incremen</span>t',</span><br><span class="line">        child: <span class="type">Icon</span>(<span class="type">Icons</span>.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样最简单的动画就动起来了</p></blockquote><hr><h5 id="4-来理一理思路"><a href="#4-来理一理思路" class="headerlink" title="4.来理一理思路"></a>4.来理一理思路</h5><blockquote><p>把源码翻一翻，感觉整个动画体系也不是非常复杂<br>套路就是:Animatable用animate方法，把一个Animation包裹一下,形成一个更厉害的Animation<br>至于他们的n个儿子，也就是对数据的处理不同，产生的效果不同罢了，套路知道了，一切好办</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/6.png" alt=""></p><hr><blockquote><p>可以看出api并没有想象中的那么多，所以别怕</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/7.png" alt=""></p><hr><h4 id="二、入门级动画：五角星的绽放"><a href="#二、入门级动画：五角星的绽放" class="headerlink" title="二、入门级动画：五角星的绽放"></a>二、入门级动画：<code>五角星的绽放</code></h4><blockquote><p>前面用了补间动画Tween,而且只动了一下，下面带来连续运动的不均匀动画</p></blockquote><table><thead><tr><th>匀速往复动</th><th>自定义曲线</th><th>bounceInOut</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/8.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/9.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/10.png" alt=""></td></tr></tbody></table><hr><h5 id="1-往复运动"><a href="#1-往复运动" class="headerlink" title="1.往复运动"></a>1.往复运动</h5><h6 id="1-1：运动状态"><a href="#1-1：运动状态" class="headerlink" title="1.1：运动状态"></a>1.1：运动状态</h6><blockquote><p>你可以想象成一个人在一个范围数字跑道上跑步：</p></blockquote><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">AnimationStatus</span> &#123;</span></span><br><span class="line">  /<span class="regexp">//</span> The animation is stopped at the beginning</span><br><span class="line">  dismissed,<span class="regexp">//</span>在正在开始时停止了</span><br><span class="line">  /<span class="regexp">//</span> The animation is running from beginning to <span class="keyword">end</span></span><br><span class="line">  forward,<span class="regexp">//</span>运动中</span><br><span class="line">  /<span class="regexp">//</span> The animation is running backwards, from <span class="keyword">end</span> to beginning</span><br><span class="line">  reverse,<span class="regexp">//</span>跑到终点，再跑回来的时候</span><br><span class="line">  /<span class="regexp">//</span> The animation is stopped at the <span class="keyword">end</span></span><br><span class="line">  completed,<span class="regexp">//</span>跑到终点是</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-2：状态的监听"><a href="#1-2：状态的监听" class="headerlink" title="1.2：状态的监听"></a>1.2：状态的监听</h6><blockquote><p><code>addStatusListener</code>:可以监听当前运动状态:只要让它跑完了，再往回跑就行了</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">animation = <span class="constructor">Tween(<span class="params">begin</span>: 25.0, <span class="params">end</span>: 150.0)</span>.animate(controller)</span><br><span class="line">     ..add<span class="constructor">Listener(()</span> &#123;</span><br><span class="line">       set<span class="constructor">State(()</span> &#123;</span><br><span class="line">         _R = animation.value;</span><br><span class="line">       &#125;);</span><br><span class="line">     &#125;)</span><br><span class="line">     ..add<span class="constructor">StatusListener((<span class="params">status</span>)</span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (status<span class="operator"> == </span><span class="module-access"><span class="module"><span class="identifier">AnimationStatus</span>.</span></span>completed) &#123;</span><br><span class="line">         controller.reverse<span class="literal">()</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status<span class="operator"> == </span><span class="module-access"><span class="module"><span class="identifier">AnimationStatus</span>.</span></span>dismissed) &#123;</span><br><span class="line">         controller.forward<span class="literal">()</span>;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure><hr><h5 id="2-变速跑"><a href="#2-变速跑" class="headerlink" title="2.变速跑"></a>2.变速跑</h5><blockquote><p>就像运动员变速跑一样，感觉就像游戏里加buff,本来是匀速的Animation<br>给价格变速的buff就变速起来了，加buff的类就是<code>Animatable</code>,它的子类有一个<code>CurveTween</code>：</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">animation = <span class="constructor">Tween(<span class="params">begin</span>: 25.0, <span class="params">end</span>: 150.0)</span>.animate(</span><br><span class="line">        <span class="constructor">CurveTween(<span class="params">curve</span>: Curves.<span class="params">bounceInOut</span>)</span>.animate(controller))</span><br></pre></td></tr></table></figure><blockquote><p>就这么简单，Curves里有几个内置的变速器，给原来的animation装上就行了</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/11.png" alt=""></p><hr><h5 id="3-自定义变速曲线"><a href="#3-自定义变速曲线" class="headerlink" title="3.自定义变速曲线"></a>3.自定义变速曲线</h5><h6 id="3-1：追踪一下源码"><a href="#3-1：追踪一下源码" class="headerlink" title="3.1：追踪一下源码"></a>3.1：追踪一下源码</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">----&gt;[<span class="type">CurveTween</span>]---------控件只有一参<span class="type">Curve</span>------------------------</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CurveTween</span> <span class="keyword">extends</span> <span class="title">Animatable&lt;double&gt;</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// Creates a curve tween.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// The [curve] argument must not be null.</span></span><br><span class="line">  <span class="type">CurveTween</span>(&#123; <span class="meta">@required</span> <span class="keyword">this</span>.curve &#125;)</span><br><span class="line">    : assert(curve != <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// The curve to use when transforming the value of the animation.</span></span><br><span class="line">  <span class="type">Curve</span> curve;</span><br><span class="line">  </span><br><span class="line">----&gt;[<span class="type">Curve</span>]--------抽象的，找儿子去--------------------</span><br><span class="line"><span class="meta">@immutable</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Curve</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">----&gt;[<span class="type">Curve</span>]--------四参构造的曲线，整合我意--------------------</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cubic</span> <span class="keyword">extends</span> <span class="title">Curve</span> </span>&#123;</span><br><span class="line">  <span class="comment">/// Creates a cubic curve.</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// Rather than creating a new instance, consider using one of the common</span></span><br><span class="line">  <span class="comment">/// cubic curves in [Curves].</span></span><br><span class="line">  <span class="comment">///</span></span><br><span class="line">  <span class="comment">/// The [a], [b], [c], and [d] arguments must not be null.</span></span><br><span class="line">  const <span class="type">Cubic</span>(<span class="keyword">this</span>.a, <span class="keyword">this</span>.b, <span class="keyword">this</span>.c, <span class="keyword">this</span>.d)</span><br></pre></td></tr></table></figure><hr><h6 id="3-2-Chrome小工具"><a href="#3-2-Chrome小工具" class="headerlink" title="3.2:Chrome小工具"></a>3.2:Chrome小工具</h6><blockquote><p>作为一名前端业余爱好者，Chrome里有个小东西很有用,<br>曲线生成，自带预览,简直无心插柳柳成荫。(记得掘金的头像可以转,有translate属性)  </p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/12.png" alt=""></p><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/13.png" alt=""></p><hr><h6 id="3-3-使用："><a href="#3-3-使用：" class="headerlink" title="3.3:使用："></a>3.3:使用：</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">animation = Tween(begin: <span class="number">25.0</span>, end: <span class="number">150.0</span>).animate(</span><br><span class="line">      CurveTween(curve: Cubic(<span class="number">0.96</span>, <span class="number">0.13</span>, <span class="number">0.1</span>, <span class="number">1.2</span>)).animate(controller))</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/14.png" alt=""></p><blockquote><p>Ok,基本上就这样，你get了吗?</p></blockquote><hr><h4 id="三、初级动画：太阳的诞生"><a href="#三、初级动画：太阳的诞生" class="headerlink" title="三、初级动画：太阳的诞生"></a>三、初级动画：<code>太阳的诞生</code></h4><table><thead><tr><th>红太阳</th><th>星与阳</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/15.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/16.png" alt=""></td></tr></tbody></table><h5 id="1-红太阳：整型int-动画"><a href="#1-红太阳：整型int-动画" class="headerlink" title="1.红太阳：整型int 动画"></a>1.红太阳：整型int 动画</h5><blockquote><p>套路学会了，这些动态改变一下n角星的尖角数，看看效果</p></blockquote><h6 id="1-1：AnimaPage里定义尖角数动画"><a href="#1-1：AnimaPage里定义尖角数动画" class="headerlink" title="1.1：AnimaPage里定义尖角数动画"></a>1.1：AnimaPage里定义尖角数动画</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Animation&lt;<span class="built_in">int</span>&gt; numAnima;<span class="comment">//n角星的尖角数动画</span></span><br><span class="line"><span class="built_in">int</span> _num = <span class="number">5</span>;<span class="comment">//n角星的尖角数动画</span></span><br><span class="line"></span><br><span class="line"> controller = AnimationController(</span><br><span class="line">        duration: <span class="keyword">const</span> Duration(milliseconds: <span class="number">2000</span>), vsync: <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    numAnima = IntTween(begin: <span class="number">5</span>, end: <span class="number">220</span>).animate(controller)</span><br><span class="line">      ..addListener(() &#123;</span><br><span class="line">        setState(() &#123;</span><br><span class="line">          _num = numAnima.value;<span class="comment">//设置属性，刷新界面</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;)</span><br><span class="line">      ..addStatusListener((status) &#123;</span><br><span class="line">        <span class="keyword">if</span> (status == AnimationStatus.completed) &#123;</span><br><span class="line">          controller.reverse();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status == AnimationStatus.dismissed) &#123;</span><br><span class="line">          controller.forward();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><hr><h6 id="1-2：AnimaView增加入参"><a href="#1-2：AnimaView增加入参" class="headerlink" title="1.2：AnimaView增加入参"></a>1.2：AnimaView增加入参</h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> _num;</span><br><span class="line"><span class="constructor">AnimaView(<span class="params">this</span>.<span class="params">context</span>, &#123;<span class="params">double</span> R, <span class="params">int</span> <span class="params">num</span>, Color <span class="params">color</span>&#125;)</span> &#123;</span><br><span class="line">    _num = num;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//绘制时使用_num即可</span></span><br><span class="line"> canvas.draw<span class="constructor">Path(<span class="params">nStarPath</span>(<span class="params">_num</span>, 100, 50)</span>, mPaint);</span><br></pre></td></tr></table></figure><hr><h5 id="2-星与阳：颜色动画"><a href="#2-星与阳：颜色动画" class="headerlink" title="2.星与阳：颜色动画"></a>2.星与阳：颜色动画</h5><blockquote><p><code>ColorTween</code>相当于添加颜色改变的buff,入参的自己加吧，和上面一样,给画笔填色就行了</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">colorAnima =</span><br><span class="line">        <span class="constructor">ColorTween(<span class="params">begin</span>: Colors.<span class="params">yellow</span>, <span class="params">end</span>: Colors.<span class="params">red</span>)</span>.animate(controller)</span><br><span class="line">          ..add<span class="constructor">Listener(()</span> &#123;</span><br><span class="line">            set<span class="constructor">State(()</span> &#123;</span><br><span class="line">              _color = colorAnima.value;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;)</span><br><span class="line">          ..add<span class="constructor">StatusListener((<span class="params">status</span>)</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (status<span class="operator"> == </span><span class="module-access"><span class="module"><span class="identifier">AnimationStatus</span>.</span></span>completed) &#123;</span><br><span class="line">              controller.reverse<span class="literal">()</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status<span class="operator"> == </span><span class="module-access"><span class="module"><span class="identifier">AnimationStatus</span>.</span></span>dismissed) &#123;</span><br><span class="line">              controller.forward<span class="literal">()</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><hr><h5 id="3-其他效果"><a href="#3-其他效果" class="headerlink" title="3.其他效果"></a>3.其他效果</h5><blockquote><p>自己玩玩吧，随便改些属性</p></blockquote><table><thead><tr><th>星与芒</th><th>星扩动</th></tr></thead><tbody><tr><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/17.png" alt=""></td><td><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/18.png" alt=""></td></tr></tbody></table><blockquote><p>星与芒:固定五角星内接圆半径,外接圆半径变大，角数变多,颜色变红<br>星扩动:五角星内接圆半径为外接圆一半,外接圆半径变大，角数变多,颜色变红  </p></blockquote><h5 id="好了，预热完了，下面进入正题"><a href="#好了，预热完了，下面进入正题" class="headerlink" title="好了，预热完了，下面进入正题"></a><code>好了，预热完了，下面进入正题</code></h5><hr><h4 id="四、粒子运动"><a href="#四、粒子运动" class="headerlink" title="四、粒子运动"></a>四、粒子运动</h4><blockquote><p>无论什么语言只有能模拟<code>时间流</code>就可以有粒子动画<br>粒子动画的基础在<a href="https://juejin.im/post/5bee10376fb9a04a0e2cc4c2" target="_blank" rel="noopener">Android原生绘图之让你了解View的运动</a>里讲的很详细<br>思想对于所有语言都是通用的，不仅限于java,有兴趣的可以详细了解下</p></blockquote><h5 id="1-废话不多说，来个运动盒再说"><a href="#1-废话不多说，来个运动盒再说" class="headerlink" title="1.废话不多说，来个运动盒再说"></a>1.废话不多说，来个<code>运动盒</code>再说</h5><blockquote><p><code>运动盒</code>就是小球在盒子里不断弹跳的动画,就像这样  </p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/19.png" alt=""></p><h6 id="1-1：新建文件：run-ball-view-dart-gt-RunBallView-Ball"><a href="#1-1：新建文件：run-ball-view-dart-gt-RunBallView-Ball" class="headerlink" title="1.1：新建文件：run_ball_view.dart-----&gt;RunBallView + Ball"></a>1.1：新建文件：<code>run_ball_view.dart-----&gt;RunBallView + Ball</code></h6><blockquote><p>先把小球的实体类写一下</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">Ball</span> &#123;</span><br><span class="line">  <span class="built_in">double</span> aX; <span class="comment">//加速度</span></span><br><span class="line">  <span class="built_in">double</span> aY; <span class="comment">//加速度Y</span></span><br><span class="line">  <span class="built_in">double</span> vX; <span class="comment">//速度X</span></span><br><span class="line">  <span class="built_in">double</span> vY; <span class="comment">//速度Y</span></span><br><span class="line">  <span class="built_in">double</span> x; <span class="comment">//点位X</span></span><br><span class="line">  <span class="built_in">double</span> y; <span class="comment">//点位Y</span></span><br><span class="line">  Color color; <span class="comment">//颜色</span></span><br><span class="line">  <span class="built_in">double</span> r;<span class="comment">//小球半径</span></span><br><span class="line"></span><br><span class="line">  Ball(&#123;<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.color, <span class="keyword">this</span>.r, <span class="keyword">this</span>.aX, <span class="keyword">this</span>.aY, <span class="keyword">this</span>.vX, <span class="keyword">this</span>.vY&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-2：画板准备好"><a href="#1-2：画板准备好" class="headerlink" title="1.2：画板准备好"></a>1.2：画板准备好</h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> RunBallView extends CustomPainter &#123;</span><br><span class="line">  Paint mPaint;</span><br><span class="line">  BuildContext context;</span><br><span class="line">  Ball _ball;</span><br><span class="line">  Rect _limit;</span><br><span class="line"></span><br><span class="line">  <span class="constructor">RunBallView(<span class="params">this</span>.<span class="params">context</span>, Ball <span class="params">ball</span>, Rect <span class="params">limit</span>)</span> &#123;</span><br><span class="line">    mPaint = <span class="keyword">new</span> <span class="constructor">Paint()</span>;</span><br><span class="line">    _ball = ball;</span><br><span class="line">    _limit = limit;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  void paint(Canvas canvas, Size size) &#123;</span><br><span class="line">    var winSize = <span class="module-access"><span class="module"><span class="identifier">MediaQuery</span>.</span></span><span class="keyword">of</span>(context).size;</span><br><span class="line">    canvas.translate(<span class="number">160</span>, <span class="number">320</span>);</span><br><span class="line">    mPaint.color = <span class="module-access"><span class="module"><span class="identifier">Color</span>.</span></span>from<span class="constructor">ARGB(148, 198, 246, 248)</span>;</span><br><span class="line">    canvas.draw<span class="constructor">Rect(<span class="params">_limit</span>, <span class="params">mPaint</span>)</span>;</span><br><span class="line"></span><br><span class="line">    canvas.save<span class="literal">()</span>;</span><br><span class="line">    draw<span class="constructor">Ball(<span class="params">canvas</span>, <span class="params">_ball</span>)</span>;</span><br><span class="line">    canvas.restore<span class="literal">()</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  <span class="built_in">bool</span> should<span class="constructor">Repaint(CustomPainter <span class="params">oldDelegate</span>)</span> &#123;</span><br><span class="line">    return <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">//绘制小球</span></span><br><span class="line">  void draw<span class="constructor">Ball(Canvas <span class="params">canvas</span>, Ball <span class="params">ball</span>)</span> &#123;</span><br><span class="line">    mPaint.color = ball.color;</span><br><span class="line">    canvas.draw<span class="constructor">Circle(Offset(<span class="params">ball</span>.<span class="params">x</span>, <span class="params">ball</span>.<span class="params">y</span>)</span>, ball.r, mPaint);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-3：认识一下矩形对象Rect"><a href="#1-3：认识一下矩形对象Rect" class="headerlink" title="1.3：认识一下矩形对象Rect"></a>1.3：认识一下矩形对象Rect</h6><blockquote><p>这是我们需要的字段</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var limit = Rect.fromLTRB(-140, -100, 140, 100);</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"width:<span class="variable">$&#123;limit.width&#125;</span>"</span>);</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"height:<span class="variable">$&#123;limit.height&#125;</span>"</span>);</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"left:<span class="variable">$&#123;limit.left&#125;</span>"</span>);</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"top:<span class="variable">$&#123;limit.top&#125;</span>"</span>);</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"right:<span class="variable">$&#123;limit.right&#125;</span>"</span>);</span><br><span class="line"><span class="builtin-name">print</span>(<span class="string">"bottom:<span class="variable">$&#123;limit.bottom&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">I/flutter (28755): width:280.0</span><br><span class="line">I/flutter (28755): height:200.0</span><br><span class="line">I/flutter (28755): left:-140.0</span><br><span class="line">I/flutter (28755): top:-100.0</span><br><span class="line">I/flutter (28755): right:140.0</span><br><span class="line">I/flutter (28755): bottom:100.0</span><br></pre></td></tr></table></figure><hr><h6 id="1-4：新建文件：run-ball-pager-dart-gt-RunBallPage"><a href="#1-4：新建文件：run-ball-pager-dart-gt-RunBallPage" class="headerlink" title="1.4：新建文件：run_ball_pager.dart----&gt;RunBallPage"></a>1.4：新建文件：<code>run_ball_pager.dart----&gt;RunBallPage</code></h6><blockquote><p>这里只需要一个时间流，用<code>AnimationController</code>一个人就够了</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">RunBallPage</span> <span class="symbol">extends</span> <span class="symbol">StatefulWidget</span> &#123;</span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  _RunBallPageState createState() =&gt; _RunBallPageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="symbol">_RunBallPageState</span> <span class="symbol">extends</span> <span class="symbol">State</span>&lt;<span class="symbol">RunBallPage</span>&gt;</span><br><span class="line">    <span class="symbol">with</span> <span class="symbol">SingleTickerProviderStateMixin</span> &#123;</span><br><span class="line">  AnimationController controller;</span><br><span class="line">  Ball _ball;</span><br><span class="line">  var _limit = Rect.fromLTRB(<span class="number">-140</span>, <span class="number">-100</span>, <span class="number">140</span>, <span class="number">100</span>);<span class="comment">//矩形边界</span></span><br><span class="line">    </span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="built_in">void</span> initState() &#123;</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">    <span class="comment">//初始化小球</span></span><br><span class="line">    _ball = Ball(x: <span class="number">0</span>, y: <span class="number">0</span>, color: Colors.blue, r: <span class="number">10</span>, aX: <span class="number">0</span>, aY: <span class="number">0</span>, vX: <span class="number">0</span>, vY: <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 AnimationController 对象</span></span><br><span class="line">    <span class="comment">//|----vsync时会防止屏幕外动画（动画的UI不在当前屏幕时）消耗不必要的资源</span></span><br><span class="line">    controller = AnimationController(</span><br><span class="line">        duration: <span class="keyword">const</span> Duration(milliseconds: <span class="number">200000</span>), vsync: <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    controller.addListener(() &#123;</span><br><span class="line">      updateBall();<span class="comment">//更新小球</span></span><br><span class="line"></span><br><span class="line">      setState(() &#123;&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    controller.addStatusListener((status) &#123;</span><br><span class="line">      <span class="keyword">if</span> (status == AnimationStatus.completed) &#123;</span><br><span class="line">        controller.reverse();</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status == AnimationStatus.dismissed) &#123;</span><br><span class="line">        controller.forward();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  <span class="built_in">void</span> dispose() &#123;</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">    controller.dispose(); <span class="comment">// 资源释放</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @<span class="keyword">override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(<span class="string">"张风捷特烈"</span>),</span><br><span class="line">      ),</span><br><span class="line">      body: CustomPaint(</span><br><span class="line">        painter: RunBallView(context, _ball,_limit),</span><br><span class="line">      ),</span><br><span class="line">      <span class="built_in">float</span>ingActionButton: FloatingActionButton(</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">          controller.forward(); <span class="comment">//执行动画</span></span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: <span class="string">'Increment'</span>,</span><br><span class="line">        child: Icon(Icons.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新小球</span></span><br><span class="line">  <span class="built_in">void</span> updateBall() &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/20.png" alt=""></p><blockquote><p>这样静态小球就完成了</p></blockquote><hr><h6 id="1-5：更新新小球位置-渲染视图：RunBallPage-updateBall"><a href="#1-5：更新新小球位置-渲染视图：RunBallPage-updateBall" class="headerlink" title="1.5：更新新小球位置,渲染视图：RunBallPage#updateBall"></a>1.5：更新新小球位置,渲染视图：<code>RunBallPage#updateBall</code></h6><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/21.png" alt=""></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新小球位置</span></span><br><span class="line">  void updateBall() &#123;</span><br><span class="line">    <span class="comment">//运动学公式</span></span><br><span class="line">    <span class="variable">_ball</span>.x += <span class="variable">_ball</span>.vX;</span><br><span class="line">    <span class="variable">_ball</span>.y += <span class="variable">_ball</span>.vY;</span><br><span class="line">    <span class="variable">_ball</span>.vX += <span class="variable">_ball</span>.aX;</span><br><span class="line">    <span class="variable">_ball</span>.vY += <span class="variable">_ball</span>.aY;</span><br><span class="line">    <span class="comment">//限定下边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.y &gt; <span class="variable">_limit</span>.bottom - <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.y = <span class="variable">_limit</span>.bottom - <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vY = -<span class="variable">_ball</span>.vY;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//限定上边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.y &lt; <span class="variable">_limit</span>.top + <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.y = <span class="variable">_limit</span>.top + <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vY = -<span class="variable">_ball</span>.vY;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h6 id="1-6：运动盒的实现"><a href="#1-6：运动盒的实现" class="headerlink" title="1.6：运动盒的实现"></a>1.6：运动盒的实现</h6><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/22.png" alt=""></p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始时附加信息</span></span><br><span class="line"><span class="variable">_ball</span> = Ball(x: <span class="number">0</span>, y: <span class="number">0</span>, color: Colors.blue, r: <span class="number">10</span>, aX: <span class="number">0</span>, aY: <span class="number">0.1</span>, vX: <span class="number">2</span>, vY: -<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新小球位置</span></span><br><span class="line">  void updateBall() &#123;</span><br><span class="line">    <span class="comment">//运动学公式</span></span><br><span class="line">    <span class="variable">_ball</span>.x += <span class="variable">_ball</span>.vX;</span><br><span class="line">    <span class="variable">_ball</span>.y += <span class="variable">_ball</span>.vY;</span><br><span class="line">    <span class="variable">_ball</span>.vX += <span class="variable">_ball</span>.aX;</span><br><span class="line">    <span class="variable">_ball</span>.vY += <span class="variable">_ball</span>.aY;</span><br><span class="line">    <span class="comment">//限定下边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.y &gt; <span class="variable">_limit</span>.bottom - <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.y = <span class="variable">_limit</span>.bottom - <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vY = -<span class="variable">_ball</span>.vY;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//限定上边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.y &lt; <span class="variable">_limit</span>.top + <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.y = <span class="variable">_limit</span>.top + <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vY = -<span class="variable">_ball</span>.vY;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//限定左边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.x &lt; <span class="variable">_limit</span>.left + <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.x = <span class="variable">_limit</span>.left + <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vX = -<span class="variable">_ball</span>.vX;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//限定右边界</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">_ball</span>.x &gt; <span class="variable">_limit</span>.right - <span class="variable">_ball</span>.r) &#123;</span><br><span class="line">      <span class="variable">_ball</span>.x = <span class="variable">_limit</span>.right - <span class="variable">_ball</span>.r;</span><br><span class="line">      <span class="variable">_ball</span>.vX= -<span class="variable">_ball</span>.vX;</span><br><span class="line">      <span class="variable">_ball</span>.color=randomRGB();<span class="comment">//碰撞后随机色</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-粒子的运动"><a href="#2-粒子的运动" class="headerlink" title="2.粒子的运动"></a>2.粒子的运动</h5><blockquote><p>思路就是：用List把球装一下，碰撞的时候,创建一个方向相反，半径减半的球，加入集合<br>并将当前的球半径减半，效果挺不错的，实现起来也不麻烦。<a href="https://juejin.im/post/5bee10376fb9a04a0e2cc4c2" target="_blank" rel="noopener">Android-java版可见</a>  </p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/23.png" alt=""></p><hr><h6 id="2-1：改动：RunBallPage"><a href="#2-1：改动：RunBallPage" class="headerlink" title="2.1：改动：RunBallPage"></a>2.1：改动：<code>RunBallPage</code></h6><blockquote><p>半径小于0.3就移除,为了不让小球无限增加,小于0.3基本上也就卡不见了<br>当然你也可以自定义移除的时机</p></blockquote><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _balls = List&lt;Ball&gt;();<span class="comment">//将_ball换成集合</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ball = Ball(x: <span class="type">0</span>, y: <span class="type">0</span>, color: <span class="type">Colors</span>.blue, r: <span class="type">40</span>, aX: <span class="type">0</span>.<span class="number">05</span>, aY: <span class="type">0</span>.<span class="number">1</span>, vX: <span class="type">3</span>, vY: <span class="type">-3</span>);</span><br><span class="line">_balls.add(ball);<span class="comment">//添加一个</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//更新方法</span></span><br><span class="line"><span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; _balls.length; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> ball = _balls[i];</span><br><span class="line">      <span class="keyword">if</span> (ball.r &lt; <span class="number">0.3</span>) &#123;</span><br><span class="line">        <span class="comment">//半径小于0.3就移除</span></span><br><span class="line">        _balls.removeAt(i);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//运动学公式</span></span><br><span class="line">      ball.x += ball.vX;</span><br><span class="line">      ball.y += ball.vY;</span><br><span class="line">      ball.vX += ball.aX;</span><br><span class="line">      ball.vY += ball.aY;</span><br><span class="line">      <span class="comment">//限定下边界</span></span><br><span class="line">      <span class="keyword">if</span> (ball.y &gt; _limit.bottom) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">new</span><span class="type">Ball</span> = Ball.fromBall(ball);</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.r = <span class="keyword">new</span><span class="type">Ball</span>.r / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.vX = -<span class="keyword">new</span><span class="type">Ball</span>.vX;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.vY = -<span class="keyword">new</span><span class="type">Ball</span>.vY;</span><br><span class="line">        _balls.add(<span class="keyword">new</span><span class="type">Ball</span>);</span><br><span class="line">        ball.r = ball.r / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        ball.y = _limit.bottom;</span><br><span class="line">        ball.vY = -ball.vY;</span><br><span class="line">        ball.color = randomRGB(); <span class="comment">//碰撞后随机色</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//限定上边界</span></span><br><span class="line">      <span class="keyword">if</span> (ball.y &lt; _limit.top) &#123;</span><br><span class="line">        ball.y = _limit.top;</span><br><span class="line">        ball.vY = -ball.vY;</span><br><span class="line">        ball.color = randomRGB(); <span class="comment">//碰撞后随机色</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//限定左边界</span></span><br><span class="line">      <span class="keyword">if</span> (ball.x &lt; _limit.left) &#123;</span><br><span class="line">        ball.x = _limit.left;</span><br><span class="line">        ball.vX = -ball.vX;</span><br><span class="line">        ball.color = randomRGB(); <span class="comment">//碰撞后随机色</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//限定右边界</span></span><br><span class="line">      <span class="keyword">if</span> (ball.x &gt; _limit.right) &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">new</span><span class="type">Ball</span> = Ball.fromBall(ball);</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.r = <span class="keyword">new</span><span class="type">Ball</span>.r / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.vX = -<span class="keyword">new</span><span class="type">Ball</span>.vX;</span><br><span class="line">        <span class="keyword">new</span><span class="type">Ball</span>.vY = -<span class="keyword">new</span><span class="type">Ball</span>.vY;</span><br><span class="line">        _balls.add(<span class="keyword">new</span><span class="type">Ball</span>);</span><br><span class="line">        ball.r = ball.r / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        ball.x = _limit.right;</span><br><span class="line">        ball.vX = -ball.vX;</span><br><span class="line">        ball.color = randomRGB(); <span class="comment">//碰撞后随机色</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//传入画布也变成小球集合</span></span><br><span class="line">body: <span class="type">CustomPaint</span>(</span><br><span class="line">        painter: <span class="type">RunBallView</span>(context, _balls, _limit),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><hr><h6 id="2-2：绘制小球时-RunBallView："><a href="#2-2：绘制小球时-RunBallView：" class="headerlink" title="2.2：绘制小球时:RunBallView："></a>2.2：绘制小球时:<code>RunBallView</code>：</h6><blockquote><p>把小球都绘制出来就行了</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//复制一个小球</span></span><br><span class="line">Ball.fromBall(Ball ball) &#123;</span><br><span class="line">  <span class="keyword">this</span>.x = ball.x;</span><br><span class="line">  <span class="keyword">this</span>.y = ball.y;</span><br><span class="line">  <span class="keyword">this</span>.color = ball.color;</span><br><span class="line">  <span class="keyword">this</span>.r = ball.r;</span><br><span class="line">  <span class="keyword">this</span>.aX = ball.aX;</span><br><span class="line">  <span class="keyword">this</span>.aY = ball.aY;</span><br><span class="line">  <span class="keyword">this</span>.vX = ball.vX;</span><br><span class="line">  <span class="keyword">this</span>.vY = ball.vY;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//------paint方法中-----------</span></span><br><span class="line">_balls.forEach((ball) &#123;</span><br><span class="line">     drawBall(canvas, ball);</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><blockquote><p>这样就完成了，是不是没有想象中的那么复杂</p></blockquote><hr><h4 id="五、粒子时钟"><a href="#五、粒子时钟" class="headerlink" title="五、粒子时钟"></a>五、粒子时钟</h4><blockquote><p>这里就不详细分析，<a href="https://juejin.im/post/5be7d3916fb9a04a0b21aeca" target="_blank" rel="noopener">这里的Java版已经分析的很细致了</a>,直接上代码(基本上是Java的翻译版)<br>这个效果新建了一个页面来做,digit三维数组Dart版附在文尾</p></blockquote><h5 id="1-渲染数字"><a href="#1-渲染数字" class="headerlink" title="1.渲染数字"></a>1.渲染数字</h5><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/24.png" alt=""></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 渲染数字</span></span><br><span class="line"><span class="comment"> * @param num    要显示的数字</span></span><br><span class="line"><span class="comment"> * @param canvas 画布</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">void</span> renderDigit(<span class="built_in">int</span> num, Canvas canvas) &#123;</span><br><span class="line">  <span class="keyword">if</span> (num &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; digit[num].length; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; digit[num][j].length; j++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (digit[num][i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">        canvas.save();</span><br><span class="line">        <span class="built_in">double</span> rX = j * <span class="number">2</span> * (_radius + <span class="number">1</span>) + (_radius + <span class="number">1</span>); <span class="comment">//第(i，j)个点圆心横坐标</span></span><br><span class="line">        <span class="built_in">double</span> rY = i * <span class="number">2</span> * (_radius + <span class="number">1</span>) + (_radius + <span class="number">1</span>); <span class="comment">//第(i，j)个点圆心纵坐标</span></span><br><span class="line">        canvas.translate(rX, rY);</span><br><span class="line">        mPaint.color = Colors.blue;</span><br><span class="line">        canvas.drawPath(mStarPath, mPaint);</span><br><span class="line">        canvas.restore();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-画布中绘制1994"><a href="#2-画布中绘制1994" class="headerlink" title="2.画布中绘制1994"></a>2.画布中绘制<code>1994</code></h5><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">canvas.save();</span><br><span class="line">renderDigit(<span class="number">1</span>, canvas);</span><br><span class="line">canvas.translate(<span class="number">80</span>, <span class="number">0</span>);</span><br><span class="line">renderDigit(<span class="number">9</span>, canvas);</span><br><span class="line">canvas.translate(<span class="number">80</span>, <span class="number">0</span>);</span><br><span class="line">renderDigit(<span class="number">9</span>, canvas);</span><br><span class="line">canvas.translate(<span class="number">80</span>, <span class="number">0</span>);</span><br><span class="line">renderDigit(<span class="number">4</span>, canvas);</span><br><span class="line">canvas.restore();</span><br></pre></td></tr></table></figure><hr><h5 id="3-绘制时间"><a href="#3-绘制时间" class="headerlink" title="3.绘制时间"></a>3.绘制时间</h5><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/25.png" alt=""></p><h6 id="3-1：时间的简单获取"><a href="#3-1：时间的简单获取" class="headerlink" title="3.1：时间的简单获取"></a>3.1：时间的简单获取</h6><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">DateTime</span> now = <span class="keyword">new</span> <span class="built_in">DateTime</span>.now();</span><br><span class="line"><span class="keyword">var</span> hour = now.hour;</span><br><span class="line"><span class="keyword">var</span> second = now.second;</span><br><span class="line"><span class="keyword">var</span> minute = now.minute;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"hour<span class="subst">$hour</span>"</span>);<span class="comment">//15</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"second<span class="subst">$second</span>"</span>);<span class="comment">//57</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"minute<span class="subst">$minute</span>"</span>);<span class="comment">//27</span></span><br></pre></td></tr></table></figure><hr><h6 id="3-2-绘制时间"><a href="#3-2-绘制时间" class="headerlink" title="3.2:绘制时间"></a>3.2:绘制时间</h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时</span></span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">hour</span> ~<span class="operator">/</span> 10, <span class="params">canvas</span>)</span>;</span><br><span class="line">canvas.translate(<span class="number">19</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">hour</span> % 10, <span class="params">canvas</span>)</span>;</span><br><span class="line"><span class="comment">//：</span></span><br><span class="line">canvas.translate(<span class="number">19</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(10, <span class="params">canvas</span>)</span>;</span><br><span class="line"><span class="comment">//分</span></span><br><span class="line">canvas.translate(<span class="number">11</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">minute</span> ~<span class="operator">/</span> 10, <span class="params">canvas</span>)</span>;</span><br><span class="line">canvas.translate(<span class="number">19</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">minute</span> % 10, <span class="params">canvas</span>)</span>;</span><br><span class="line"><span class="comment">//：</span></span><br><span class="line">canvas.translate(<span class="number">18</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(10, <span class="params">canvas</span>)</span>;</span><br><span class="line"><span class="comment">//秒</span></span><br><span class="line">canvas.translate(<span class="number">11</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">second</span> ~<span class="operator">/</span> 10, <span class="params">canvas</span>)</span>;</span><br><span class="line">canvas.translate(<span class="number">19</span><span class="operator"> * </span>_radius, <span class="number">0</span>);</span><br><span class="line">render<span class="constructor">Digit(<span class="params">_now</span>.<span class="params">second</span> % 10, <span class="params">canvas</span>)</span>;</span><br></pre></td></tr></table></figure><hr><h6 id="3-3：用Animation动起来"><a href="#3-3：用Animation动起来" class="headerlink" title="3.3：用Animation动起来"></a>3.3：用Animation动起来</h6><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/26.png" alt=""></p><hr><h5 id="4-加小球"><a href="#4-加小球" class="headerlink" title="4.加小球"></a>4.加小球</h5><blockquote><p>方法基本上是Java版改些的，这里不分析了，可以看Java版的分析，基本上一致</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/02/27.png" alt=""></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在类的外部定义全局的变量</span></span><br><span class="line">var currTime = new DateTime.now();</span><br><span class="line">var tagOfBall = new DateTime.now().millisecondsSinceEpoch;</span><br><span class="line">var _balls = new List&lt;Ball&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造方法中刷新小球</span></span><br><span class="line">  ClockView(<span class="keyword">this</span>.context) &#123;</span><br><span class="line">    mPaint = new Paint();</span><br><span class="line">    mStarPath = nStarPath(<span class="number">5</span>, _radius, _radius / <span class="number">2</span>);</span><br><span class="line">    _now = new DateTime.now();</span><br><span class="line">    addBallsChanged();</span><br><span class="line">    updateBalls();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 添加倒计时中改动的点---变动加球</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="built_in">void</span> addBallsChanged() &#123;</span><br><span class="line">    var now = new DateTime.now();</span><br><span class="line">    <span class="keyword">if</span> (currTime.second != now.second) &#123;</span><br><span class="line">      <span class="comment">//判断当前时间是否改变,再将点位放到集合中</span></span><br><span class="line">      <span class="keyword">if</span> ((currTime.hour ~/ <span class="number">10</span>) != (now.hour ~/ <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls((<span class="number">-17</span> * <span class="number">5</span> - <span class="number">11</span> * <span class="number">2</span>) * _radius.toInt(), currTime.hour ~/ <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((currTime.hour % <span class="number">10</span>) != (now.hour % <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls((<span class="number">-17</span> * <span class="number">4</span> - <span class="number">11</span> * <span class="number">2</span>) * _radius.toInt(), currTime.hour % <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((currTime.minute ~/ <span class="number">10</span>) != (now.minute ~/ <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls((<span class="number">-18</span> * <span class="number">3</span> - <span class="number">11</span>) * _radius.toInt(), currTime.minute ~/ <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((currTime.minute % <span class="number">10</span>) != (now.minute % <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls((<span class="number">-18</span> * <span class="number">2</span> - <span class="number">11</span>) * _radius.toInt(), currTime.minute % <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((currTime.second ~/ <span class="number">10</span>) != (now.second ~/ <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls(<span class="number">-18</span> * _radius.toInt(), currTime.second ~/ <span class="number">10</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ((currTime.second % <span class="number">10</span>) != (now.second % <span class="number">10</span>)) &#123;</span><br><span class="line">        addBalls(<span class="number">0</span>, currTime.second % <span class="number">10</span>);</span><br><span class="line">        currTime = now;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//添加小球</span></span><br><span class="line">  addBalls(<span class="built_in">int</span> offsetX, <span class="built_in">int</span> num) &#123;</span><br><span class="line">    Random random = new Random();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; digit[num].length; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; digit[num][i].length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (digit[num][i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">          Ball ball = new Ball();</span><br><span class="line">          ball.aY = <span class="number">0.1</span>;</span><br><span class="line">          ball.vX = pow(<span class="number">-1</span>, random.nextInt(<span class="number">1000</span>)) * <span class="number">6</span> * random.nextDouble();</span><br><span class="line">          ball.vY = <span class="number">4</span> * random.nextDouble();</span><br><span class="line">          ball.x =</span><br><span class="line">              offsetX + j * <span class="number">2</span> * (_radius + <span class="number">1</span>) + (_radius + <span class="number">1</span>); <span class="comment">//第(i，j)个点圆心横坐标</span></span><br><span class="line">          ball.y = i * <span class="number">2</span> * (_radius + <span class="number">1</span>) + (_radius + <span class="number">1</span>); <span class="comment">//第(i，j)个点圆心纵坐标</span></span><br><span class="line">          ball.color = randomRGB();</span><br><span class="line">          ball.r = _radius;</span><br><span class="line">          _balls.add(ball);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 更新所有球的位置---让球运动</span></span><br><span class="line"><span class="comment">   * 并且越界移除</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="built_in">void</span> updateBalls() &#123;</span><br><span class="line">    <span class="built_in">double</span> maxX = <span class="number">400</span>; <span class="comment">//限定x范围大值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Ball ball <span class="keyword">in</span> _balls) &#123;</span><br><span class="line">      ball.x += ball.vX; <span class="comment">//x=xo+v*t-----t=1</span></span><br><span class="line">      ball.y += ball.vY;</span><br><span class="line">      ball.y += ball.aY; <span class="comment">//v=vo+a*t-----t=1</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ball.y &gt;= <span class="number">160</span>) &#123;</span><br><span class="line">        <span class="comment">//超过Y底线，反弹</span></span><br><span class="line">        ball.y = <span class="number">160</span>;</span><br><span class="line">        ball.vY = -ball.vY * <span class="number">0.99</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ball.x &gt; maxX) &#123;</span><br><span class="line">        <span class="comment">//超过X最大值，反弹</span></span><br><span class="line">        ball.x = maxX;</span><br><span class="line">        ball.vX = -ball.vX * <span class="number">0.99</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5秒清一次屏</span></span><br><span class="line">    <span class="keyword">if</span> (new DateTime.now().millisecondsSinceEpoch - tagOfBall &gt; <span class="number">5000</span>) &#123;</span><br><span class="line">      _balls.clear();</span><br><span class="line">      tagOfBall = new DateTime.now().millisecondsSinceEpoch;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><blockquote><p>好了，今天就这样，内容有点多，现在Dart的语法越用越熟练了</p></blockquote><hr><h4 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//颜色常量</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'dart:ui'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> colors = [</span><br><span class="line">  Color(<span class="number">0x8833B5E5</span>),</span><br><span class="line">  Color(<span class="number">0x880099CC</span>),</span><br><span class="line">  Color(<span class="number">0x889933CC</span>),</span><br><span class="line">  Color(<span class="number">0x8899CC00</span>),</span><br><span class="line">  Color(<span class="number">0x88669900</span>),</span><br><span class="line">  Color(<span class="number">0x88FFBB33</span>),</span><br><span class="line">  Color(<span class="number">0x88FF8800</span>),</span><br><span class="line">  Color(<span class="number">0x88FF4444</span>),</span><br><span class="line">  Color(<span class="number">0x88CC0000</span>)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> digit = [</span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">  ], <span class="comment">//1</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">  ], <span class="comment">//2</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//3</span></span><br><span class="line"></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">  ], <span class="comment">//4</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//5</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//6</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//7</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//8</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">  ], <span class="comment">//9</span></span><br><span class="line">  [</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">  ] <span class="comment">//:</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Flutter七日游第二天-2018-12-17-天气晴朗&quot;&gt;&lt;a href=&quot;#Flutter七日游第二天-2018-12-17-天气晴朗&quot; class=&quot;headerlink&quot; title=&quot;Flutter七日游第二天----2018-12-17----天气晴朗&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter七日游第二天----2018-12-17----天气晴朗&lt;/code&gt;&lt;/h4&gt;&lt;h4 id=&quot;零前言：&quot;&gt;&lt;a href=&quot;#零前言：&quot; class=&quot;headerlink&quot; title=&quot;零前言：&quot;&gt;&lt;/a&gt;零前言：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;昨天讲了一下Flutter的基础项目，介绍了一下Dart语言，简单的用Canvas绘个图&lt;br&gt;本来打算今天把内置控件看一下的,不过既然昨天把图都画了,今天不玩动画岂不可惜&lt;br&gt;今天主要是把动画理一下,顺便把Android-java粒子运动复刻到Flutter-Dart里&lt;br&gt;最后会实现一个粒子时钟，&lt;a href=&quot;https://juejin.im/post/5be7d3916fb9a04a0b21aeca&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Java版详见：Android原生绘图之炫酷倒计时&lt;/a&gt;&lt;br&gt;所以这篇会挺好玩的，瓜子，饮料，花生米备好，开始看吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&quot;先挑几个图镇楼吧&quot;&gt;&lt;a href=&quot;#先挑几个图镇楼吧&quot; class=&quot;headerlink&quot; title=&quot;先挑几个图镇楼吧&quot;&gt;&lt;/a&gt;先挑几个图镇楼吧&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://toly1994328.gitee.io/photo/flutter/seven_day/02/0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Flutter第1天--初始分析+Dart方言+Canvas简绘</title>
    <link href="http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/01.html"/>
    <id>http://blog.toly1994.com/Flutter%E4%B8%83%E6%97%A5/01.html</id>
    <published>2018-12-16T13:46:01.000Z</published>
    <updated>2020-05-03T23:58:15.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Flutter七日游第一天：2018-12-16-天气：冷"><a href="#Flutter七日游第一天：2018-12-16-天气：冷" class="headerlink" title="Flutter七日游第一天：2018-12-16 天气：冷"></a><code>Flutter七日游第一天：2018-12-16 天气：冷</code></h4><h4 id="零前言："><a href="#零前言：" class="headerlink" title="零前言："></a>零前言：</h4><blockquote><p>作为一名资深安卓业余爱好者(自诩),感觉应该入一下Flutter的坑了，<br>不管怎么说,新技术多少要了解一点,本系列就作为我的学习笔记吧<br>先把今天入坑的感觉写一写：  </p></blockquote><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>环境的搭建前人把雷踩得差不多了，也不是很麻烦</span><br><span class="line"><span class="number">2.</span>什么都没干呢，TM安装包<span class="number">28</span>M...真把我吓一跳-----于是Flutter的<span class="string">"胖子"</span>形象深入我心（不过非debug版能在<span class="number">10</span>M之内，还是可以接受的）  </span><br><span class="line"><span class="number">3.</span>Flutter热加载爽到爆，对于喜欢用真机的我，以前每次修改后--&gt;确定安装--&gt;打开...</span><br><span class="line"><span class="number">4.</span>单引号亮了，总算能像写其他语言那样少按个Shift了，字符串插值也很良心</span><br><span class="line"><span class="number">5.</span>flutter支持canvas,so我的四大战将(canvas,path,paint,贝塞尔)又能大显身手了,不过Api略有不同，也略显单薄</span><br><span class="line"><span class="number">6.</span>程序员有三件法宝：Ctrl+ Z(大胆改) , debug(细心查) , 类比（善分析）</span><br></pre></td></tr></table></figure><a id="more"></a><hr><h4 id="一、Flutter初体验"><a href="#一、Flutter初体验" class="headerlink" title="一、Flutter初体验"></a>一、Flutter初体验</h4><h5 id="1、下载Flutter的SDK"><a href="#1、下载Flutter的SDK" class="headerlink" title="1、下载Flutter的SDK"></a>1、下载Flutter的SDK</h5><blockquote><p>Android 的SDK要在环境变量配置一下：<code>ANDROID_HOME</code><br>有什么问题可以在cmd用<code>flutter doctor</code>命令检查一下，对症下药    </p></blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">-b</span> beta https://github.com/flutter/flutter.git</span><br></pre></td></tr></table></figure><hr><h5 id="2、配置环境变量"><a href="#2、配置环境变量" class="headerlink" title="2、配置环境变量"></a>2、配置环境变量</h5><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/0.png" alt="Flutter环境变量.png"></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PUB_HOSTED_URL=<span class="string">https:</span><span class="comment">//pub.flutter-io.cn</span></span><br><span class="line">FLUTTER_STORAGE_BASE_URL=<span class="string">https:</span><span class="comment">//storage.flutter-io.cn</span></span><br></pre></td></tr></table></figure><hr><h5 id="3、AndroidStudio安装Dart和Flutter插件"><a href="#3、AndroidStudio安装Dart和Flutter插件" class="headerlink" title="3、AndroidStudio安装Dart和Flutter插件"></a>3、AndroidStudio安装Dart和Flutter插件</h5><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">setting</span>--&gt;<span class="comment">plugins</span>--&gt;<span class="comment">下方第二个</span>--&gt;<span class="comment">搜索</span>--&gt;<span class="comment">安装</span>--&gt;<span class="comment">重启</span></span><br></pre></td></tr></table></figure><hr><h5 id="4、新建项目"><a href="#4、新建项目" class="headerlink" title="4、新建项目"></a>4、新建项目</h5><blockquote><p>打开AS后就能看到新建一个Flutter项目，然后就写名字<br>initializing gradle 如果一直不动，<code>android/gradle/wrapper/gradle-wrapper.properties</code><br>对应的gradle版本在<code>http://services.gradle.org/distributions/</code>自己下载，放在本地</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/1.png" alt="第一个Flutter项目.png"></p><hr><h4 id="二、第一次看初始项目的内心戏"><a href="#二、第一次看初始项目的内心戏" class="headerlink" title="二、第一次看初始项目的内心戏"></a>二、第一次看初始项目的内心戏</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">android：我最熟悉的android</span><br><span class="line">    |---app</span><br><span class="line">        |---src</span><br><span class="line"><span class="symbol">ios:</span>暂时不鸟它</span><br><span class="line"><span class="class"><span class="keyword">lib</span>:</span></span><br><span class="line">    |---main.dart</span><br><span class="line"><span class="symbol">test:</span>顾名思义，测试包</span><br><span class="line">.gitignore .metadata .packages pubspec.lock pubspec.yaml README.md  连包都没有，暂时不睬</span><br></pre></td></tr></table></figure><hr><h5 id="1-看一下：android-app-src-main-AndroidManifest-xml"><a href="#1-看一下：android-app-src-main-AndroidManifest-xml" class="headerlink" title="1.看一下：android/app/src/main/AndroidManifest.xml"></a>1.看一下：<code>android/app/src/main/AndroidManifest.xml</code></h5><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">application</span></span></span></span><br><span class="line"><span class="xml">    android:name="io.flutter.app.FlutterApplication"</span></span><br><span class="line"><span class="xml">    android:label="my_flutter"</span></span><br><span class="line"><span class="xml">    android:icon="@mipmap/ic_launcher"&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">activity</span></span></span></span><br><span class="line"><span class="xml">        android:name=".MainActivity"</span></span><br><span class="line"><span class="xml">      //略...</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span></span><br></pre></td></tr></table></figure><hr><h5 id="2-可见程序入口是：MainActivity-java"><a href="#2-可见程序入口是：MainActivity-java" class="headerlink" title="2.可见程序入口是：MainActivity.java"></a>2.可见程序入口是：MainActivity.java</h5><blockquote><p>让我有一种libgdx的即视感</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">FlutterActivity</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="type">GeneratedPluginRegistrant</span>.registerWith(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-GeneratedPluginRegistrant-java"><a href="#3-GeneratedPluginRegistrant-java" class="headerlink" title="3.GeneratedPluginRegistrant.java"></a>3.GeneratedPluginRegistrant.java</h5><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generated file. Do not edit.</span></span><br><span class="line"><span class="comment">    自动生成的文件，不要修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">GeneratedPluginRegistrant</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">registerWith</span><span class="params">(PluginRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (alreadyRegisteredWith(registry)) &#123;<span class="comment">//如已结婚,直接走人</span></span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="comment">//貌似是判断是否已经和registry结成连理</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">alreadyRegisteredWith</span><span class="params">(PluginRegistry registry)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">String</span> key = GeneratedPluginRegistrant.class.getCanonicalName();</span><br><span class="line">    <span class="keyword">if</span> (registry.hasPlugin(key)) &#123;<span class="comment">//有结婚戒指,直接走人</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    registry.registrarFor(key);<span class="comment">//带上戒指</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="4、是谁弄脏了我雪白的界面-显示"><a href="#4、是谁弄脏了我雪白的界面-显示" class="headerlink" title="4、是谁弄脏了我雪白的界面(显示)"></a>4、是谁弄脏了我雪白的界面(显示)</h5><h6 id="4-1-MainActivity显然不是，怎么查在哪呢"><a href="#4-1-MainActivity显然不是，怎么查在哪呢" class="headerlink" title="4.1.MainActivity显然不是，怎么查在哪呢?"></a>4.1.MainActivity显然不是，怎么查在哪呢?</h6><blockquote><p>好吧在：main.dart里  </p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/2.png" alt="搜索已有字符.png"></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'package:flutter/material.dart'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main() =&gt; runApp(MyApp());</span><br><span class="line"></span><br><span class="line">------------<span class="comment">//内心戏--------------</span></span><br><span class="line">开面相对象的天眼一看：`<span class="keyword">void</span> main() =&gt; runApp(MyApp());`  </span><br><span class="line">什么鬼,不像Python,不像JavaScript,更不像Java,但我仿佛知道它想对我什么：  </span><br><span class="line">我是入口函数,执行runApp函数,里面传入了个MyApp(),so,我是清白的，熊孩子是MyApp()</span><br></pre></td></tr></table></figure><hr><h6 id="4-2-对MyApp的认知"><a href="#4-2-对MyApp的认知" class="headerlink" title="4.2.对MyApp的认知"></a>4.2.对MyApp的认知</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyApp</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">MaterialApp</span>(</span><br><span class="line">      title: <span class="symbol">'Flutter</span> <span class="type">Demo</span>',</span><br><span class="line">      theme: <span class="type">ThemeData</span>(</span><br><span class="line">        primarySwatch: <span class="type">Colors</span>.blue,</span><br><span class="line">      ),</span><br><span class="line">      home: <span class="type">MyHomePage</span>(title: <span class="symbol">'Flutter</span> <span class="type">Demo</span> <span class="type">Home</span> <span class="type">Page</span>'),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">------------<span class="comment">//内心戏--------------</span></span><br><span class="line">看到<span class="class"><span class="keyword">class</span><span class="title">有种他乡遇故知的感觉，继承了StatelessWidget类并重写了其build方法</span></span></span><br><span class="line"><span class="class"><span class="title">然后返回了一个Widget对象</span>,<span class="title">并可以推理出MaterialApp</span>(<span class="params"></span>)<span class="title">是一个Widget类对象</span></span></span><br><span class="line"><span class="class"><span class="title">其中括号里的感觉非常像Python的字典或JavaScript的对象，不过用</span>(<span class="params"></span>)<span class="title">包起来真怪怪的</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">按照一般的套路，左边是属性，右边是属性值，既然如此，玩玩呗</span>.<span class="title">下面改了一下theme颜色</span></span></span><br><span class="line"><span class="class"><span class="title">home里传入了一个MyHomePage</span>,<span class="title">估计就是我们要找的人了</span>,<span class="title">title改一下</span></span></span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/3.png" alt="flutter1.png"></p><hr><h6 id="4-3-对MyHomePage的认知"><a href="#4-3-对MyHomePage的认知" class="headerlink" title="4.3.对MyHomePage的认知"></a>4.3.对MyHomePage的认知</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="type">String</span> title;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _MyHomePageState createState() =&gt; _MyHomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">------------<span class="comment">//内心戏--------------</span></span><br><span class="line"><span class="type">MyHomePage</span>也是<span class="type">StatefulWidget</span>家的,第一句话感觉挺诡异，先mark一下</span><br><span class="line"><span class="keyword">super</span>(key: key)应该是说，key用它爸(即<span class="type">StatefulWidget</span>)的，从上一步的入参title来看</span><br><span class="line"><span class="keyword">this</span>.title应该是入参的关键，so,这句话好像在说，我要两个参数，key从我爸那里拿</span><br><span class="line"></span><br><span class="line"><span class="meta">@override</span>可以看出createState()是一个父类方法,_MyHomePageState是一个类</span><br><span class="line">也就说明 _MyHomePageState()是一个对象,(ps:看到<span class="type">State</span>直接想到<span class="type">React</span>)</span><br></pre></td></tr></table></figure><hr><h6 id="4-4-对-MyHomePageState的认知"><a href="#4-4-对-MyHomePageState的认知" class="headerlink" title="4.4.对_MyHomePageState的认知"></a>4.4.对_MyHomePageState的认知</h6><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State&lt;MyHomePage&gt;</span> </span>&#123;</span><br><span class="line">  int _counter = <span class="number">0</span>;<span class="comment">//定义变量</span></span><br><span class="line"></span><br><span class="line">  void _incrementCounter() &#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _counter++;<span class="comment">//定义变量++</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">------------<span class="comment">//内心戏--------------</span></span><br><span class="line"><span class="comment">//结合JS和Python的经验，从这里可以看出，貌似加_的，是不想暴露在外的内部成员  </span></span><br><span class="line">_incrementCounter()显然是一个累加的方法，setState()里的东西让_counter++  </span><br><span class="line">setState个<span class="type">React</span>这是一模一样，mark一下，估计会刷新界面</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="type">Widget</span> build(<span class="type">BuildContext</span> context) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Scaffold</span>(</span><br><span class="line">      appBar: <span class="type">AppBar</span>(</span><br><span class="line">        title: <span class="type">Text</span>(widget.title),</span><br><span class="line">      ),</span><br><span class="line">      body: <span class="type">Center</span>(</span><br><span class="line">        child: <span class="type">Column</span>(</span><br><span class="line">          mainAxisAlignment: <span class="type">MainAxisAlignment</span>.center,</span><br><span class="line">          children: &lt;<span class="type">Widget</span>&gt;[</span><br><span class="line">            <span class="type">Text</span>(</span><br><span class="line">              <span class="symbol">'You</span> have pushed the button <span class="keyword">this</span> many times:',</span><br><span class="line">            ),</span><br><span class="line">            <span class="type">Text</span>(</span><br><span class="line">              '$_counter',</span><br><span class="line">              style: <span class="type">Theme</span>.of(context).textTheme.display1,</span><br><span class="line">            ),</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      </span><br><span class="line">------------<span class="comment">//内心戏--------------</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">State&lt;T</span> <span class="keyword">extends</span> <span class="title">StatefulWidget&gt;</span> <span class="keyword">extends</span> <span class="title">Diagnosticable</span></span></span><br><span class="line"><span class="class"><span class="title">State有一个StatefulWidget的泛型</span>,<span class="title">也重写了build方法</span></span></span><br><span class="line"><span class="class">[class <span class="type">Scaffold</span> extends <span class="type">StatefulWidget</span>] <span class="title">Scaffold也是StatefulWidget</span></span></span><br><span class="line"><span class="class"><span class="title">现在焦点应该汇聚在StatefulWidget身上，很多地方都出现了</span>,<span class="title">mark一下</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">Text</span>(<span class="params">widget.title</span>)<span class="title">----这里应该就是标题了，AppBar，顾名思义</span></span></span><br><span class="line"><span class="class"><span class="title">body应该是身体，Center，中间，child，孩子，Column列，mainAxisAlignment，主轴对齐，</span></span></span><br><span class="line"><span class="class"><span class="title">center中间，children孩子，Text文字：You</span> <span class="title">have</span> <span class="title">pushed</span> <span class="title">the</span> <span class="title">button</span> <span class="title">this</span> <span class="title">many</span> <span class="title">times</span></span>:</span><br><span class="line">感觉蛮好玩的，拼在一起大概是，列作为孩子居中，并将文本作为孩子主轴对齐方式居中</span><br></pre></td></tr></table></figure><h6 id="4-5-floatingActionButton-这个安卓元素有"><a href="#4-5-floatingActionButton-这个安卓元素有" class="headerlink" title="4.5.floatingActionButton,这个安卓元素有"></a>4.5.floatingActionButton,这个安卓元素有</h6><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">      <span class="attribute">floatingActionButton</span>: FloatingActionButton(</span><br><span class="line">        <span class="attribute">onPressed</span>: _incrementCounter,</span><br><span class="line">        <span class="attribute">tooltip</span>: <span class="string">'Increment'</span>,</span><br><span class="line">        <span class="attribute">child</span>: Icon(Icons.add),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//onPressed:点击响应的函数  tooltip--长按显示文字  child--Icon加号图片</span></span><br></pre></td></tr></table></figure><blockquote><p>ok,这就是我第一次看Flutter代码时的感觉，mark了三处，<br>下面带着问题正式学一下Dart方言。</p></blockquote><hr><h4 id="三、Dart语法一探"><a href="#三、Dart语法一探" class="headerlink" title="三、Dart语法一探"></a>三、Dart语法一探</h4><h5 id="1、圆的周长"><a href="#1、圆的周长" class="headerlink" title="1、圆的周长"></a>1、圆的周长</h5><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> PI = <span class="number">3.141592654</span>; <span class="comment">//const：编译时就是常量</span></span><br><span class="line"><span class="comment">//const double PI = 3.141592654;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> x = <span class="number">50</span>; <span class="comment">//final修饰的变量只能被赋值一次(运行时)</span></span><br><span class="line"><span class="comment">//final int x = 100;</span></span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line"><span class="comment">//  int radius = 10;</span></span><br><span class="line">  var radius = <span class="number">10</span>;</span><br><span class="line">   <span class="comment">//radius = 10.0;//Error--A value of type 'double' can't be assigned to a variable of type 'int'.</span></span><br><span class="line">  <span class="built_in">double</span> c = getC(radius);</span><br><span class="line">  <span class="comment">//支持三目运算符</span></span><br><span class="line">  <span class="built_in">bool</span> isBig = c &gt; x;</span><br><span class="line">  print(isBig ? <span class="string">"圆的周长大于$&#123;x&#125;"</span> : <span class="string">r"圆的周长\n小于$&#123;x&#125;"</span>*<span class="number">2</span>);</span><br><span class="line">  <span class="comment">//x=100 圆的周长\n小于$&#123;x&#125;圆的周长\n小于$&#123;x&#125;</span></span><br><span class="line">  <span class="comment">//x=50 圆的周长大于50</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取圆的周长 radius : 半径</span></span><br><span class="line"><span class="built_in">double</span> getC(<span class="keyword">int</span> radius) &#123;</span><br><span class="line">  var c = <span class="number">2</span> * PI * radius;</span><br><span class="line">  <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>1.感觉const就像英雄天生天赋,final就像等级到了,选择英雄职业(不能转职)<br>2.r会将里面字符串原样打出，无视各空白符<br>3.字符串*2就打印两次，有点意思，差值表达式：<code>${}</code>和JS,kotlin相似<br>4.可以省略类型，但是若初始时赋值就不能再赋值其他类型，所以Dart并非弱类型语言!!!<br>但说它强又不怎么严谨，看下图，无力吐槽…(PS:原因：见后面dynamic类型)</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/4.png" alt="mark2018-12-15 22-52-33.png">  </p><hr><h5 id="2-List的使用"><a href="#2-List的使用" class="headerlink" title="2.List的使用"></a>2.List的使用</h5><blockquote><p>支持多类型，API比java多一些<br>可以看成Java的ArrayList和数组的结合体，any,join等操作更像Python或js中的list</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">baseUse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  var <span class="built_in">list</span> = [<span class="number">1</span>, <span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="literal">true</span>]; <span class="comment">//支持多种类型</span></span><br><span class="line">  <span class="comment">//  var list=const[1,"a","b","c",true];</span></span><br><span class="line">  <span class="comment">//  var list =new List();</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">list</span>[<span class="number">0</span>] = <span class="string">"10"</span>; <span class="comment">//数组元素可修改成不同类型</span></span><br><span class="line">  var el = <span class="built_in">list</span>[<span class="built_in">list</span>.length - <span class="number">1</span>]; <span class="comment">//获取--true</span></span><br><span class="line">  <span class="built_in">list</span>.add(<span class="string">"toly"</span>); <span class="comment">//尾增--[10, a, b, c, true, toly]</span></span><br><span class="line">  <span class="built_in">list</span>.insert(<span class="number">1</span>, <span class="literal">true</span>); <span class="comment">//定点增--[10, true, a, b, c, true, toly]</span></span><br><span class="line">  <span class="built_in">list</span>.<span class="built_in">remove</span>(<span class="string">"10"</span>); <span class="comment">//删除元素--[true, a, b, c, true, toly]</span></span><br><span class="line">  <span class="built_in">list</span>.indexOf(<span class="literal">true</span>); <span class="comment">//首出索引--1</span></span><br><span class="line">  <span class="built_in">list</span>.lastIndexOf(<span class="literal">true</span>); <span class="comment">//尾出索引--4</span></span><br><span class="line">  <span class="built_in">list</span>.removeLast(); <span class="comment">//移除尾--[true, a, b, c, true]</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">list</span>.sublist(<span class="number">2</span>)); <span class="comment">//截取--[b, c, true]</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">list</span>.sublist(<span class="number">2</span>, <span class="number">4</span>)); <span class="comment">//截取--[b, c]</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">list</span>);</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">list</span>.join(<span class="string">"!"</span>)); <span class="comment">//true!a!b!c!true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="forEach、any、every、map"><a href="#forEach、any、every、map" class="headerlink" title="forEach、any、every、map"></a>forEach、any、every、map</h6><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> op() &#123;</span><br><span class="line">  <span class="keyword">var</span> numList = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">  numList.sort();</span><br><span class="line">  <span class="built_in">print</span>(numList); <span class="comment">//排序--[1, 2, 3, 4, 5]</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> value <span class="keyword">in</span> numList) &#123;</span><br><span class="line">    <span class="built_in">print</span>(value); <span class="comment">//1,2,3,4,5</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  numList.forEach(addOne); <span class="comment">//2,3,4,5,6</span></span><br><span class="line">  numList.forEach((<span class="built_in">num</span>) =&gt; <span class="built_in">print</span>(<span class="built_in">num</span> + <span class="number">1</span>)); <span class="comment">//同上</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> any = numList.any((<span class="built_in">num</span>) =&gt; <span class="built_in">num</span> &gt; <span class="number">3</span>);</span><br><span class="line">  <span class="built_in">print</span>(any); <span class="comment">//只要有&gt;3的任何元素,返回true</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> every = numList.every((<span class="built_in">num</span>) =&gt; <span class="built_in">num</span> &lt; <span class="number">6</span>);</span><br><span class="line">  <span class="built_in">print</span>(every); <span class="comment">//全部元素&lt;6,返回true</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> listX5 = numList.map((e) =&gt; e*=<span class="number">5</span>);</span><br><span class="line">  <span class="built_in">print</span>(listX5);<span class="comment">//(5, 10, 15, 20, 25)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> addOne(<span class="built_in">int</span> <span class="built_in">num</span>) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="built_in">num</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-Map"><a href="#3-Map" class="headerlink" title="3.Map"></a>3.Map</h5><blockquote><p>这个不多说了，基本上与主流语言一致</p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">baseUse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">//创建映射表</span></span><br><span class="line">  var dict = &#123;<span class="string">"a"</span>: <span class="string">"page1"</span>, <span class="string">"b"</span>: <span class="string">"page30"</span>, <span class="string">"c"</span>: <span class="string">"page70"</span>, <span class="string">"price"</span>: <span class="number">40</span>&#125;;</span><br><span class="line"><span class="comment">//  var dict = new Map();</span></span><br><span class="line">  <span class="built_in">print</span>(dict); <span class="comment">//&#123;a: page1, b: page30, c: page70, price: 40&#125;</span></span><br><span class="line">  <span class="built_in">print</span>(dict[<span class="string">"price"</span>]); <span class="comment">//40</span></span><br><span class="line">  dict[<span class="string">"a"</span>] = <span class="string">"page2"</span>;</span><br><span class="line">  <span class="built_in">print</span>(dict); <span class="comment">//&#123;a: page2, b: page30, c: page70, price: 40&#125;</span></span><br><span class="line">  <span class="built_in">print</span>(dict.containsKey(<span class="string">"price"</span>)); <span class="comment">//true</span></span><br><span class="line">  <span class="built_in">print</span>(dict.containsValue(<span class="string">"price"</span>)); <span class="comment">//false</span></span><br><span class="line">  <span class="built_in">print</span>(dict.isEmpty); <span class="comment">//false</span></span><br><span class="line">  <span class="built_in">print</span>(dict.isNotEmpty); <span class="comment">//true</span></span><br><span class="line">  <span class="built_in">print</span>(dict.length); <span class="comment">//4</span></span><br><span class="line">  dict.<span class="built_in">remove</span>(<span class="string">"c"</span>);</span><br><span class="line">  <span class="built_in">print</span>(dict);<span class="comment">//&#123;a: page2, b: page30, price: 40&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> op() &#123;</span><br><span class="line">  <span class="keyword">var</span> dict = &#123;<span class="string">"a"</span>: <span class="string">"page1"</span>, <span class="string">"b"</span>: <span class="string">"page30"</span>, <span class="string">"c"</span>: <span class="string">"page70"</span>, <span class="string">"price"</span>: <span class="number">40</span>&#125;;</span><br><span class="line">  dict.keys.forEach(<span class="built_in">print</span>); <span class="comment">//a,b,c,price</span></span><br><span class="line">  dict.values.forEach(<span class="built_in">print</span>); <span class="comment">//a,b,c,price</span></span><br><span class="line">  dict.forEach((k, v) =&gt; (<span class="built_in">print</span>(<span class="string">"<span class="subst">$k</span>=<span class="subst">$v</span>"</span>))); <span class="comment">//这里用括号包着，好想吐槽...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="4-dynamic-动态的"><a href="#4-dynamic-动态的" class="headerlink" title="4.dynamic(动态的)"></a>4.dynamic(动态的)</h5><blockquote><p>原来是dynamic锅,让类型变成动态了</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/5.png" alt="dynamic.png"></p><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/6.png" alt="int.png"></p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dynamic d = <span class="number">20</span>;</span><br><span class="line">d = <span class="string">"toly"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">list</span> = <span class="keyword">new</span> <span class="keyword">List</span>&lt;dynamic&gt;();</span><br><span class="line"><span class="keyword">list</span>.add(<span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">list</span>.add(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list2 = <span class="keyword">new</span> <span class="keyword">List</span>&lt;<span class="keyword">int</span>&gt;();</span><br><span class="line"><span class="comment">//list2.add("toly");//ERROR:The argument type 'String' can't be assigned to the parameter type 'int'.</span></span><br></pre></td></tr></table></figure><hr><h5 id="5-不同的东西"><a href="#5-不同的东西" class="headerlink" title="5.不同的东西"></a>5.不同的东西</h5><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------奇葩的~/----------</span></span><br><span class="line">int a=<span class="number">10</span>;</span><br><span class="line">print(a/<span class="number">3</span>);<span class="comment">//3.3333333333333335</span></span><br><span class="line">print(a~/<span class="number">3</span>);<span class="comment">//3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------奇葩的??=----------</span></span><br><span class="line">int b = <span class="number">9</span>;</span><br><span class="line">b = <span class="number">5</span>;</span><br><span class="line">b ??= a; <span class="comment">//----如果b空的则赋值</span></span><br><span class="line">print(b); <span class="comment">//5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------奇葩的??----------</span></span><br><span class="line">int c = <span class="number">10</span>;</span><br><span class="line">int d = <span class="number">8</span>;</span><br><span class="line"><span class="keyword">var</span> add10 = c = <span class="literal">null</span> ?? d + <span class="number">10</span>;<span class="comment">//取第一个不为空的表达式</span></span><br><span class="line">print(add10); <span class="comment">//18</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------简洁的=&gt;----------</span></span><br><span class="line">=&gt; expr   等价于  &#123;<span class="keyword">return</span> expr;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------好玩的&#123;参数&#125;----------</span></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="function"><span class="title">fun</span><span class="params">(<span class="string">"toly"</span>)</span></span>;<span class="comment">//toly,24,null</span></span><br><span class="line">  <span class="function"><span class="title">fun</span><span class="params">(<span class="string">"toly"</span>, age: 24, sex: "男")</span></span>; <span class="comment">//toly,24,男</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">(String name, &#123;int age=<span class="number">24</span>, String sex&#125;)</span></span> &#123;</span><br><span class="line">  print(<span class="string">"<span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$sex</span>"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------好玩的[参数]----------</span></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="function"><span class="title">fun</span><span class="params">(<span class="string">"toly"</span>)</span></span>; <span class="comment">//toly,null,null</span></span><br><span class="line">  fun2(<span class="string">"toly"</span>, <span class="number">24</span>); <span class="comment">//toly,24, 男</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun2(String name, [int age, String sex= <span class="string">"男"</span>]) &#123;</span><br><span class="line">  print(<span class="string">"<span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$sex</span>"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------有趣的匿名方法----------</span></span><br><span class="line">  <span class="keyword">var</span> power = (i) &#123;</span><br><span class="line">    <span class="keyword">return</span> i * i;</span><br><span class="line">  &#125;;</span><br><span class="line">  print(power(<span class="number">6</span>)); <span class="comment">//36</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//--------------------这个理清楚,基本上匿名函数就OK了----------</span></span><br><span class="line"><span class="keyword">var</span> li = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">li.forEach((i) =&gt; print((i) &#123;</span><br><span class="line">      <span class="keyword">return</span> i * i;</span><br><span class="line">    &#125;(i))); <span class="comment">//1,4,9,16,25</span></span><br></pre></td></tr></table></figure><hr><h5 id="6-类那点事"><a href="#6-类那点事" class="headerlink" title="6.类那点事"></a>6.类那点事</h5><h6 id="6-1：定义一个简单的类"><a href="#6-1：定义一个简单的类" class="headerlink" title="6.1：定义一个简单的类"></a>6.1：定义一个简单的类</h6><blockquote><p><code>PerSon(this.name, this.age)</code>简化了Java中的那一坨,其他差不多</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PerSon</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">int</span> age;</span><br><span class="line"></span><br><span class="line">  PerSon(<span class="keyword">this</span>.name, <span class="keyword">this</span>.age);</span><br><span class="line"></span><br><span class="line">  say(<span class="built_in">String</span> name) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"are you ok <span class="subst">$name</span>"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main()&#123;</span><br><span class="line">  <span class="keyword">var</span> toly = <span class="keyword">new</span> PerSon(<span class="string">"toly"</span>, <span class="number">24</span>);</span><br><span class="line">  toly.say(<span class="string">"ls"</span>);<span class="comment">//are you ok ls</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="6-2：继承"><a href="#6-2：继承" class="headerlink" title="6.2：继承"></a>6.2：继承</h6><blockquote><p>注意语法形式</p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">PerSon</span> </span>&#123;</span><br><span class="line">  <span class="type">String</span> school;</span><br><span class="line">  <span class="type">Student</span>(<span class="type">String</span> name, int age, <span class="keyword">this</span>.school) : <span class="keyword">super</span>(name, age);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main() &#123;</span><br><span class="line">  <span class="keyword">new</span> <span class="type">Student</span>(<span class="string">"ls"</span>, <span class="number">23</span>, <span class="string">"星龙学院"</span>).say(<span class="string">"toly"</span>);<span class="comment">//are you ok toly</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>就先认知这么多吧，应该够玩一玩的了。</p></blockquote><hr><h4 id="四、Canvas走起"><a href="#四、Canvas走起" class="headerlink" title="四、Canvas走起"></a>四、Canvas走起</h4><blockquote><p>新学一样东西，最好选择最熟悉的点切入，对我而言是绘制</p></blockquote><h5 id="1-找到画板在哪"><a href="#1-找到画板在哪" class="headerlink" title="1.找到画板在哪"></a>1.找到画板在哪</h5><blockquote><p>有个<code>CustomPainter</code>类里有canvas,二话不说,继承之,为了避免看着乱，我新建了view包   <code>view/star_view.dart</code></p></blockquote><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="symbol">'dart</span>:ui';</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/cupertino.dart';</span><br><span class="line"><span class="keyword">import</span> <span class="symbol">'package</span>:flutter/material.dart';</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StarView</span> <span class="keyword">extends</span> <span class="title">CustomPainter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  void paint(<span class="type">Canvas</span> canvas, <span class="type">Size</span> size) &#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  bool shouldRepaint(<span class="type">CustomPainter</span> oldDelegate) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="2-StarView的用法"><a href="#2-StarView的用法" class="headerlink" title="2.StarView的用法"></a>2.StarView的用法</h5><blockquote><p>前面分析过，视图的呈现在MyHomePage中–&gt;createState方法–&gt;build返回的对象里<br>把文字的那块body改为CustomPaint就行了,FloatingActionButton就放着吧。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@override</span></span><br><span class="line">Widget build(BuildContext context) &#123;</span><br><span class="line">  <span class="selector-tag">return</span> <span class="selector-tag">Scaffold</span>(</span><br><span class="line">    <span class="attribute">appBar</span>: AppBar(</span><br><span class="line">      <span class="attribute">title</span>: Text(widget.title),</span><br><span class="line">    ),</span><br><span class="line">    <span class="attribute">body</span>: CustomPaint(</span><br><span class="line">      <span class="attribute">painter</span>: StarView(),</span><br><span class="line">    ),</span><br><span class="line">    <span class="attribute">floatingActionButton</span>: FloatingActionButton(</span><br><span class="line">      <span class="attribute">onPressed</span>: _incrementCounter,</span><br><span class="line">      <span class="attribute">tooltip</span>: <span class="string">'Increment'</span>,</span><br><span class="line">      <span class="attribute">child</span>: Icon(Icons.add),</span><br><span class="line">    ),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="3-屏幕尺寸的获取"><a href="#3-屏幕尺寸的获取" class="headerlink" title="3.屏幕尺寸的获取"></a>3.屏幕尺寸的获取</h5><blockquote><p>flutter中用的单位目测都是dp所以我用第三行那个,需要传入一个context<br>就在构造方法里传一下，刚好build里有个context,你用前两个除一下也行  </p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">window.physicalSize     <span class="string">//</span>获取屏幕尺寸px<span class="params">----1080</span>.0, 2196.0</span><br><span class="line">window.devicePixelRatio <span class="string">//</span>设备像素比<span class="params">----3</span></span><br><span class="line">MediaQuery.of<span class="params">(context)</span><span class="string">.size</span>  <span class="string">//</span>获得的是dp单位<span class="function">:360.0</span>, 732.0</span><br></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用是传入context</span></span><br><span class="line"><span class="symbol"> body:</span> CustomPaint(</span><br><span class="line"><span class="symbol">   painter:</span> StarView(context),</span><br><span class="line"> ),</span><br></pre></td></tr></table></figure><hr><h5 id="4-网格走起："><a href="#4-网格走起：" class="headerlink" title="4.网格走起："></a>4.网格走起：</h5><h6 id="4-1：StarView接收context-并初始化画笔"><a href="#4-1：StarView接收context-并初始化画笔" class="headerlink" title="4.1：StarView接收context,并初始化画笔"></a>4.1：StarView接收context,并初始化画笔</h6><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Paint mHelpPaint;</span><br><span class="line">BuildContext context;</span><br><span class="line"></span><br><span class="line"><span class="constructor">StarView(<span class="params">this</span>.<span class="params">context</span>)</span> &#123;</span><br><span class="line">  mHelpPaint = <span class="keyword">new</span> <span class="constructor">Paint()</span>;</span><br><span class="line">  mHelpPaint.style=<span class="module-access"><span class="module"><span class="identifier">PaintingStyle</span>.</span></span>stroke;</span><br><span class="line">  mHelpPaint.color=<span class="constructor">Color(0xffBBC3C5)</span>;</span><br><span class="line">  mHelpPaint.isAntiAlias=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="4-2-绘制网格路径"><a href="#4-2-绘制网格路径" class="headerlink" title="4.2:绘制网格路径"></a>4.2:绘制网格路径</h6><blockquote><p>以前Android里面用的函数，修改了一些语法，给flutter用</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制网格路径</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param step    小正方形边长</span></span><br><span class="line"><span class="comment"> * @param winSize 屏幕尺寸</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Path grid<span class="constructor">Path(<span class="params">int</span> <span class="params">step</span>, Size <span class="params">winSize</span>)</span> &#123;</span><br><span class="line">  Path path = <span class="keyword">new</span> <span class="constructor">Path()</span>;</span><br><span class="line"></span><br><span class="line">  for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; winSize.height<span class="operator"> / </span>step + <span class="number">1</span>; i++) &#123;</span><br><span class="line">    path.move<span class="constructor">To(0, <span class="params">step</span> <span class="operator">*</span> <span class="params">i</span>.<span class="params">toDouble</span>()</span>);</span><br><span class="line">    path.line<span class="constructor">To(<span class="params">winSize</span>.<span class="params">width</span>, <span class="params">step</span> <span class="operator">*</span> <span class="params">i</span>.<span class="params">toDouble</span>()</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; winSize.width<span class="operator"> / </span>step + <span class="number">1</span>; i++) &#123;</span><br><span class="line">    path.move<span class="constructor">To(<span class="params">step</span> <span class="operator">*</span> <span class="params">i</span>.<span class="params">toDouble</span>()</span>, <span class="number">0</span>);</span><br><span class="line">    path.line<span class="constructor">To(<span class="params">step</span> <span class="operator">*</span> <span class="params">i</span>.<span class="params">toDouble</span>()</span>, winSize.height);</span><br><span class="line">  &#125;</span><br><span class="line">  return path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="4-3-绘制网格"><a href="#4-3-绘制网格" class="headerlink" title="4.3:绘制网格"></a>4.3:绘制网格</h6><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">override</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">paint</span><span class="params">(Canvas canvas, Size <span class="built_in">size</span>)</span> </span>&#123;</span><br><span class="line">  var winSize = MediaQuery.of(context).<span class="built_in">size</span>;</span><br><span class="line">  canvas.drawPath(gridPath(<span class="number">20</span>, winSize), mHelpPaint);</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/7.png" alt="网格"></p><hr><h5 id="4-4-坐标系绘制"><a href="#4-4-坐标系绘制" class="headerlink" title="4.4:坐标系绘制"></a>4.4:坐标系绘制</h5><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/8.png" alt="坐标系"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//绘制坐标系</span></span><br><span class="line">draw<span class="constructor">Coo(Canvas <span class="params">canvas</span>, Size <span class="params">coo</span>, Size <span class="params">winSize</span>)</span> &#123;</span><br><span class="line">  <span class="comment">//初始化网格画笔</span></span><br><span class="line">  Paint paint = <span class="keyword">new</span> <span class="constructor">Paint()</span>;</span><br><span class="line">  paint.strokeWidth = <span class="number">2</span>;</span><br><span class="line">  paint.style = <span class="module-access"><span class="module"><span class="identifier">PaintingStyle</span>.</span></span>stroke;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//绘制直线</span></span><br><span class="line">  canvas.draw<span class="constructor">Path(<span class="params">cooPath</span>(<span class="params">coo</span>, <span class="params">winSize</span>)</span>, paint);</span><br><span class="line">  <span class="comment">//左箭头</span></span><br><span class="line">  canvas.draw<span class="constructor">Line(<span class="params">new</span> Offset(<span class="params">winSize</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="constructor">Offset(<span class="params">winSize</span>.<span class="params">width</span> - 10, <span class="params">coo</span>.<span class="params">height</span> - 6)</span>, paint);</span><br><span class="line">  canvas.draw<span class="constructor">Line(<span class="params">new</span> Offset(<span class="params">winSize</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="constructor">Offset(<span class="params">winSize</span>.<span class="params">width</span> - 10, <span class="params">coo</span>.<span class="params">height</span> + 6)</span>, paint);</span><br><span class="line">  <span class="comment">//下箭头</span></span><br><span class="line">  canvas.draw<span class="constructor">Line(<span class="params">new</span> Offset(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">winSize</span>.<span class="params">height</span>-90)</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="constructor">Offset(<span class="params">coo</span>.<span class="params">width</span> - 6, <span class="params">winSize</span>.<span class="params">height</span> - 10-90)</span>, paint);</span><br><span class="line">  canvas.draw<span class="constructor">Line(<span class="params">new</span> Offset(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">winSize</span>.<span class="params">height</span>-90)</span>,</span><br><span class="line">      <span class="keyword">new</span> <span class="constructor">Offset(<span class="params">coo</span>.<span class="params">width</span> + 6, <span class="params">winSize</span>.<span class="params">height</span> - 10-90)</span>, paint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>坐标系路径</p></blockquote><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 坐标系路径</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param coo     坐标点</span></span><br><span class="line"><span class="comment"> * @param winSize 屏幕尺寸</span></span><br><span class="line"><span class="comment"> * @return 坐标系路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Path coo<span class="constructor">Path(Size <span class="params">coo</span>, Size <span class="params">winSize</span>)</span> &#123;</span><br><span class="line">  Path path = <span class="keyword">new</span> <span class="constructor">Path()</span>;</span><br><span class="line">  <span class="comment">//x正半轴线</span></span><br><span class="line">  path.move<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  path.line<span class="constructor">To(<span class="params">winSize</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  <span class="comment">//x负半轴线</span></span><br><span class="line">  path.move<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  path.line<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span> - <span class="params">winSize</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  <span class="comment">//y负半轴线</span></span><br><span class="line">  path.move<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  path.line<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span> - <span class="params">winSize</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  <span class="comment">//y负半轴线</span></span><br><span class="line">  path.move<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">coo</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  path.line<span class="constructor">To(<span class="params">coo</span>.<span class="params">width</span>, <span class="params">winSize</span>.<span class="params">height</span>)</span>;</span><br><span class="line">  return path;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="5-小结一下"><a href="#5-小结一下" class="headerlink" title="5.小结一下"></a>5.小结一下</h5><blockquote><p>感觉flutter里的Canvas很贫弱…好多api都没有,不知道是我没找到还是什么<br>canvas竟然没办法画文字,这不科学，mark一下。坐标系也就只能这样凑合一下了<br>还有Color用着挺别扭的,画线传参为什么非要Offset,连个重载都没有  </p></blockquote><hr><h5 id="6-绘制n角星"><a href="#6-绘制n角星" class="headerlink" title="6.绘制n角星"></a>6.绘制n角星</h5><blockquote><p>好吧，我又要拿星星来丢人现眼了<br>我已经n角星的java代码翻译成dart方言了</p></blockquote><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/9.png" alt="五角星分析"></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * n角星路径</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param num 几角星</span></span><br><span class="line"><span class="comment"> * @param R   外接圆半径</span></span><br><span class="line"><span class="comment"> * @param r   内接圆半径</span></span><br><span class="line"><span class="comment"> * @return n角星路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">Path</span> nStarPath(<span class="type">int</span> num, <span class="type">double</span> R, <span class="type">double</span> r) &#123;</span><br><span class="line">  <span class="keyword">Path</span> <span class="keyword">path</span> = <span class="built_in">new</span> Path();</span><br><span class="line">  <span class="type">double</span> perDeg = <span class="number">360</span> / num; //尖角的度数</span><br><span class="line">  <span class="type">double</span> degA = perDeg / <span class="number">2</span> / <span class="number">2</span>;</span><br><span class="line">  <span class="type">double</span> degB = <span class="number">360</span> / (num - <span class="number">1</span>) / <span class="number">2</span> - degA / <span class="number">2</span> + degA;</span><br><span class="line"></span><br><span class="line">  <span class="type">path</span>.moveTo(cos(_rad(degA)) * R, (-sin(_rad(degA)) * R));</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">    <span class="type">path</span>.lineTo(</span><br><span class="line">        cos(_rad(degA + perDeg * i)) * R, -sin(_rad(degA + perDeg * i)) * R);</span><br><span class="line">    <span class="type">path</span>.lineTo(</span><br><span class="line">        cos(_rad(degB + perDeg * i)) * r, -sin(_rad(degB + perDeg * i)) * r);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">path</span>.<span class="keyword">close</span>();</span><br><span class="line">  <span class="keyword">return</span> <span class="type">path</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> _rad(<span class="type">double</span> deg) &#123;</span><br><span class="line">  <span class="keyword">return</span> deg * pi / <span class="number">180</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">canvas.translate(<span class="number">160</span>, <span class="number">320</span>);<span class="comment">//移动到坐标系原点</span></span><br><span class="line">canvas.drawPath(nStarPath(<span class="number">5</span>,<span class="number">80</span>,<span class="number">40</span>), mPaint);</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/10.png" alt="五角星.png"></p><hr><h5 id="7-正n角星和正多边形"><a href="#7-正n角星和正多边形" class="headerlink" title="7.正n角星和正多边形"></a>7.正n角星和正多边形</h5><h6 id="7-1：方法封装"><a href="#7-1：方法封装" class="headerlink" title="7.1：方法封装"></a>7.1：方法封装</h6><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>画正n角星的路径:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@param num 角数</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@param R   外接圆半径</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@return 画正n角星的路径</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">Path regularStarPath(<span class="built_in">int</span> <span class="built_in">num</span>, <span class="built_in">double</span> R) &#123;</span><br><span class="line">  <span class="built_in">double</span> degA, degB;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">num</span> % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//奇数和偶数角区别对待</span></span><br><span class="line">    degA = <span class="number">360</span> / <span class="built_in">num</span> / <span class="number">2</span> / <span class="number">2</span>;</span><br><span class="line">    degB = <span class="number">180</span> - degA - <span class="number">360</span> / <span class="built_in">num</span> / <span class="number">2</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    degA = <span class="number">360</span> / <span class="built_in">num</span> / <span class="number">2</span>;</span><br><span class="line">    degB = <span class="number">180</span> - degA - <span class="number">360</span> / <span class="built_in">num</span> / <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">double</span> r = R * sin(_rad(degA)) / sin(_rad(degB));</span><br><span class="line">  <span class="keyword">return</span> nStarPath(<span class="built_in">num</span>, R, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>画正n边形的路径</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@param num 边数</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@param R   外接圆半径</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@return 画正n边形的路径</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">Path regularPolygonPath(<span class="built_in">int</span> <span class="built_in">num</span>, <span class="built_in">double</span> R) &#123;</span><br><span class="line">  <span class="built_in">double</span> r = R * cos(_rad(<span class="number">360</span> / <span class="built_in">num</span> / <span class="number">2</span>)); <span class="comment">//!!一点解决</span></span><br><span class="line">  <span class="keyword">return</span> nStarPath(<span class="built_in">num</span>, R, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h6 id="7-2-批量绘制："><a href="#7-2-批量绘制：" class="headerlink" title="7.2.批量绘制："></a>7.2.批量绘制：</h6><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">canvas.translate(<span class="number">0</span>, <span class="number">320</span>);</span><br><span class="line"></span><br><span class="line">canvas.save();<span class="comment">//绘制n角星</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">5</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  canvas.translate(<span class="number">64</span>, <span class="number">0</span>);</span><br><span class="line">  canvas.drawPath(nStarPath(i, <span class="number">30</span>, <span class="number">15</span>), mPaint);</span><br><span class="line">&#125;</span><br><span class="line">canvas.restore();</span><br><span class="line"></span><br><span class="line">canvas.translate(<span class="number">0</span>, <span class="number">70</span>);</span><br><span class="line">canvas.save();<span class="comment">//绘制正n角星</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">5</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  canvas.translate(<span class="number">64</span>, <span class="number">0</span>);</span><br><span class="line">  canvas.drawPath(regularStarPath(i, <span class="number">30</span>), mPaint);</span><br><span class="line">&#125;</span><br><span class="line">canvas.restore();</span><br><span class="line"></span><br><span class="line">canvas.translate(<span class="number">0</span>, <span class="number">70</span>);</span><br><span class="line">canvas.save();<span class="comment">//绘制正n边形</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">5</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  canvas.translate(<span class="number">64</span>, <span class="number">0</span>);</span><br><span class="line">  canvas.drawPath(regularPolygonPath(i, <span class="number">30</span>), mPaint);</span><br><span class="line">&#125;</span><br><span class="line">canvas.restore();</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/11.png" alt="n角星与n边形.png"></p><hr><h5 id="8-状态控制，点击随机色"><a href="#8-状态控制，点击随机色" class="headerlink" title="8.状态控制，点击随机色"></a>8.状态控制，点击随机色</h5><blockquote><p>第一个按钮的fab点击更改数字，这里换成颜色试一下：</p></blockquote><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-----------main.dart-------------------</span></span><br><span class="line">  Color _color = Colors.black;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> _changeColor() &#123;</span><br><span class="line">    setState(() &#123;</span><br><span class="line">      _color=randomRGB();</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  body: CustomPaint(</span><br><span class="line">        painter: StarView(context,_color),</span><br><span class="line">      ),</span><br><span class="line">      floatingActionButton: FloatingActionButton(</span><br><span class="line">        onPressed: _changeColor,</span><br><span class="line">        tooltip: <span class="string">'Increment'</span>,</span><br><span class="line">        child: Icon(Icons.<span class="built_in">add</span>),</span><br><span class="line">      ),</span><br><span class="line"><span class="comment">//-----------随机颜色-------------------</span></span><br><span class="line">Color randomRGB()&#123;</span><br><span class="line">  Random <span class="built_in">random</span> = <span class="keyword">new</span> Random();</span><br><span class="line">  <span class="built_in">int</span> r = <span class="number">30</span> + <span class="built_in">random</span>.nextInt(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">int</span> g = <span class="number">30</span> + <span class="built_in">random</span>.nextInt(<span class="number">200</span>);</span><br><span class="line">  <span class="built_in">int</span> b = <span class="number">30</span> + <span class="built_in">random</span>.nextInt(<span class="number">200</span>);</span><br><span class="line">  <span class="keyword">return</span> Color.fromARGB(<span class="number">255</span>, r, g, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-----------star_view.dart-------------------   </span></span><br><span class="line"> StarView(<span class="keyword">this</span>.context,Color <span class="built_in">color</span>) &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">color</span>);</span><br><span class="line">    mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">    mPaint.<span class="built_in">color</span> = <span class="built_in">color</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><img src="http://toly1994328.gitee.io/photo/flutter/seven_day/01/12.png" alt="点击改变状态.gif"></p><hr><h4 id="五、汇集一下今天的mark"><a href="#五、汇集一下今天的mark" class="headerlink" title="五、汇集一下今天的mark"></a>五、汇集一下今天的mark</h4><blockquote><p>经过初始项目的分析以及Dart方言的简单入门,再加上Canvas的绘制<br>基本上熟悉了Dart的语法与Flutter的套路(和React很像)，第一天就这样吧</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.<span class="keyword">set</span>State和React这是一模一样，mark一下，估计会刷新界面</span><br><span class="line"><span class="params">----</span>经过测试，是的，调用<span class="keyword">set</span>State会重新绘制界面，和React一样</span><br></pre></td></tr></table></figure><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span><span class="type">MyHomePage</span>也是<span class="type">StatefulWidget</span>家的,第一句话感觉挺诡异，先mark一下</span><br><span class="line">        <span class="class"><span class="keyword">class</span> <span class="title">MyHomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">         <span class="type">MyHomePage</span>(&#123;<span class="type">Key</span> key, <span class="keyword">this</span>.title&#125;) : <span class="keyword">super</span>(key: key);</span><br><span class="line">         </span><br><span class="line">----根据继承的语法以及&#123;&#125;的可选参数，不难理解,key是从老爸那拿的</span><br></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3.现在焦点应该汇聚在StatefulWidget身上，很多地方都出现了,<span class="keyword">mark</span>一下</span><br><span class="line">---保持<span class="keyword">mark</span></span><br><span class="line"></span><br><span class="line">4.canvas竟然没办法画文字,这不科学，<span class="keyword">mark</span>一下</span><br><span class="line">---保持<span class="keyword">mark</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Flutter七日游第一天：2018-12-16-天气：冷&quot;&gt;&lt;a href=&quot;#Flutter七日游第一天：2018-12-16-天气：冷&quot; class=&quot;headerlink&quot; title=&quot;Flutter七日游第一天：2018-12-16 天气：冷&quot;&gt;&lt;/a&gt;&lt;code&gt;Flutter七日游第一天：2018-12-16 天气：冷&lt;/code&gt;&lt;/h4&gt;&lt;h4 id=&quot;零前言：&quot;&gt;&lt;a href=&quot;#零前言：&quot; class=&quot;headerlink&quot; title=&quot;零前言：&quot;&gt;&lt;/a&gt;零前言：&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;作为一名资深安卓业余爱好者(自诩),感觉应该入一下Flutter的坑了，&lt;br&gt;不管怎么说,新技术多少要了解一点,本系列就作为我的学习笔记吧&lt;br&gt;先把今天入坑的感觉写一写：  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight lsl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;环境的搭建前人把雷踩得差不多了，也不是很麻烦&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;什么都没干呢，TM安装包&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;M...真把我吓一跳-----于是Flutter的&lt;span class=&quot;string&quot;&gt;&quot;胖子&quot;&lt;/span&gt;形象深入我心（不过非debug版能在&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;M之内，还是可以接受的）  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;Flutter热加载爽到爆，对于喜欢用真机的我，以前每次修改后--&amp;gt;确定安装--&amp;gt;打开...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4.&lt;/span&gt;单引号亮了，总算能像写其他语言那样少按个Shift了，字符串插值也很良心&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;5.&lt;/span&gt;flutter支持canvas,so我的四大战将(canvas,path,paint,贝塞尔)又能大显身手了,不过Api略有不同，也略显单薄&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6.&lt;/span&gt;程序员有三件法宝：Ctrl+ Z(大胆改) , debug(细心查) , 类比（善分析）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Flutter七日" scheme="http://blog.toly1994.com/categories/Flutter%E4%B8%83%E6%97%A5/"/>
    
    
      <category term="flutter教程" scheme="http://blog.toly1994.com/tags/flutter%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
